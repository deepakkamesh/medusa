

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jul 16 11:57:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.35
    62                           ; Generated 05/05/2021 GMT
    63                           ; 
    64                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F26K22 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	idataCOMRAM
    98  001CDC                     __pidataCOMRAM:
    99                           	callstack 0
   100                           
   101                           ;initializer for _PingInterval
   102  001CDC  01                 	db	1
   103                           
   104                           ;initializer for _DEFAULT_PIPE_ADDR
   105  001CDD  68                 	db	104
   106  001CDE  65                 	db	101
   107  001CDF  6C                 	db	108
   108  001CE0  6C                 	db	108
   109  001CE1  6F                 	db	111
   110  001CE2  00                 	db	0
   111                           
   112                           ;initializer for _BoardAddress
   113  001CE3  FF                 	db	255
   114  001CE4  FF                 	db	255
   115  001CE5  FF                 	db	255
   116                           
   117                           	psect	smallconst
   118  001000                     __psmallconst:
   119                           	callstack 0
   120  001000  00                 	db	0
   121  001001                     _spi1_configuration:
   122                           	callstack 0
   123  001001  00                 	db	0
   124  001002  40                 	db	64
   125  001003  01                 	db	1
   126  001004  00                 	db	0
   127  001005                     __end_of_spi1_configuration:
   128                           	callstack 0
   129  0000                     _T1CON	set	4045
   130  0000                     _TMR1L	set	4046
   131  0000                     _TMR1H	set	4047
   132  0000                     _ANSELA	set	3896
   133  0000                     _ANSELB	set	3897
   134  0000                     _ANSELC	set	3898
   135  0000                     _LATA	set	3977
   136  001005  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           	psect	nvCOMRAM
   139  000044                     __pnvCOMRAM:
   140                           	callstack 0
   141  000044                     _TMR1_InterruptHandler:
   142                           	callstack 0
   143  000044                     	ds	2
   144  000046                     _timer1ReloadVal:
   145                           	callstack 0
   146  000046                     	ds	2
   147  0000                     _TMR1	set	4046
   148  0000                     _LATCbits	set	3979
   149  0000                     _LATAbits	set	3977
   150  0000                     _T1GCONbits	set	4044
   151  0000                     _T1CONbits	set	4045
   152  0000                     _SSP1CON1bits	set	4038
   153  0000                     _TRISCbits	set	3988
   154  0000                     _TRISA	set	3986
   155  0000                     _LATC	set	3979
   156  0000                     _LATB	set	3978
   157  0000                     _OSCTUNE	set	3995
   158  0000                     _PIR1bits	set	3998
   159  0000                     _SSP1CON2	set	4037
   160  0000                     _SSP1CON1	set	4038
   161  0000                     _SSP1STAT	set	4039
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _TRISC	set	3988
   164  0000                     _TRISB	set	3987
   165  0000                     _WPUB	set	3937
   166  0000                     _INTCONbits	set	4082
   167  0000                     _T1GCON	set	4044
   168  0000                     _OSCCON2	set	4050
   169  0000                     _OSCCON	set	4051
   170  0000                     _SSP1BUF	set	4041
   171  0000                     _SSP1ADD	set	4040
   172  0000                     _PIE1bits	set	3997
   173  0000                     _RCONbits	set	4048
   174                           
   175                           ; #config settings
   176                           
   177                           	psect	cinit
   178  001830                     __pcinit:
   179                           	callstack 0
   180  001830                     start_initialization:
   181                           	callstack 0
   182  001830                     __initialization:
   183                           	callstack 0
   184                           
   185                           ; Initialize objects allocated to COMRAM (10 bytes)
   186                           ; load TBLPTR registers with __pidataCOMRAM
   187  001830  0EDC               	movlw	low __pidataCOMRAM
   188  001832  6EF6               	movwf	tblptrl,c
   189  001834  0E1C               	movlw	high __pidataCOMRAM
   190  001836  6EF7               	movwf	tblptrh,c
   191  001838  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   192  00183A  6EF8               	movwf	tblptru,c
   193  00183C  EE00  F03A         	lfsr	0,__pdataCOMRAM
   194  001840  EE10 F00A          	lfsr	1,10
   195  001844                     copy_data0:
   196  001844  0009               	tblrd		*+
   197  001846  CFF5 FFEE          	movff	tablat,postinc0
   198  00184A  50E5               	movf	postdec1,w,c
   199  00184C  50E1               	movf	fsr1l,w,c
   200  00184E  E1FA               	bnz	copy_data0
   201                           
   202                           ; Clear objects allocated to BIGRAM (272 bytes)
   203  001850  EE00  F0D3         	lfsr	0,__pbssBIGRAM
   204  001854  EE11 F010          	lfsr	1,272
   205  001858                     clear_0:
   206  001858  6AEE               	clrf	postinc0,c
   207  00185A  50E5               	movf	postdec1,w,c
   208  00185C  50E1               	movf	fsr1l,w,c
   209  00185E  E1FC               	bnz	clear_0
   210  001860  50E2               	movf	fsr1h,w,c
   211  001862  E1FA               	bnz	clear_0
   212                           
   213                           ; Clear objects allocated to BANK0 (64 bytes)
   214  001864  EE00  F060         	lfsr	0,__pbssBANK0
   215  001868  0E40               	movlw	64
   216  00186A                     clear_1:
   217  00186A  6AEE               	clrf	postinc0,c
   218  00186C  06E8               	decf	wreg,f,c
   219  00186E  E1FD               	bnz	clear_1
   220                           
   221                           ; Clear objects allocated to COMRAM (21 bytes)
   222  001870  EE00  F025         	lfsr	0,__pbssCOMRAM
   223  001874  0E15               	movlw	21
   224  001876                     clear_2:
   225  001876  6AEE               	clrf	postinc0,c
   226  001878  06E8               	decf	wreg,f,c
   227  00187A  E1FD               	bnz	clear_2
   228  00187C                     end_of_initialization:
   229                           	callstack 0
   230  00187C                     __end_of__initialization:
   231                           	callstack 0
   232  00187C  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   233  00187E  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   234  001880  0100               	movlb	0
   235  001882  EFEE  F00D         	goto	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMRAM
   238  000025                     __pbssCOMRAM:
   239                           	callstack 0
   240  000025                     _Ticks:
   241                           	callstack 0
   242  000025                     	ds	4
   243  000029                     _config:
   244                           	callstack 0
   245  000029                     	ds	17
   246                           
   247                           	psect	dataCOMRAM
   248  00003A                     __pdataCOMRAM:
   249                           	callstack 0
   250  00003A                     _PingInterval:
   251                           	callstack 0
   252  00003A                     	ds	1
   253  00003B                     _DEFAULT_PIPE_ADDR:
   254                           	callstack 0
   255  00003B                     	ds	6
   256  000041                     _BoardAddress:
   257                           	callstack 0
   258  000041                     	ds	3
   259                           
   260                           	psect	bssBANK0
   261  000060                     __pbssBANK0:
   262                           	callstack 0
   263  000060                     _bufferRX:
   264                           	callstack 0
   265  000060                     	ds	32
   266  000080                     _bufferTX:
   267                           	callstack 0
   268  000080                     	ds	32
   269                           
   270                           	psect	bssBIGRAM
   271  0000D3                     __pbssBIGRAM:
   272                           	callstack 0
   273  0000D3                     _packetsTX:
   274                           	callstack 0
   275  0000D3                     	ds	272
   276                           
   277                           	psect	cstackBANK0
   278  0000A0                     __pcstackBANK0:
   279                           	callstack 0
   280  0000A0                     QueueTXPacket@buffer:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x0
   284  0000A0                     	ds	2
   285  0000A2                     QueueTXPacket@sz:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x2
   289  0000A2                     	ds	1
   290  0000A3                     SendError@errorCode:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x3
   294  0000A3                     	ds	1
   295  0000A4                     SendError@i:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x4
   299  0000A4                     	ds	1
   300  0000A5                     ProcessActionRequest@data:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x5
   304  0000A5                     	ds	2
   305  0000A7                     ??_ProcessActionRequest:
   306                           
   307                           ; 1 bytes @ 0x7
   308  0000A7                     	ds	2
   309  0000A9                     ProcessAckPayload@buffer:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x9
   313  0000A9                     	ds	2
   314  0000AB                     ProcessAckPayload@sz:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xB
   318  0000AB                     	ds	1
   319  0000AC                     ??_ProcessAckPayload:
   320                           
   321                           ; 1 bytes @ 0xC
   322  0000AC                     	ds	2
   323  0000AE                     ProcessAckPayload@data:
   324                           	callstack 0
   325                           
   326                           ; 32 bytes @ 0xE
   327  0000AE                     	ds	32
   328  0000CE                     ProcessAckPayload@actionID:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x2E
   332  0000CE                     	ds	1
   333  0000CF                     ProcessAckPayload@pktType:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x2F
   337  0000CF                     	ds	1
   338  0000D0                     HandlePacketLoop@sz:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x30
   342  0000D0                     	ds	1
   343  0000D1                     HandlePacketLoop@status:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x31
   347  0000D1                     	ds	1
   348  0000D2                     HandlePacketLoop@i:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x32
   352  0000D2                     	ds	1
   353                           
   354                           	psect	cstackCOMRAM
   355  000001                     __pcstackCOMRAM:
   356                           	callstack 0
   357  000001                     ?___llmod:
   358                           	callstack 0
   359  000001                     TMR1_WriteTimer@timerVal:
   360                           	callstack 0
   361  000001                     i2SuperMemCpy@dest:
   362                           	callstack 0
   363  000001                     i2memcpy@d1:
   364                           	callstack 0
   365  000001                     ___llmod@dividend:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x0
   369  000001                     	ds	2
   370  000003                     i2SuperMemCpy@destStart:
   371                           	callstack 0
   372  000003                     i2memcpy@s1:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x2
   376  000003                     	ds	1
   377  000004                     i2SuperMemCpy@src:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x3
   381  000004                     	ds	1
   382  000005                     i2memcpy@n:
   383                           	callstack 0
   384  000005                     ___llmod@divisor:
   385                           	callstack 0
   386                           
   387                           ; 4 bytes @ 0x4
   388  000005                     	ds	1
   389  000006                     i2SuperMemCpy@srcStart:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x5
   393  000006                     	ds	1
   394  000007                     i2SuperMemCpy@sz:
   395                           	callstack 0
   396  000007                     i2memcpy@d:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x6
   400  000007                     	ds	1
   401  000008                     ??i2_SuperMemCpy:
   402                           
   403                           ; 1 bytes @ 0x7
   404  000008                     	ds	1
   405  000009                     ___llmod@counter:
   406                           	callstack 0
   407  000009                     i2memcpy@s:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x8
   411  000009                     	ds	2
   412  00000B                     i2memcpy@tmp:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0xA
   416  00000B                     	ds	1
   417  00000C                     i2SuperMemCpy@i:
   418                           	callstack 0
   419  00000C                     i2QueueTXPacket@buffer:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0xB
   423  00000C                     	ds	2
   424  00000E                     i2QueueTXPacket@sz:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0xD
   428  00000E                     	ds	1
   429  00000F                     i2QueueTXPacket@i:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0xE
   433  00000F                     	ds	1
   434  000010                     ??_INTERRUPT_InterruptManager:
   435                           
   436                           ; 1 bytes @ 0xF
   437  000010                     	ds	8
   438  000018                     ??_SPI1_Open:
   439  000018                     SPI1_ExchangeByte@data:
   440                           	callstack 0
   441  000018                     TMR1_SetInterruptHandler@InterruptHandler:
   442                           	callstack 0
   443  000018                     VerifyBoardAddress@bufferRX:
   444                           	callstack 0
   445  000018                     SuperMemCpy@dest:
   446                           	callstack 0
   447  000018                     memcpy@d1:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x17
   451  000018                     	ds	1
   452  000019                     SPI1_Open@spi1UniqueConfiguration:
   453                           	callstack 0
   454  000019                     nrf24_write_register@value:
   455                           	callstack 0
   456  000019                     nrf24_read_register@mnemonic_addr:
   457                           	callstack 0
   458  000019                     nrf24_read_dynamic_payload_length@byte0:
   459                           	callstack 0
   460  000019                     nrf24_write_buff@buffer:
   461                           	callstack 0
   462  000019                     nrf24_read_buff@buffer:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x18
   466  000019                     	ds	1
   467  00001A                     ??_VerifyBoardAddress:
   468  00001A                     SuperMemCpy@destStart:
   469                           	callstack 0
   470  00001A                     nrf24_write_register@mnemonic_addr:
   471                           	callstack 0
   472  00001A                     nrf24_read_register@byte0:
   473                           	callstack 0
   474  00001A                     memcpy@s1:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x19
   478  00001A                     	ds	1
   479  00001B                     ??_nrf24_flush_tx_rx:
   480  00001B                     nrf24_write_buff@bytes:
   481                           	callstack 0
   482  00001B                     nrf24_read_buff@bytes:
   483                           	callstack 0
   484  00001B                     SuperMemCpy@src:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x1A
   488  00001B                     	ds	1
   489  00001C                     nrf24_write_buff@mnemonic_addr:
   490                           	callstack 0
   491  00001C                     nrf24_read_buff@mnemonic_addr:
   492                           	callstack 0
   493  00001C                     memcpy@n:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x1B
   497  00001C                     	ds	1
   498  00001D                     SuperMemCpy@srcStart:
   499                           	callstack 0
   500  00001D                     nrf24_write_buff@i:
   501                           	callstack 0
   502  00001D                     nrf24_read_buff@i:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x1C
   506  00001D                     	ds	1
   507  00001E                     SuperMemCpy@sz:
   508                           	callstack 0
   509  00001E                     memcpy@tmp:
   510                           	callstack 0
   511  00001E                     VerifyBoardAddress@i:
   512                           	callstack 0
   513  00001E                     nrf24_send_rf_data@buffer:
   514                           	callstack 0
   515  00001E                     nrf24_read_rf_data@buffer:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x1D
   519  00001E                     	ds	1
   520  00001F                     ??_SuperMemCpy:
   521  00001F                     memcpy@d:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x1E
   525  00001F                     	ds	1
   526  000020                     nrf24_send_rf_data@sz:
   527                           	callstack 0
   528  000020                     nrf24_read_rf_data@sz:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x1F
   532  000020                     	ds	1
   533  000021                     memcpy@s:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x20
   537  000021                     	ds	2
   538  000023                     InitRadio@i:
   539                           	callstack 0
   540  000023                     QueueTXPacket@i:
   541                           	callstack 0
   542  000023                     ReloadConfig@ard:
   543                           	callstack 0
   544  000023                     SuperMemCpy@i:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x22
   548  000023                     	ds	1
   549  000024                     ProcessActionRequest@actionID:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x23
   553  000024                     	ds	1
   554  000025                     
   555                           ; 1 bytes @ 0x24
   556 ;;
   557 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   558 ;;
   559 ;; *************** function _main *****************
   560 ;; Defined at:
   561 ;;		line 11 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels required when called: 12
   581 ;; This function calls:
   582 ;;		_HandlePacketLoop
   583 ;;		_InitRadio
   584 ;;		_SYSTEM_Initialize
   585 ;;		_TMR1_SetInterruptHandler
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text0
   592  001BDC                     __ptext0:
   593                           	callstack 0
   594  001BDC                     _main:
   595                           	callstack 19
   596  001BDC                     
   597                           ;main.c: 13:     SYSTEM_Initialize();
   598  001BDC  EC4B  F00E         	call	_SYSTEM_Initialize	;wreg free
   599  001BE0                     
   600                           ;main.c: 20:     (INTCONbits.GIE = 1);
   601  001BE0  8EF2               	bsf	242,7,c	;volatile
   602  001BE2                     
   603                           ;main.c: 26:     (INTCONbits.PEIE = 1);
   604  001BE2  8CF2               	bsf	242,6,c	;volatile
   605                           
   606                           ;main.c: 30:     TMR1_SetInterruptHandler(TimerInterruptHandler);
   607  001BE4  0E62               	movlw	low _TimerInterruptHandler
   608  001BE6  6E18               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   609  001BE8  0E1A               	movlw	high _TimerInterruptHandler
   610  001BEA  6E19               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   611  001BEC  EC73  F00E         	call	_TMR1_SetInterruptHandler	;wreg free
   612  001BF0                     
   613                           ;main.c: 32:     InitRadio();
   614  001BF0  EC39  F009         	call	_InitRadio	;wreg free
   615  001BF4                     l2726:
   616                           
   617                           ;main.c: 35:         HandlePacketLoop();
   618  001BF4  EC03  F008         	call	_HandlePacketLoop	;wreg free
   619  001BF8                     
   620                           ;main.c: 36:         __nop();
   621  001BF8  F000               	nop	
   622  001BFA  EFFA  F00D         	goto	l2726
   623  001BFE  EF3E  F000         	goto	start
   624  001C02                     __end_of_main:
   625                           	callstack 0
   626                           
   627 ;; *************** function _SYSTEM_Initialize *****************
   628 ;; Defined at:
   629 ;;		line 50 in file "mcc_generated_files/mcc.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 8
   650 ;; This function calls:
   651 ;;		_INTERRUPT_Initialize
   652 ;;		_OSCILLATOR_Initialize
   653 ;;		_PIN_MANAGER_Initialize
   654 ;;		_SPI1_Initialize
   655 ;;		_TMR1_Initialize
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text1
   662  001C96                     __ptext1:
   663                           	callstack 0
   664  001C96                     _SYSTEM_Initialize:
   665                           	callstack 22
   666  001C96                     
   667                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   668  001C96  EC78  F00E         	call	_INTERRUPT_Initialize	;wreg free
   669  001C9A                     
   670                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
   671  001C9A  EC56  F00E         	call	_SPI1_Initialize	;wreg free
   672  001C9E                     
   673                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
   674  001C9E  ECAF  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
   675  001CA2                     
   676                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
   677  001CA2  EC67  F00E         	call	_OSCILLATOR_Initialize	;wreg free
   678  001CA6                     
   679                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
   680  001CA6  ECC5  F00D         	call	_TMR1_Initialize	;wreg free
   681  001CAA  0012               	return		;funcret
   682  001CAC                     __end_of_SYSTEM_Initialize:
   683                           	callstack 0
   684                           
   685 ;; *************** function _TMR1_Initialize *****************
   686 ;; Defined at:
   687 ;;		line 64 in file "mcc_generated_files/tmr1.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 7
   708 ;; This function calls:
   709 ;;		_TMR1_SetInterruptHandler
   710 ;; This function is called by:
   711 ;;		_SYSTEM_Initialize
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text2
   716  001B8A                     __ptext2:
   717                           	callstack 0
   718  001B8A                     _TMR1_Initialize:
   719                           	callstack 22
   720  001B8A                     
   721                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
   722  001B8A  0E00               	movlw	0
   723  001B8C  6ECC               	movwf	204,c	;volatile
   724                           
   725                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x0B;
   726  001B8E  0E0B               	movlw	11
   727  001B90  6ECF               	movwf	207,c	;volatile
   728                           
   729                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xDC;
   730  001B92  0EDC               	movlw	220
   731  001B94  6ECE               	movwf	206,c	;volatile
   732  001B96                     
   733                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
   734  001B96  CFCE F046          	movff	4046,_timer1ReloadVal	;volatile
   735  001B9A  CFCF F047          	movff	4047,_timer1ReloadVal+1	;volatile
   736  001B9E                     
   737                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
   738  001B9E  909E               	bcf	158,0,c	;volatile
   739  001BA0                     
   740                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
   741  001BA0  809D               	bsf	157,0,c	;volatile
   742  001BA2                     
   743                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
   744  001BA2  0EF4               	movlw	low _TMR1_DefaultInterruptHandler
   745  001BA4  6E18               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   746  001BA6  0E1C               	movlw	high _TMR1_DefaultInterruptHandler
   747  001BA8  6E19               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   748  001BAA  EC73  F00E         	call	_TMR1_SetInterruptHandler	;wreg free
   749  001BAE                     
   750                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x21;
   751  001BAE  0E21               	movlw	33
   752  001BB0  6ECD               	movwf	205,c	;volatile
   753  001BB2  0012               	return		;funcret
   754  001BB4                     __end_of_TMR1_Initialize:
   755                           	callstack 0
   756                           
   757 ;; *************** function _TMR1_SetInterruptHandler *****************
   758 ;; Defined at:
   759 ;;		line 172 in file "mcc_generated_files/tmr1.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  InterruptHan    2   23[COMRAM] PTR FTN()void 
   762 ;;		 -> TimerInterruptHandler(1), TMR1_DefaultInterruptHandler(1), 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;Total ram usage:        2 bytes
   779 ;; Hardware stack levels used: 1
   780 ;; Hardware stack levels required when called: 6
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_TMR1_Initialize
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text3
   790  001CE6                     __ptext3:
   791                           	callstack 0
   792  001CE6                     _TMR1_SetInterruptHandler:
   793                           	callstack 24
   794  001CE6                     
   795                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
   796  001CE6  C018  F044         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
   797  001CEA  C019  F045         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
   798  001CEE  0012               	return		;funcret
   799  001CF0                     __end_of_TMR1_SetInterruptHandler:
   800                           	callstack 0
   801                           
   802 ;; *************** function _SPI1_Initialize *****************
   803 ;; Defined at:
   804 ;;		line 62 in file "mcc_generated_files/spi1.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 6
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_SYSTEM_Initialize
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text4
   833  001CAC                     __ptext4:
   834                           	callstack 0
   835  001CAC                     _SPI1_Initialize:
   836                           	callstack 23
   837  001CAC                     
   838                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
   839  001CAC  0E40               	movlw	64
   840  001CAE  6EC7               	movwf	199,c	;volatile
   841                           
   842                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
   843  001CB0  0E00               	movlw	0
   844  001CB2  6EC6               	movwf	198,c	;volatile
   845                           
   846                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
   847  001CB4  0E01               	movlw	1
   848  001CB6  6EC8               	movwf	200,c	;volatile
   849  001CB8                     
   850                           ;mcc_generated_files/spi1.c: 68:     TRISCbits.TRISC3 = 0;
   851  001CB8  9694               	bcf	148,3,c	;volatile
   852  001CBA                     
   853                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
   854  001CBA  9AC6               	bcf	198,5,c	;volatile
   855  001CBC  0012               	return		;funcret
   856  001CBE                     __end_of_SPI1_Initialize:
   857                           	callstack 0
   858                           
   859 ;; *************** function _PIN_MANAGER_Initialize *****************
   860 ;; Defined at:
   861 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 6
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_SYSTEM_Initialize
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text5
   890  001B5E                     __ptext5:
   891                           	callstack 0
   892  001B5E                     _PIN_MANAGER_Initialize:
   893                           	callstack 23
   894  001B5E                     
   895                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   896  001B5E  0E00               	movlw	0
   897  001B60  6E89               	movwf	137,c	;volatile
   898                           
   899                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   900  001B62  0E00               	movlw	0
   901  001B64  6E8A               	movwf	138,c	;volatile
   902                           
   903                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   904  001B66  0E00               	movlw	0
   905  001B68  6E8B               	movwf	139,c	;volatile
   906                           
   907                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFD;
   908  001B6A  0EFD               	movlw	253
   909  001B6C  6E92               	movwf	146,c	;volatile
   910  001B6E                     
   911                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   912  001B6E  6893               	setf	147,c	;volatile
   913                           
   914                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD1;
   915  001B70  0ED1               	movlw	209
   916  001B72  6E94               	movwf	148,c	;volatile
   917                           
   918                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC4;
   919  001B74  0EC4               	movlw	196
   920  001B76  010F               	movlb	15	; () banked
   921  001B78  6F3A               	movwf	58,b	;volatile
   922                           
   923                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
   924  001B7A  0E3F               	movlw	63
   925  001B7C  6F39               	movwf	57,b	;volatile
   926                           
   927                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2D;
   928  001B7E  0E2D               	movlw	45
   929  001B80  6F38               	movwf	56,b	;volatile
   930                           
   931                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   932  001B82  0E00               	movlw	0
   933  001B84  6E61               	movwf	97,c	;volatile
   934  001B86                     
   935                           ; BSR set to: 15
   936                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   937  001B86  8EF1               	bsf	241,7,c	;volatile
   938  001B88                     
   939                           ; BSR set to: 15
   940  001B88  0012               	return		;funcret
   941  001B8A                     __end_of_PIN_MANAGER_Initialize:
   942                           	callstack 0
   943                           
   944 ;; *************** function _OSCILLATOR_Initialize *****************
   945 ;; Defined at:
   946 ;;		line 60 in file "mcc_generated_files/mcc.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 6
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_SYSTEM_Initialize
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text6
   975  001CCE                     __ptext6:
   976                           	callstack 0
   977  001CCE                     _OSCILLATOR_Initialize:
   978                           	callstack 23
   979  001CCE                     
   980                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x30;
   981  001CCE  0E30               	movlw	48
   982  001CD0  6ED3               	movwf	211,c	;volatile
   983                           
   984                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
   985  001CD2  0E04               	movlw	4
   986  001CD4  6ED2               	movwf	210,c	;volatile
   987                           
   988                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
   989  001CD6  0E00               	movlw	0
   990  001CD8  6E9B               	movwf	155,c	;volatile
   991  001CDA  0012               	return		;funcret
   992  001CDC                     __end_of_OSCILLATOR_Initialize:
   993                           	callstack 0
   994                           
   995 ;; *************** function _INTERRUPT_Initialize *****************
   996 ;; Defined at:
   997 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		None
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 6
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_SYSTEM_Initialize
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text7
  1026  001CF0                     __ptext7:
  1027                           	callstack 0
  1028  001CF0                     _INTERRUPT_Initialize:
  1029                           	callstack 23
  1030  001CF0                     
  1031                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1032  001CF0  9ED0               	bcf	208,7,c	;volatile
  1033  001CF2  0012               	return		;funcret
  1034  001CF4                     __end_of_INTERRUPT_Initialize:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _InitRadio *****************
  1038 ;; Defined at:
  1039 ;;		line 26 in file "handler.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  i               1   34[COMRAM] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;Total ram usage:        1 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 8
  1060 ;; This function calls:
  1061 ;;		_memcpy
  1062 ;;		_nrf24_rf_init
  1063 ;;		_nrf24_write_buff
  1064 ;;		_nrf24_write_register
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text8
  1071  001272                     __ptext8:
  1072                           	callstack 0
  1073  001272                     _InitRadio:
  1074                           	callstack 22
  1075  001272                     
  1076                           ;handler.c: 27:     nrf24_rf_init();
  1077  001272  EC5F  F00E         	call	_nrf24_rf_init	;wreg free
  1078  001276                     
  1079                           ;handler.c: 29:     nrf24_write_buff(0x10, DEFAULT_PIPE_ADDR, 5);
  1080  001276  0E3B               	movlw	low _DEFAULT_PIPE_ADDR
  1081  001278  6E19               	movwf	nrf24_write_buff@buffer^0,c
  1082  00127A  0E00               	movlw	high _DEFAULT_PIPE_ADDR
  1083  00127C  6E1A               	movwf	(nrf24_write_buff@buffer+1)^0,c
  1084  00127E  0E05               	movlw	5
  1085  001280  6E1B               	movwf	nrf24_write_buff@bytes^0,c
  1086  001282  0E10               	movlw	16
  1087  001284  EC56  F00D         	call	_nrf24_write_buff
  1088  001288                     
  1089                           ;handler.c: 30:     nrf24_write_buff(0x0A, DEFAULT_PIPE_ADDR, 5);
  1090  001288  0E3B               	movlw	low _DEFAULT_PIPE_ADDR
  1091  00128A  6E19               	movwf	nrf24_write_buff@buffer^0,c
  1092  00128C  0E00               	movlw	high _DEFAULT_PIPE_ADDR
  1093  00128E  6E1A               	movwf	(nrf24_write_buff@buffer+1)^0,c
  1094  001290  0E05               	movlw	5
  1095  001292  6E1B               	movwf	nrf24_write_buff@bytes^0,c
  1096  001294  0E0A               	movlw	10
  1097  001296  EC56  F00D         	call	_nrf24_write_buff
  1098  00129A                     
  1099                           ;handler.c: 32:     nrf24_write_register(0x00, 0b1111010);
  1100  00129A  0E7A               	movlw	122
  1101  00129C  6E19               	movwf	nrf24_write_register@value^0,c
  1102  00129E  0E00               	movlw	0
  1103  0012A0  EC09  F00B         	call	_nrf24_write_register
  1104  0012A4                     
  1105                           ;handler.c: 34:     nrf24_write_register(0x01, 0b1);
  1106  0012A4  0E01               	movlw	1
  1107  0012A6  6E19               	movwf	nrf24_write_register@value^0,c
  1108  0012A8  0E01               	movlw	1
  1109  0012AA  EC09  F00B         	call	_nrf24_write_register
  1110  0012AE                     
  1111                           ;handler.c: 36:     nrf24_write_register(0x02, 0b1);
  1112  0012AE  0E01               	movlw	1
  1113  0012B0  6E19               	movwf	nrf24_write_register@value^0,c
  1114  0012B2  0E02               	movlw	2
  1115  0012B4  EC09  F00B         	call	_nrf24_write_register
  1116  0012B8                     
  1117                           ;handler.c: 38:     nrf24_write_register(0x03, 0b11);
  1118  0012B8  0E03               	movlw	3
  1119  0012BA  6E19               	movwf	nrf24_write_register@value^0,c
  1120  0012BC  0E03               	movlw	3
  1121  0012BE  EC09  F00B         	call	_nrf24_write_register
  1122  0012C2                     
  1123                           ;handler.c: 40:     nrf24_write_register(0x04, 0b11011111);
  1124  0012C2  0EDF               	movlw	223
  1125  0012C4  6E19               	movwf	nrf24_write_register@value^0,c
  1126  0012C6  0E04               	movlw	4
  1127  0012C8  EC09  F00B         	call	_nrf24_write_register
  1128  0012CC                     
  1129                           ;handler.c: 42:     nrf24_write_register(0x05, 115);
  1130  0012CC  0E73               	movlw	115
  1131  0012CE  6E19               	movwf	nrf24_write_register@value^0,c
  1132  0012D0  0E05               	movlw	5
  1133  0012D2  EC09  F00B         	call	_nrf24_write_register
  1134  0012D6                     
  1135                           ;handler.c: 44:     nrf24_write_register(0x06, 0b1110);
  1136  0012D6  0E0E               	movlw	14
  1137  0012D8  6E19               	movwf	nrf24_write_register@value^0,c
  1138  0012DA  0E06               	movlw	6
  1139  0012DC  EC09  F00B         	call	_nrf24_write_register
  1140  0012E0                     
  1141                           ;handler.c: 46:     nrf24_write_register(0x1D, 0b110);
  1142  0012E0  0E06               	movlw	6
  1143  0012E2  6E19               	movwf	nrf24_write_register@value^0,c
  1144  0012E4  0E1D               	movlw	29
  1145  0012E6  EC09  F00B         	call	_nrf24_write_register
  1146  0012EA                     
  1147                           ;handler.c: 48:     nrf24_write_register(0x1C, 0b1);
  1148  0012EA  0E01               	movlw	1
  1149  0012EC  6E19               	movwf	nrf24_write_register@value^0,c
  1150  0012EE  0E1C               	movlw	28
  1151  0012F0  EC09  F00B         	call	_nrf24_write_register
  1152  0012F4                     
  1153                           ;handler.c: 49:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1154  0012F4  D000               	nop2		;2 cycle nop
  1155  0012F6                     
  1156                           ;handler.c: 52:     config.IsConfigured = 0;
  1157  0012F6  0E00               	movlw	0
  1158  0012F8  6E29               	movwf	_config^0,c
  1159  0012FA                     
  1160                           ;handler.c: 53:     config.PingInterval = PingInterval;
  1161  0012FA  C03A  F02D         	movff	_PingInterval,_config+4
  1162  0012FE                     
  1163                           ;handler.c: 54:     config.RFChannel = 115;
  1164  0012FE  0E73               	movlw	115
  1165  001300  6E2E               	movwf	(_config+5)^0,c
  1166  001302                     
  1167                           ;handler.c: 55:     memcpy(config.PipeAddr1, DEFAULT_PIPE_ADDR, 5);
  1168  001302  0E2F               	movlw	low (_config+6)
  1169  001304  6E18               	movwf	memcpy@d1^0,c
  1170  001306  0E00               	movlw	high (_config+6)
  1171  001308  6E19               	movwf	(memcpy@d1+1)^0,c
  1172  00130A  0E3B               	movlw	low _DEFAULT_PIPE_ADDR
  1173  00130C  6E1A               	movwf	memcpy@s1^0,c
  1174  00130E  0E00               	movlw	high _DEFAULT_PIPE_ADDR
  1175  001310  6E1B               	movwf	(memcpy@s1+1)^0,c
  1176  001312  0E00               	movlw	0
  1177  001314  6E1D               	movwf	(memcpy@n+1)^0,c
  1178  001316  0E05               	movlw	5
  1179  001318  6E1C               	movwf	memcpy@n^0,c
  1180  00131A  EC95  F00C         	call	_memcpy	;wreg free
  1181  00131E                     
  1182                           ;handler.c: 56:     memcpy(config.PipeAddr2, DEFAULT_PIPE_ADDR, 5);
  1183  00131E  0E34               	movlw	low (_config+11)
  1184  001320  6E18               	movwf	memcpy@d1^0,c
  1185  001322  0E00               	movlw	high (_config+11)
  1186  001324  6E19               	movwf	(memcpy@d1+1)^0,c
  1187  001326  0E3B               	movlw	low _DEFAULT_PIPE_ADDR
  1188  001328  6E1A               	movwf	memcpy@s1^0,c
  1189  00132A  0E00               	movlw	high _DEFAULT_PIPE_ADDR
  1190  00132C  6E1B               	movwf	(memcpy@s1+1)^0,c
  1191  00132E  0E00               	movlw	0
  1192  001330  6E1D               	movwf	(memcpy@n+1)^0,c
  1193  001332  0E05               	movlw	5
  1194  001334  6E1C               	movwf	memcpy@n^0,c
  1195  001336  EC95  F00C         	call	_memcpy	;wreg free
  1196  00133A                     
  1197                           ;handler.c: 57:     memcpy(config.Address,BoardAddress,3);
  1198  00133A  0E2A               	movlw	low (_config+1)
  1199  00133C  6E18               	movwf	memcpy@d1^0,c
  1200  00133E  0E00               	movlw	high (_config+1)
  1201  001340  6E19               	movwf	(memcpy@d1+1)^0,c
  1202  001342  0E41               	movlw	low _BoardAddress
  1203  001344  6E1A               	movwf	memcpy@s1^0,c
  1204  001346  0E00               	movlw	high _BoardAddress
  1205  001348  6E1B               	movwf	(memcpy@s1+1)^0,c
  1206  00134A  0E00               	movlw	0
  1207  00134C  6E1D               	movwf	(memcpy@n+1)^0,c
  1208  00134E  0E03               	movlw	3
  1209  001350  6E1C               	movwf	memcpy@n^0,c
  1210  001352  EC95  F00C         	call	_memcpy	;wreg free
  1211  001356                     
  1212                           ;handler.c: 58:     config.ARD = 0xA;
  1213  001356  0E0A               	movlw	10
  1214  001358  6E39               	movwf	(_config+16)^0,c
  1215  00135A                     
  1216                           ;handler.c: 62:     for (uint8_t i = 0; i < 8; i++) {
  1217  00135A  0E00               	movlw	0
  1218  00135C  6E23               	movwf	InitRadio@i^0,c
  1219  00135E                     l2646:
  1220                           
  1221                           ;handler.c: 63:         packetsTX[i].free = 1;
  1222  00135E  5023               	movf	InitRadio@i^0,w,c
  1223  001360  0D22               	mullw	34
  1224  001362  0EF3               	movlw	low (_packetsTX+32)
  1225  001364  24F3               	addwf	243,w,c
  1226  001366  6ED9               	movwf	fsr2l,c
  1227  001368  0E00               	movlw	high (_packetsTX+32)
  1228  00136A  20F4               	addwfc	prodh,w,c
  1229  00136C  6EDA               	movwf	fsr2h,c
  1230  00136E  0E01               	movlw	1
  1231  001370  6EDF               	movwf	indf2,c
  1232                           
  1233                           ;handler.c: 64:         packetsTX[i].size = 0;
  1234  001372  5023               	movf	InitRadio@i^0,w,c
  1235  001374  0D22               	mullw	34
  1236  001376  0EF4               	movlw	low (_packetsTX+33)
  1237  001378  24F3               	addwf	243,w,c
  1238  00137A  6ED9               	movwf	fsr2l,c
  1239  00137C  0E00               	movlw	high (_packetsTX+33)
  1240  00137E  20F4               	addwfc	prodh,w,c
  1241  001380  6EDA               	movwf	fsr2h,c
  1242  001382  0E00               	movlw	0
  1243  001384  6EDF               	movwf	indf2,c
  1244  001386                     
  1245                           ;handler.c: 65:     }
  1246  001386  2A23               	incf	InitRadio@i^0,f,c
  1247  001388  0E07               	movlw	7
  1248  00138A  6423               	cpfsgt	InitRadio@i^0,c
  1249  00138C  EFCA  F009         	goto	u1041
  1250  001390  EFCC  F009         	goto	u1040
  1251  001394                     u1041:
  1252  001394  EFAF  F009         	goto	l2646
  1253  001398                     u1040:
  1254  001398  0012               	return		;funcret
  1255  00139A                     __end_of_InitRadio:
  1256                           	callstack 0
  1257                           
  1258 ;; *************** function _nrf24_rf_init *****************
  1259 ;; Defined at:
  1260 ;;		line 70 in file "../lib/nrf24_lib.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; Hardware stack levels required when called: 7
  1281 ;; This function calls:
  1282 ;;		_SPI1_Open
  1283 ;; This function is called by:
  1284 ;;		_InitRadio
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text9
  1289  001CBE                     __ptext9:
  1290                           	callstack 0
  1291  001CBE                     _nrf24_rf_init:
  1292                           	callstack 22
  1293  001CBE                     
  1294                           ;../lib/nrf24_lib.c: 71:     SPI1_Open(SPI1_DEFAULT);
  1295  001CBE  0E00               	movlw	0
  1296  001CC0  ECCD  F009         	call	_SPI1_Open
  1297  001CC4  9294               	bcf	148,1,c	;volatile
  1298  001CC6  9494               	bcf	148,2,c	;volatile
  1299  001CC8  828B               	bsf	139,1,c	;volatile
  1300  001CCA  948B               	bcf	139,2,c	;volatile
  1301  001CCC  0012               	return		;funcret
  1302  001CCE                     __end_of_nrf24_rf_init:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _SPI1_Open *****************
  1306 ;; Defined at:
  1307 ;;		line 72 in file "mcc_generated_files/spi1.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  spi1UniqueCo    1    wreg     enum E355
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  spi1UniqueCo    1   24[COMRAM] enum E355
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      _Bool 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        2 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 6
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_nrf24_rf_init
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text10
  1336  00139A                     __ptext10:
  1337                           	callstack 0
  1338  00139A                     _SPI1_Open:
  1339                           	callstack 22
  1340                           
  1341                           ;incstack = 0
  1342                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  1343  00139A  6E19               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
  1344  00139C                     
  1345                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  1346  00139C  BAC6               	btfsc	198,5,c	;volatile
  1347  00139E  EFD3  F009         	goto	u181
  1348  0013A2  EFD5  F009         	goto	u180
  1349  0013A6                     u181:
  1350  0013A6  EF24  F00A         	goto	l55
  1351  0013AA                     u180:
  1352  0013AA                     
  1353                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  1354  0013AA  5019               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1355  0013AC  0D04               	mullw	4
  1356  0013AE  0E01               	movlw	1
  1357  0013B0  26F3               	addwf	243,f,c
  1358  0013B2  0E00               	movlw	0
  1359  0013B4  22F4               	addwfc	244,f,c
  1360  0013B6  0E01               	movlw	low _spi1_configuration
  1361  0013B8  24F3               	addwf	243,w,c
  1362  0013BA  6EF6               	movwf	tblptrl,c
  1363  0013BC  0E10               	movlw	high _spi1_configuration
  1364  0013BE  20F4               	addwfc	244,w,c
  1365  0013C0  6EF7               	movwf	tblptrh,c
  1366  0013C2                     	if	1	;There are 3 active tblptr bytes
  1367  0013C2  6AF8               	clrf	tblptru,c
  1368  0013C4  0E00               	movlw	low (__mediumconst shr (0+16))
  1369  0013C6  22F8               	addwfc	tblptru,f,c
  1370  0013C8                     	endif
  1371  0013C8  0008               	tblrd		*
  1372  0013CA  CFF5 FFC7          	movff	tablat,4039	;volatile
  1373                           
  1374                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  1375  0013CE  5019               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1376  0013D0  0D04               	mullw	4
  1377  0013D2  0E01               	movlw	low _spi1_configuration
  1378  0013D4  24F3               	addwf	243,w,c
  1379  0013D6  6EF6               	movwf	tblptrl,c
  1380  0013D8  0E10               	movlw	high _spi1_configuration
  1381  0013DA  20F4               	addwfc	244,w,c
  1382  0013DC  6EF7               	movwf	tblptrh,c
  1383  0013DE                     	if	1	;There are 3 active tblptr bytes
  1384  0013DE  6AF8               	clrf	tblptru,c
  1385  0013E0  0E00               	movlw	low (__mediumconst shr (0+16))
  1386  0013E2  22F8               	addwfc	tblptru,f,c
  1387  0013E4                     	endif
  1388  0013E4  0008               	tblrd		*
  1389  0013E6  CFF5 FFC6          	movff	tablat,4038	;volatile
  1390  0013EA                     
  1391                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  1392  0013EA  0E00               	movlw	0
  1393  0013EC  6EC5               	movwf	197,c	;volatile
  1394  0013EE                     
  1395                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  1396  0013EE  5019               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1397  0013F0  0D04               	mullw	4
  1398  0013F2  0E02               	movlw	2
  1399  0013F4  26F3               	addwf	243,f,c
  1400  0013F6  0E00               	movlw	0
  1401  0013F8  22F4               	addwfc	244,f,c
  1402  0013FA  0E01               	movlw	low _spi1_configuration
  1403  0013FC  24F3               	addwf	243,w,c
  1404  0013FE  6EF6               	movwf	tblptrl,c
  1405  001400  0E10               	movlw	high _spi1_configuration
  1406  001402  20F4               	addwfc	244,w,c
  1407  001404  6EF7               	movwf	tblptrh,c
  1408  001406                     	if	1	;There are 3 active tblptr bytes
  1409  001406  6AF8               	clrf	tblptru,c
  1410  001408  0E00               	movlw	low (__mediumconst shr (0+16))
  1411  00140A  22F8               	addwfc	tblptru,f,c
  1412  00140C                     	endif
  1413  00140C  0008               	tblrd		*
  1414  00140E  CFF5 FFC8          	movff	tablat,4040	;volatile
  1415  001412                     
  1416                           ;mcc_generated_files/spi1.c: 80:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  1417  001412  5019               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1418  001414  0D04               	mullw	4
  1419  001416  0E03               	movlw	3
  1420  001418  26F3               	addwf	243,f,c
  1421  00141A  0E00               	movlw	0
  1422  00141C  22F4               	addwfc	244,f,c
  1423  00141E  0E01               	movlw	low _spi1_configuration
  1424  001420  24F3               	addwf	243,w,c
  1425  001422  6EF6               	movwf	tblptrl,c
  1426  001424  0E10               	movlw	high _spi1_configuration
  1427  001426  20F4               	addwfc	244,w,c
  1428  001428  6EF7               	movwf	tblptrh,c
  1429  00142A                     	if	1	;There are 3 active tblptr bytes
  1430  00142A  6AF8               	clrf	tblptru,c
  1431  00142C  0E00               	movlw	low (__mediumconst shr (0+16))
  1432  00142E  22F8               	addwfc	tblptru,f,c
  1433  001430                     	endif
  1434  001430  0008               	tblrd		*
  1435  001432  CFF5 F018          	movff	tablat,??_SPI1_Open
  1436  001436  4618               	rlncf	??_SPI1_Open^0,f,c
  1437  001438  4618               	rlncf	??_SPI1_Open^0,f,c
  1438  00143A  4618               	rlncf	??_SPI1_Open^0,f,c
  1439  00143C  5094               	movf	148,w,c	;volatile
  1440  00143E  1818               	xorwf	??_SPI1_Open^0,w,c
  1441  001440  0BF7               	andlw	-9
  1442  001442  1818               	xorwf	??_SPI1_Open^0,w,c
  1443  001444  6E94               	movwf	148,c	;volatile
  1444  001446                     
  1445                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  1446  001446  8AC6               	bsf	198,5,c	;volatile
  1447  001448                     l55:
  1448  001448  0012               	return		;funcret
  1449  00144A                     __end_of_SPI1_Open:
  1450                           	callstack 0
  1451                           
  1452 ;; *************** function _HandlePacketLoop *****************
  1453 ;; Defined at:
  1454 ;;		line 89 in file "handler.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  sz              1   48[BANK0 ] unsigned char 
  1459 ;;  i               1   50[BANK0 ] unsigned char 
  1460 ;;  status          1   49[BANK0 ] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;Total ram usage:        3 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 11
  1477 ;; This function calls:
  1478 ;;		_ProcessAckPayload
  1479 ;;		_VerifyBoardAddress
  1480 ;;		_nrf24_flush_tx_rx
  1481 ;;		_nrf24_read_dynamic_payload_length
  1482 ;;		_nrf24_read_register
  1483 ;;		_nrf24_read_rf_data
  1484 ;;		_nrf24_send_rf_data
  1485 ;;		_nrf24_write_register
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text11
  1492  001006                     __ptext11:
  1493                           	callstack 0
  1494  001006                     _HandlePacketLoop:
  1495                           	callstack 19
  1496  001006                     
  1497                           ;handler.c: 90:     uint8_t i;;handler.c: 93:     for (i = 0; i < 8; i++) {
  1498  001006  0E00               	movlw	0
  1499  001008  0100               	movlb	0	; () banked
  1500  00100A  6FD2               	movwf	HandlePacketLoop@i& (0+255),b
  1501  00100C                     l2658:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;handler.c: 94:         if (!packetsTX[i].free) {
  1505  00100C  51D2               	movf	HandlePacketLoop@i& (0+255),w,b
  1506  00100E  0D22               	mullw	34
  1507  001010  0EF3               	movlw	low (_packetsTX+32)
  1508  001012  24F3               	addwf	243,w,c
  1509  001014  6ED9               	movwf	fsr2l,c
  1510  001016  0E00               	movlw	high (_packetsTX+32)
  1511  001018  20F4               	addwfc	prodh,w,c
  1512  00101A  6EDA               	movwf	fsr2h,c
  1513  00101C  50DF               	movf	indf2,w,c
  1514  00101E  A4D8               	btfss	status,2,c
  1515  001020  EF14  F008         	goto	u1051
  1516  001024  EF16  F008         	goto	u1050
  1517  001028                     u1051:
  1518  001028  EF18  F008         	goto	l2662
  1519  00102C                     u1050:
  1520  00102C  EF21  F008         	goto	l2666
  1521  001030                     l2662:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;handler.c: 97:     }
  1525  001030  2BD2               	incf	HandlePacketLoop@i& (0+255),f,b
  1526  001032                     
  1527                           ; BSR set to: 0
  1528  001032  0E07               	movlw	7
  1529  001034  65D2               	cpfsgt	HandlePacketLoop@i& (0+255),b
  1530  001036  EF1F  F008         	goto	u1061
  1531  00103A  EF21  F008         	goto	u1060
  1532  00103E                     u1061:
  1533  00103E  EF06  F008         	goto	l2658
  1534  001042                     u1060:
  1535  001042                     l2666:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;handler.c: 98:     if (i == 8) {
  1539  001042  0E08               	movlw	8
  1540  001044  19D2               	xorwf	HandlePacketLoop@i& (0+255),w,b
  1541  001046  A4D8               	btfss	status,2,c
  1542  001048  EF28  F008         	goto	u1071
  1543  00104C  EF2A  F008         	goto	u1070
  1544  001050                     u1071:
  1545  001050  EF2C  F008         	goto	l2670
  1546  001054                     u1070:
  1547  001054  EF9F  F008         	goto	l296
  1548  001058                     l2670:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;handler.c: 102:     nrf24_send_rf_data(packetsTX[i].packet, packetsTX[i].size);
  1552  001058  51D2               	movf	HandlePacketLoop@i& (0+255),w,b
  1553  00105A  0D22               	mullw	34
  1554  00105C  0ED3               	movlw	low _packetsTX
  1555  00105E  24F3               	addwf	243,w,c
  1556  001060  6E1E               	movwf	nrf24_send_rf_data@buffer^0,c
  1557  001062  0E00               	movlw	high _packetsTX
  1558  001064  20F4               	addwfc	prodh,w,c
  1559  001066  6E1F               	movwf	(nrf24_send_rf_data@buffer+1)^0,c
  1560  001068  51D2               	movf	HandlePacketLoop@i& (0+255),w,b
  1561  00106A  0D22               	mullw	34
  1562  00106C  0EF4               	movlw	low (_packetsTX+33)
  1563  00106E  24F3               	addwf	243,w,c
  1564  001070  6ED9               	movwf	fsr2l,c
  1565  001072  0E00               	movlw	high (_packetsTX+33)
  1566  001074  20F4               	addwfc	prodh,w,c
  1567  001076  6EDA               	movwf	fsr2h,c
  1568  001078  50DF               	movf	indf2,w,c
  1569  00107A  6E20               	movwf	nrf24_send_rf_data@sz^0,c
  1570  00107C  EC12  F00E         	call	_nrf24_send_rf_data	;wreg free
  1571  001080                     l2674:
  1572                           
  1573                           ;handler.c: 107:         status = nrf24_read_register(0x07);
  1574  001080  0E07               	movlw	7
  1575  001082  EC31  F00E         	call	_nrf24_read_register
  1576  001086  0100               	movlb	0	; () banked
  1577  001088  6FD1               	movwf	HandlePacketLoop@status& (0+255),b
  1578  00108A                     
  1579                           ; BSR set to: 0
  1580                           ;handler.c: 108:         if ((status & 0x20) || (status & 0x10)) {
  1581  00108A  BBD1               	btfsc	HandlePacketLoop@status& (0+255),5,b
  1582  00108C  EF4A  F008         	goto	u1081
  1583  001090  EF4C  F008         	goto	u1080
  1584  001094                     u1081:
  1585  001094  EF58  F008         	goto	l2680
  1586  001098                     u1080:
  1587  001098                     
  1588                           ; BSR set to: 0
  1589  001098  A9D1               	btfss	HandlePacketLoop@status& (0+255),4,b
  1590  00109A  EF51  F008         	goto	u1091
  1591  00109E  EF53  F008         	goto	u1090
  1592  0010A2                     u1091:
  1593  0010A2  EF55  F008         	goto	l298
  1594  0010A6                     u1090:
  1595  0010A6  EF58  F008         	goto	l2680
  1596  0010AA                     l298:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;handler.c: 111:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  1600  0010AA  D000               	nop2		;2 cycle nop
  1601  0010AC  EF40  F008         	goto	l2674
  1602  0010B0                     l2680:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;handler.c: 114:     nrf24_write_register(0x07, 0x70);
  1606  0010B0  0E70               	movlw	112
  1607  0010B2  6E19               	movwf	nrf24_write_register@value^0,c
  1608  0010B4  0E07               	movlw	7
  1609  0010B6  EC09  F00B         	call	_nrf24_write_register
  1610  0010BA                     
  1611                           ;handler.c: 117:     if (status & 0x10) {
  1612  0010BA  0100               	movlb	0	; () banked
  1613  0010BC  A9D1               	btfss	HandlePacketLoop@status& (0+255),4,b
  1614  0010BE  EF63  F008         	goto	u1101
  1615  0010C2  EF65  F008         	goto	u1100
  1616  0010C6                     u1101:
  1617  0010C6  EF69  F008         	goto	l2688
  1618  0010CA                     u1100:
  1619  0010CA                     
  1620                           ; BSR set to: 0
  1621                           ;handler.c: 118:         nrf24_flush_tx_rx();
  1622  0010CA  ECE5  F00C         	call	_nrf24_flush_tx_rx	;wreg free
  1623  0010CE  EF9F  F008         	goto	l296
  1624  0010D2                     l2688:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;handler.c: 125:     packetsTX[i].free = 1;
  1628  0010D2  51D2               	movf	HandlePacketLoop@i& (0+255),w,b
  1629  0010D4  0D22               	mullw	34
  1630  0010D6  0EF3               	movlw	low (_packetsTX+32)
  1631  0010D8  24F3               	addwf	243,w,c
  1632  0010DA  6ED9               	movwf	fsr2l,c
  1633  0010DC  0E00               	movlw	high (_packetsTX+32)
  1634  0010DE  20F4               	addwfc	prodh,w,c
  1635  0010E0  6EDA               	movwf	fsr2h,c
  1636  0010E2  0E01               	movlw	1
  1637  0010E4  6EDF               	movwf	indf2,c
  1638  0010E6                     
  1639                           ; BSR set to: 0
  1640                           ;handler.c: 128:     if (status & 0x40) {
  1641  0010E6  ADD1               	btfss	HandlePacketLoop@status& (0+255),6,b
  1642  0010E8  EF78  F008         	goto	u1111
  1643  0010EC  EF7A  F008         	goto	u1110
  1644  0010F0                     u1111:
  1645  0010F0  EF9F  F008         	goto	l296
  1646  0010F4                     u1110:
  1647  0010F4                     
  1648                           ; BSR set to: 0
  1649                           ;handler.c: 129:         uint8_t sz = nrf24_read_dynamic_payload_length();
  1650  0010F4  EC22  F00E         	call	_nrf24_read_dynamic_payload_length	;wreg free
  1651  0010F8  0100               	movlb	0	; () banked
  1652  0010FA  6FD0               	movwf	HandlePacketLoop@sz& (0+255),b
  1653  0010FC                     
  1654                           ; BSR set to: 0
  1655                           ;handler.c: 130:         nrf24_read_rf_data(bufferRX, sz);
  1656  0010FC  0E60               	movlw	low _bufferRX
  1657  0010FE  6E1E               	movwf	nrf24_read_rf_data@buffer^0,c
  1658  001100  0E00               	movlw	high _bufferRX
  1659  001102  6E1F               	movwf	(nrf24_read_rf_data@buffer+1)^0,c
  1660  001104  C0D0  F020         	movff	HandlePacketLoop@sz,nrf24_read_rf_data@sz
  1661  001108  EC01  F00E         	call	_nrf24_read_rf_data	;wreg free
  1662  00110C                     
  1663                           ;handler.c: 131:         if (!VerifyBoardAddress(bufferRX)) {
  1664  00110C  0E60               	movlw	low _bufferRX
  1665  00110E  6E18               	movwf	VerifyBoardAddress@bufferRX^0,c
  1666  001110  0E00               	movlw	high _bufferRX
  1667  001112  6E19               	movwf	(VerifyBoardAddress@bufferRX+1)^0,c
  1668  001114  EC7E  F00B         	call	_VerifyBoardAddress	;wreg free
  1669  001118  0900               	iorlw	0
  1670  00111A  A4D8               	btfss	status,2,c
  1671  00111C  EF92  F008         	goto	u1121
  1672  001120  EF94  F008         	goto	u1120
  1673  001124                     u1121:
  1674  001124  EF96  F008         	goto	l2700
  1675  001128                     u1120:
  1676  001128  EF9F  F008         	goto	l296
  1677  00112C                     l2700:
  1678                           
  1679                           ;handler.c: 134:         ProcessAckPayload(bufferRX, sz);
  1680  00112C  0E60               	movlw	low _bufferRX
  1681  00112E  0100               	movlb	0	; () banked
  1682  001130  6FA9               	movwf	ProcessAckPayload@buffer& (0+255),b
  1683  001132  0E00               	movlw	high _bufferRX
  1684  001134  6FAA               	movwf	(ProcessAckPayload@buffer+1)& (0+255),b
  1685  001136  C0D0  F0AB         	movff	HandlePacketLoop@sz,ProcessAckPayload@sz
  1686  00113A  ECA0  F008         	call	_ProcessAckPayload	;wreg free
  1687  00113E                     l296:
  1688  00113E  0012               	return		;funcret
  1689  001140                     __end_of_HandlePacketLoop:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _nrf24_send_rf_data *****************
  1693 ;; Defined at:
  1694 ;;		line 79 in file "../lib/nrf24_lib.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  buffer          2   29[COMRAM] PTR unsigned char 
  1697 ;;		 -> packetsTX(272), 
  1698 ;;  sz              1   31[COMRAM] unsigned char 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1710 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:        3 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 8
  1717 ;; This function calls:
  1718 ;;		_nrf24_write_buff
  1719 ;; This function is called by:
  1720 ;;		_HandlePacketLoop
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text12
  1725  001C24                     __ptext12:
  1726                           	callstack 0
  1727  001C24                     _nrf24_send_rf_data:
  1728                           	callstack 21
  1729  001C24                     
  1730                           ;../lib/nrf24_lib.c: 80:     nrf24_write_buff(0xA0, buffer, sz);
  1731  001C24  C01E  F019         	movff	nrf24_send_rf_data@buffer,nrf24_write_buff@buffer
  1732  001C28  C01F  F01A         	movff	nrf24_send_rf_data@buffer+1,nrf24_write_buff@buffer+1
  1733  001C2C  C020  F01B         	movff	nrf24_send_rf_data@sz,nrf24_write_buff@bytes
  1734  001C30  0EA0               	movlw	160
  1735  001C32  EC56  F00D         	call	_nrf24_write_buff
  1736  001C36  848B               	bsf	139,2,c	;volatile
  1737  001C38                     
  1738                           ;../lib/nrf24_lib.c: 82:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1739  001C38  0E53               	movlw	83
  1740  001C3A                     u1157:
  1741  001C3A  2EE8               	decfsz	wreg,f,c
  1742  001C3C  D7FE               	bra	u1157
  1743  001C3E  F000               	nop	
  1744  001C40  948B               	bcf	139,2,c	;volatile
  1745  001C42  0012               	return		;funcret
  1746  001C44                     __end_of_nrf24_send_rf_data:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _nrf24_read_rf_data *****************
  1750 ;; Defined at:
  1751 ;;		line 93 in file "../lib/nrf24_lib.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  buffer          2   29[COMRAM] PTR unsigned char 
  1754 ;;		 -> bufferRX(32), 
  1755 ;;  sz              1   31[COMRAM] unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1767 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;Total ram usage:        3 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 9
  1774 ;; This function calls:
  1775 ;;		_nrf24_flush_tx_rx
  1776 ;;		_nrf24_read_buff
  1777 ;;		_nrf24_write_register
  1778 ;; This function is called by:
  1779 ;;		_HandlePacketLoop
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text13
  1784  001C02                     __ptext13:
  1785                           	callstack 0
  1786  001C02                     _nrf24_read_rf_data:
  1787                           	callstack 20
  1788  001C02                     
  1789                           ;../lib/nrf24_lib.c: 94:     nrf24_read_buff(0x61, buffer, sz);
  1790  001C02  C01E  F019         	movff	nrf24_read_rf_data@buffer,nrf24_read_buff@buffer
  1791  001C06  C01F  F01A         	movff	nrf24_read_rf_data@buffer+1,nrf24_read_buff@buffer+1
  1792  001C0A  C020  F01B         	movff	nrf24_read_rf_data@sz,nrf24_read_buff@bytes
  1793  001C0E  0E61               	movlw	97
  1794  001C10  EC0C  F00D         	call	_nrf24_read_buff
  1795  001C14                     
  1796                           ;../lib/nrf24_lib.c: 95:     nrf24_write_register(0x07, 0x70);
  1797  001C14  0E70               	movlw	112
  1798  001C16  6E19               	movwf	nrf24_write_register@value^0,c
  1799  001C18  0E07               	movlw	7
  1800  001C1A  EC09  F00B         	call	_nrf24_write_register
  1801  001C1E                     
  1802                           ;../lib/nrf24_lib.c: 96:     nrf24_flush_tx_rx();
  1803  001C1E  ECE5  F00C         	call	_nrf24_flush_tx_rx	;wreg free
  1804  001C22  0012               	return		;funcret
  1805  001C24                     __end_of_nrf24_read_rf_data:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _nrf24_read_buff *****************
  1809 ;; Defined at:
  1810 ;;		line 58 in file "../lib/nrf24_lib.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  mnemonic_add    1    wreg     unsigned char 
  1813 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  1814 ;;		 -> bufferRX(32), 
  1815 ;;  bytes           1   26[COMRAM] unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  mnemonic_add    1   27[COMRAM] unsigned char 
  1818 ;;  i               1   28[COMRAM] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        5 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 7
  1835 ;; This function calls:
  1836 ;;		_SPI1_ExchangeByte
  1837 ;; This function is called by:
  1838 ;;		_nrf24_read_rf_data
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text14
  1843  001A18                     __ptext14:
  1844                           	callstack 0
  1845  001A18                     _nrf24_read_buff:
  1846                           	callstack 21
  1847                           
  1848                           ;incstack = 0
  1849                           ;nrf24_read_buff@mnemonic_addr stored from wreg
  1850  001A18  6E1C               	movwf	nrf24_read_buff@mnemonic_addr^0,c
  1851  001A1A  928B               	bcf	139,1,c	;volatile
  1852  001A1C                     
  1853                           ;../lib/nrf24_lib.c: 61:     SPI1_ExchangeByte(0x00 | mnemonic_addr);
  1854  001A1C  501C               	movf	nrf24_read_buff@mnemonic_addr^0,w,c
  1855  001A1E  EC3E  F00E         	call	_SPI1_ExchangeByte
  1856  001A22                     
  1857                           ;../lib/nrf24_lib.c: 62:     for (i = 0; i < bytes; i++) {
  1858  001A22  0E00               	movlw	0
  1859  001A24  6E1D               	movwf	nrf24_read_buff@i^0,c
  1860  001A26  EF20  F00D         	goto	l2514
  1861  001A2A                     l2508:
  1862                           
  1863                           ;../lib/nrf24_lib.c: 63:         *buffer = SPI1_ExchangeByte(0xFF);
  1864  001A2A  0EFF               	movlw	255
  1865  001A2C  EC3E  F00E         	call	_SPI1_ExchangeByte
  1866  001A30  C019  FFD9         	movff	nrf24_read_buff@buffer,fsr2l
  1867  001A34  C01A  FFDA         	movff	nrf24_read_buff@buffer+1,fsr2h
  1868  001A38  6EDF               	movwf	indf2,c
  1869  001A3A                     
  1870                           ;../lib/nrf24_lib.c: 64:         buffer++;
  1871  001A3A  4A19               	infsnz	nrf24_read_buff@buffer^0,f,c
  1872  001A3C  2A1A               	incf	(nrf24_read_buff@buffer+1)^0,f,c
  1873  001A3E                     
  1874                           ;../lib/nrf24_lib.c: 65:     }
  1875  001A3E  2A1D               	incf	nrf24_read_buff@i^0,f,c
  1876  001A40                     l2514:
  1877  001A40  501B               	movf	nrf24_read_buff@bytes^0,w,c
  1878  001A42  5C1D               	subwf	nrf24_read_buff@i^0,w,c
  1879  001A44  A0D8               	btfss	status,0,c
  1880  001A46  EF27  F00D         	goto	u1011
  1881  001A4A  EF29  F00D         	goto	u1010
  1882  001A4E                     u1011:
  1883  001A4E  EF15  F00D         	goto	l2508
  1884  001A52                     u1010:
  1885  001A52                     
  1886                           ;../lib/nrf24_lib.c: 66:     *buffer = (uint8_t) ((void*)0);
  1887  001A52  C019  FFD9         	movff	nrf24_read_buff@buffer,fsr2l
  1888  001A56  C01A  FFDA         	movff	nrf24_read_buff@buffer+1,fsr2h
  1889  001A5A  0E00               	movlw	0
  1890  001A5C  6EDF               	movwf	indf2,c
  1891  001A5E  828B               	bsf	139,1,c	;volatile
  1892  001A60  0012               	return		;funcret
  1893  001A62                     __end_of_nrf24_read_buff:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _nrf24_flush_tx_rx *****************
  1897 ;; Defined at:
  1898 ;;		line 99 in file "../lib/nrf24_lib.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 8
  1919 ;; This function calls:
  1920 ;;		_SPI1_ExchangeByte
  1921 ;;		_nrf24_write_register
  1922 ;; This function is called by:
  1923 ;;		_HandlePacketLoop
  1924 ;;		_nrf24_read_rf_data
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text15
  1929  0019CA                     __ptext15:
  1930                           	callstack 0
  1931  0019CA                     _nrf24_flush_tx_rx:
  1932                           	callstack 20
  1933  0019CA  928B               	bcf	139,1,c	;volatile
  1934  0019CC                     
  1935                           ;../lib/nrf24_lib.c: 101:     nrf24_write_register(0x07, 0x70);
  1936  0019CC  0E70               	movlw	112
  1937  0019CE  6E19               	movwf	nrf24_write_register@value^0,c
  1938  0019D0  0E07               	movlw	7
  1939  0019D2  EC09  F00B         	call	_nrf24_write_register
  1940  0019D6                     
  1941                           ;../lib/nrf24_lib.c: 102:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1942  0019D6  0E04               	movlw	4
  1943  0019D8  6E1B               	movwf	??_nrf24_flush_tx_rx^0,c
  1944  0019DA  0E3E               	movlw	62
  1945  0019DC                     u1167:
  1946  0019DC  2EE8               	decfsz	wreg,f,c
  1947  0019DE  D7FE               	bra	u1167
  1948  0019E0  2E1B               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1949  0019E2  D7FC               	bra	u1167
  1950  0019E4  828B               	bsf	139,1,c	;volatile
  1951  0019E6  928B               	bcf	139,1,c	;volatile
  1952  0019E8                     
  1953                           ;../lib/nrf24_lib.c: 106:     SPI1_ExchangeByte(0xE1);
  1954  0019E8  0EE1               	movlw	225
  1955  0019EA  EC3E  F00E         	call	_SPI1_ExchangeByte
  1956  0019EE                     
  1957                           ;../lib/nrf24_lib.c: 107:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1958  0019EE  0E04               	movlw	4
  1959  0019F0  6E1B               	movwf	??_nrf24_flush_tx_rx^0,c
  1960  0019F2  0E3E               	movlw	62
  1961  0019F4                     u1177:
  1962  0019F4  2EE8               	decfsz	wreg,f,c
  1963  0019F6  D7FE               	bra	u1177
  1964  0019F8  2E1B               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1965  0019FA  D7FC               	bra	u1177
  1966  0019FC  828B               	bsf	139,1,c	;volatile
  1967  0019FE  928B               	bcf	139,1,c	;volatile
  1968  001A00                     
  1969                           ;../lib/nrf24_lib.c: 111:     SPI1_ExchangeByte(0xE2);
  1970  001A00  0EE2               	movlw	226
  1971  001A02  EC3E  F00E         	call	_SPI1_ExchangeByte
  1972  001A06                     
  1973                           ;../lib/nrf24_lib.c: 112:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1974  001A06  0E04               	movlw	4
  1975  001A08  6E1B               	movwf	??_nrf24_flush_tx_rx^0,c
  1976  001A0A  0E3E               	movlw	62
  1977  001A0C                     u1187:
  1978  001A0C  2EE8               	decfsz	wreg,f,c
  1979  001A0E  D7FE               	bra	u1187
  1980  001A10  2E1B               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1981  001A12  D7FC               	bra	u1187
  1982  001A14  828B               	bsf	139,1,c	;volatile
  1983  001A16  0012               	return		;funcret
  1984  001A18                     __end_of_nrf24_flush_tx_rx:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _nrf24_read_register *****************
  1988 ;; Defined at:
  1989 ;;		line 27 in file "../lib/nrf24_lib.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  mnemonic_add    1    wreg     unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  mnemonic_add    1   24[COMRAM] unsigned char 
  1994 ;;  byte0           1   25[COMRAM] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      unsigned char 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;Total ram usage:        2 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 7
  2011 ;; This function calls:
  2012 ;;		_SPI1_ExchangeByte
  2013 ;; This function is called by:
  2014 ;;		_HandlePacketLoop
  2015 ;;		_nrf24_is_rf_data_available
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text16
  2020  001C62                     __ptext16:
  2021                           	callstack 0
  2022  001C62                     _nrf24_read_register:
  2023                           	callstack 22
  2024                           
  2025                           ;incstack = 0
  2026                           ;nrf24_read_register@mnemonic_addr stored from wreg
  2027  001C62  6E19               	movwf	nrf24_read_register@mnemonic_addr^0,c
  2028  001C64  928B               	bcf	139,1,c	;volatile
  2029  001C66                     
  2030                           ;../lib/nrf24_lib.c: 30:     SPI1_ExchangeByte(0x00 | (mnemonic_addr & 0x1F));
  2031  001C66  5019               	movf	nrf24_read_register@mnemonic_addr^0,w,c
  2032  001C68  0B1F               	andlw	31
  2033  001C6A  EC3E  F00E         	call	_SPI1_ExchangeByte
  2034  001C6E                     
  2035                           ;../lib/nrf24_lib.c: 31:     byte0 = SPI1_ExchangeByte(0xFF);
  2036  001C6E  0EFF               	movlw	255
  2037  001C70  EC3E  F00E         	call	_SPI1_ExchangeByte
  2038  001C74  6E1A               	movwf	nrf24_read_register@byte0^0,c
  2039  001C76  828B               	bsf	139,1,c	;volatile
  2040  001C78                     
  2041                           ;../lib/nrf24_lib.c: 33:     return byte0;
  2042  001C78  501A               	movf	nrf24_read_register@byte0^0,w,c
  2043  001C7A  0012               	return		;funcret
  2044  001C7C                     __end_of_nrf24_read_register:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _nrf24_read_dynamic_payload_length *****************
  2048 ;; Defined at:
  2049 ;;		line 36 in file "../lib/nrf24_lib.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  byte0           1   24[COMRAM] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      unsigned char 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;Total ram usage:        1 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 7
  2070 ;; This function calls:
  2071 ;;		_SPI1_ExchangeByte
  2072 ;; This function is called by:
  2073 ;;		_HandlePacketLoop
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text17
  2078  001C44                     __ptext17:
  2079                           	callstack 0
  2080  001C44                     _nrf24_read_dynamic_payload_length:
  2081                           	callstack 22
  2082  001C44  928B               	bcf	139,1,c	;volatile
  2083  001C46                     
  2084                           ;../lib/nrf24_lib.c: 39:     SPI1_ExchangeByte(0x60);
  2085  001C46  0E60               	movlw	96
  2086  001C48  EC3E  F00E         	call	_SPI1_ExchangeByte
  2087                           
  2088                           ;../lib/nrf24_lib.c: 40:     byte0 = SPI1_ExchangeByte(0xFF);
  2089  001C4C  0EFF               	movlw	255
  2090  001C4E  EC3E  F00E         	call	_SPI1_ExchangeByte
  2091  001C52  6E19               	movwf	nrf24_read_dynamic_payload_length@byte0^0,c
  2092  001C54                     
  2093                           ;../lib/nrf24_lib.c: 41:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2094  001C54  0E53               	movlw	83
  2095  001C56                     u1197:
  2096  001C56  2EE8               	decfsz	wreg,f,c
  2097  001C58  D7FE               	bra	u1197
  2098  001C5A  F000               	nop	
  2099  001C5C  828B               	bsf	139,1,c	;volatile
  2100  001C5E                     
  2101                           ;../lib/nrf24_lib.c: 43:     return byte0;
  2102  001C5E  5019               	movf	nrf24_read_dynamic_payload_length@byte0^0,w,c
  2103  001C60  0012               	return		;funcret
  2104  001C62                     __end_of_nrf24_read_dynamic_payload_length:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _VerifyBoardAddress *****************
  2108 ;; Defined at:
  2109 ;;		line 148 in file "handler.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  bufferRX        2   23[COMRAM] PTR unsigned char 
  2112 ;;		 -> bufferRX(32), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  i               2   29[COMRAM] int 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      _Bool 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;Total ram usage:        8 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 6
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_HandlePacketLoop
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text18
  2139  0016FC                     __ptext18:
  2140                           	callstack 0
  2141  0016FC                     _VerifyBoardAddress:
  2142                           	callstack 23
  2143  0016FC                     
  2144                           ;handler.c: 149:     for (int i = 0; i < 3; i++) {
  2145  0016FC  0E00               	movlw	0
  2146  0016FE  6E1F               	movwf	(VerifyBoardAddress@i+1)^0,c
  2147  001700  0E00               	movlw	0
  2148  001702  6E1E               	movwf	VerifyBoardAddress@i^0,c
  2149  001704                     l2560:
  2150                           
  2151                           ;handler.c: 150:         if (BoardAddress[i] != bufferRX[i + 1]) {
  2152  001704  501E               	movf	VerifyBoardAddress@i^0,w,c
  2153  001706  2418               	addwf	VerifyBoardAddress@bufferRX^0,w,c
  2154  001708  6E1A               	movwf	??_VerifyBoardAddress^0,c
  2155  00170A  501F               	movf	(VerifyBoardAddress@i+1)^0,w,c
  2156  00170C  2019               	addwfc	(VerifyBoardAddress@bufferRX+1)^0,w,c
  2157  00170E  6E1B               	movwf	(??_VerifyBoardAddress+1)^0,c
  2158  001710  0E01               	movlw	1
  2159  001712  241A               	addwf	??_VerifyBoardAddress^0,w,c
  2160  001714  6ED9               	movwf	fsr2l,c
  2161  001716  0E00               	movlw	0
  2162  001718  201B               	addwfc	(??_VerifyBoardAddress+1)^0,w,c
  2163  00171A  6EDA               	movwf	fsr2h,c
  2164  00171C  0E41               	movlw	low _BoardAddress
  2165  00171E  241E               	addwf	VerifyBoardAddress@i^0,w,c
  2166  001720  6EE1               	movwf	fsr1l,c
  2167  001722  0E00               	movlw	high _BoardAddress
  2168  001724  201F               	addwfc	(VerifyBoardAddress@i+1)^0,w,c
  2169  001726  6EE2               	movwf	fsr1h,c
  2170  001728  50DE               	movf	postinc2,w,c
  2171  00172A  18E6               	xorwf	postinc1,w,c
  2172  00172C  B4D8               	btfsc	status,2,c
  2173  00172E  EF9B  F00B         	goto	u1021
  2174  001732  EF9D  F00B         	goto	u1020
  2175  001736                     u1021:
  2176  001736  EFA0  F00B         	goto	l2566
  2177  00173A                     u1020:
  2178  00173A                     
  2179                           ;handler.c: 151:             return 0;
  2180  00173A  0E00               	movlw	0
  2181  00173C  EFB1  F00B         	goto	l315
  2182  001740                     l2566:
  2183                           
  2184                           ;handler.c: 153:     }
  2185  001740  4A1E               	infsnz	VerifyBoardAddress@i^0,f,c
  2186  001742  2A1F               	incf	(VerifyBoardAddress@i+1)^0,f,c
  2187  001744  BE1F               	btfsc	(VerifyBoardAddress@i+1)^0,7,c
  2188  001746  EFAE  F00B         	goto	u1031
  2189  00174A  501F               	movf	(VerifyBoardAddress@i+1)^0,w,c
  2190  00174C  E109               	bnz	u1030
  2191  00174E  0E03               	movlw	3
  2192  001750  5C1E               	subwf	VerifyBoardAddress@i^0,w,c
  2193  001752  A0D8               	btfss	status,0,c
  2194  001754  EFAE  F00B         	goto	u1031
  2195  001758  EFB0  F00B         	goto	u1030
  2196  00175C                     u1031:
  2197  00175C  EF82  F00B         	goto	l2560
  2198  001760                     u1030:
  2199  001760                     
  2200                           ;handler.c: 154:     return 1;
  2201  001760  0E01               	movlw	1
  2202  001762                     l315:
  2203  001762  0012               	return		;funcret
  2204  001764                     __end_of_VerifyBoardAddress:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _ProcessAckPayload *****************
  2208 ;; Defined at:
  2209 ;;		line 157 in file "handler.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  buffer          2    9[BANK0 ] PTR unsigned char 
  2212 ;;		 -> bufferRX(32), 
  2213 ;;  sz              1   11[BANK0 ] unsigned char 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  data           32   14[BANK0 ] unsigned char [32]
  2216 ;;  pktType         1   47[BANK0 ] unsigned char 
  2217 ;;  actionID        1   46[BANK0 ] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2227 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;Total ram usage:       39 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 10
  2234 ;; This function calls:
  2235 ;;		_ProcessActionRequest
  2236 ;;		_SendError
  2237 ;;		_SuperMemCpy
  2238 ;; This function is called by:
  2239 ;;		_HandlePacketLoop
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text19
  2244  001140                     __ptext19:
  2245                           	callstack 0
  2246  001140                     _ProcessAckPayload:
  2247                           	callstack 19
  2248  001140                     
  2249                           ;handler.c: 158:     uint8_t data[32];;handler.c: 159:     uint8_t actionID;;handler.c: 
      +                          161:     uint8_t pktType = buffer[0];
  2250  001140  C0A9  FFD9         	movff	ProcessAckPayload@buffer,fsr2l
  2251  001144  C0AA  FFDA         	movff	ProcessAckPayload@buffer+1,fsr2h
  2252  001148  50DF               	movf	indf2,w,c
  2253  00114A  0100               	movlb	0	; () banked
  2254  00114C  6FCF               	movwf	ProcessAckPayload@pktType& (0+255),b
  2255                           
  2256                           ;handler.c: 162:     switch (pktType) {
  2257  00114E  EF1F  F009         	goto	l2594
  2258  001152                     l2576:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;handler.c: 164:             actionID = buffer[4];
  2262  001152  EE20 F004          	lfsr	2,4
  2263  001156  51A9               	movf	ProcessAckPayload@buffer& (0+255),w,b
  2264  001158  26D9               	addwf	fsr2l,f,c
  2265  00115A  51AA               	movf	(ProcessAckPayload@buffer+1)& (0+255),w,b
  2266  00115C  22DA               	addwfc	fsr2h,f,c
  2267  00115E  50DF               	movf	indf2,w,c
  2268  001160  6FCE               	movwf	ProcessAckPayload@actionID& (0+255),b
  2269  001162                     
  2270                           ; BSR set to: 0
  2271                           ;handler.c: 165:             SuperMemCpy(data, 0, buffer, 5, sz - 5);
  2272  001162  0EAE               	movlw	low ProcessAckPayload@data
  2273  001164  6E18               	movwf	SuperMemCpy@dest^0,c
  2274  001166  0E00               	movlw	high ProcessAckPayload@data
  2275  001168  6E19               	movwf	(SuperMemCpy@dest+1)^0,c
  2276  00116A  0E00               	movlw	0
  2277  00116C  6E1A               	movwf	SuperMemCpy@destStart^0,c
  2278  00116E  C0A9  F01B         	movff	ProcessAckPayload@buffer,SuperMemCpy@src
  2279  001172  C0AA  F01C         	movff	ProcessAckPayload@buffer+1,SuperMemCpy@src+1
  2280  001176  0E05               	movlw	5
  2281  001178  6E1D               	movwf	SuperMemCpy@srcStart^0,c
  2282  00117A  51AB               	movf	ProcessAckPayload@sz& (0+255),w,b
  2283  00117C  0FFB               	addlw	251
  2284  00117E  6E1E               	movwf	SuperMemCpy@sz^0,c
  2285  001180  EC43  F00C         	call	_SuperMemCpy	;wreg free
  2286  001184                     
  2287                           ;handler.c: 166:             ProcessActionRequest(actionID, data);
  2288  001184  0EAE               	movlw	low ProcessAckPayload@data
  2289  001186  0100               	movlb	0	; () banked
  2290  001188  6FA5               	movwf	ProcessActionRequest@data& (0+255),b
  2291  00118A  0E00               	movlw	high ProcessAckPayload@data
  2292  00118C  6FA6               	movwf	(ProcessActionRequest@data+1)& (0+255),b
  2293  00118E  51CE               	movf	ProcessAckPayload@actionID& (0+255),w,b
  2294  001190  ECB2  F00B         	call	_ProcessActionRequest
  2295                           
  2296                           ;handler.c: 167:             break;
  2297  001194  EF38  F009         	goto	l324
  2298  001198                     l2582:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;handler.c: 169:             config.RFChannel = buffer[4];
  2302  001198  EE20 F004          	lfsr	2,4
  2303  00119C  51A9               	movf	ProcessAckPayload@buffer& (0+255),w,b
  2304  00119E  26D9               	addwf	fsr2l,f,c
  2305  0011A0  51AA               	movf	(ProcessAckPayload@buffer+1)& (0+255),w,b
  2306  0011A2  22DA               	addwfc	fsr2h,f,c
  2307  0011A4  50DF               	movf	indf2,w,c
  2308  0011A6  6E2E               	movwf	(_config+5)^0,c
  2309  0011A8                     
  2310                           ; BSR set to: 0
  2311                           ;handler.c: 170:             SuperMemCpy(config.PipeAddr1, 0, buffer, 5, 5);
  2312  0011A8  0E2F               	movlw	low (_config+6)
  2313  0011AA  6E18               	movwf	SuperMemCpy@dest^0,c
  2314  0011AC  0E00               	movlw	high (_config+6)
  2315  0011AE  6E19               	movwf	(SuperMemCpy@dest+1)^0,c
  2316  0011B0  0E00               	movlw	0
  2317  0011B2  6E1A               	movwf	SuperMemCpy@destStart^0,c
  2318  0011B4  C0A9  F01B         	movff	ProcessAckPayload@buffer,SuperMemCpy@src
  2319  0011B8  C0AA  F01C         	movff	ProcessAckPayload@buffer+1,SuperMemCpy@src+1
  2320  0011BC  0E05               	movlw	5
  2321  0011BE  6E1D               	movwf	SuperMemCpy@srcStart^0,c
  2322  0011C0  0E05               	movlw	5
  2323  0011C2  6E1E               	movwf	SuperMemCpy@sz^0,c
  2324  0011C4  EC43  F00C         	call	_SuperMemCpy	;wreg free
  2325  0011C8                     
  2326                           ;handler.c: 171:             SuperMemCpy(config.PipeAddr2, 0, buffer, 10, 5);
  2327  0011C8  0E34               	movlw	low (_config+11)
  2328  0011CA  6E18               	movwf	SuperMemCpy@dest^0,c
  2329  0011CC  0E00               	movlw	high (_config+11)
  2330  0011CE  6E19               	movwf	(SuperMemCpy@dest+1)^0,c
  2331  0011D0  0E00               	movlw	0
  2332  0011D2  6E1A               	movwf	SuperMemCpy@destStart^0,c
  2333  0011D4  C0A9  F01B         	movff	ProcessAckPayload@buffer,SuperMemCpy@src
  2334  0011D8  C0AA  F01C         	movff	ProcessAckPayload@buffer+1,SuperMemCpy@src+1
  2335  0011DC  0E0A               	movlw	10
  2336  0011DE  6E1D               	movwf	SuperMemCpy@srcStart^0,c
  2337  0011E0  0E05               	movlw	5
  2338  0011E2  6E1E               	movwf	SuperMemCpy@sz^0,c
  2339  0011E4  EC43  F00C         	call	_SuperMemCpy	;wreg free
  2340                           
  2341                           ;handler.c: 172:             config.ARD = buffer[15];
  2342  0011E8  0100               	movlb	0	; () banked
  2343  0011EA  EE20 F00F          	lfsr	2,15
  2344  0011EE  51A9               	movf	ProcessAckPayload@buffer& (0+255),w,b
  2345  0011F0  26D9               	addwf	fsr2l,f,c
  2346  0011F2  51AA               	movf	(ProcessAckPayload@buffer+1)& (0+255),w,b
  2347  0011F4  22DA               	addwfc	fsr2h,f,c
  2348  0011F6  50DF               	movf	indf2,w,c
  2349  0011F8  6E39               	movwf	(_config+16)^0,c
  2350                           
  2351                           ;handler.c: 173:             break;
  2352  0011FA  EF38  F009         	goto	l324
  2353  0011FE                     l2588:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;handler.c: 175:             SuperMemCpy(config.Address, 0, buffer, 4, 3);
  2357  0011FE  0E2A               	movlw	low (_config+1)
  2358  001200  6E18               	movwf	SuperMemCpy@dest^0,c
  2359  001202  0E00               	movlw	high (_config+1)
  2360  001204  6E19               	movwf	(SuperMemCpy@dest+1)^0,c
  2361  001206  0E00               	movlw	0
  2362  001208  6E1A               	movwf	SuperMemCpy@destStart^0,c
  2363  00120A  C0A9  F01B         	movff	ProcessAckPayload@buffer,SuperMemCpy@src
  2364  00120E  C0AA  F01C         	movff	ProcessAckPayload@buffer+1,SuperMemCpy@src+1
  2365  001212  0E04               	movlw	4
  2366  001214  6E1D               	movwf	SuperMemCpy@srcStart^0,c
  2367  001216  0E03               	movlw	3
  2368  001218  6E1E               	movwf	SuperMemCpy@sz^0,c
  2369  00121A  EC43  F00C         	call	_SuperMemCpy	;wreg free
  2370  00121E                     
  2371                           ;handler.c: 176:             config.PingInterval = buffer[7];
  2372  00121E  0100               	movlb	0	; () banked
  2373  001220  EE20 F007          	lfsr	2,7
  2374  001224  51A9               	movf	ProcessAckPayload@buffer& (0+255),w,b
  2375  001226  26D9               	addwf	fsr2l,f,c
  2376  001228  51AA               	movf	(ProcessAckPayload@buffer+1)& (0+255),w,b
  2377  00122A  22DA               	addwfc	fsr2h,f,c
  2378  00122C  50DF               	movf	indf2,w,c
  2379  00122E  6E2D               	movwf	(_config+4)^0,c
  2380                           
  2381                           ;handler.c: 177:             break;
  2382  001230  EF38  F009         	goto	l324
  2383  001234                     l2592:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;handler.c: 179:             SendError(0x04);
  2387  001234  0E04               	movlw	4
  2388  001236  EC49  F00B         	call	_SendError
  2389                           
  2390                           ;handler.c: 180:     }
  2391  00123A  EF38  F009         	goto	l324
  2392  00123E                     l2594:
  2393                           
  2394                           ; BSR set to: 0
  2395  00123E  51CF               	movf	ProcessAckPayload@pktType& (0+255),w,b
  2396  001240  6FAC               	movwf	??_ProcessAckPayload& (0+255),b
  2397  001242  6BAD               	clrf	(??_ProcessAckPayload+1)& (0+255),b
  2398                           
  2399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2400                           ; Switch size 1, requested type "simple"
  2401                           ; Number of cases is 1, Range of values is 0 to 0
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte            4     3 (average)
  2405                           ;	Chosen strategy is simple_byte
  2406  001244  51AD               	movf	(??_ProcessAckPayload+1)& (0+255),w,b
  2407  001246  0A00               	xorlw	0	; case 0
  2408  001248  B4D8               	btfsc	status,2,c
  2409  00124A  EF29  F009         	goto	l2784
  2410  00124E  EF1A  F009         	goto	l2592
  2411  001252                     l2784:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ; Switch size 1, requested type "simple"
  2415                           ; Number of cases is 3, Range of values is 3 to 16
  2416                           ; switch strategies available:
  2417                           ; Name         Instructions Cycles
  2418                           ; simple_byte           10     6 (average)
  2419                           ;	Chosen strategy is simple_byte
  2420  001252  51AC               	movf	??_ProcessAckPayload& (0+255),w,b
  2421  001254  0A03               	xorlw	3	; case 3
  2422  001256  B4D8               	btfsc	status,2,c
  2423  001258  EFCC  F008         	goto	l2582
  2424  00125C  0A07               	xorlw	7	; case 4
  2425  00125E  B4D8               	btfsc	status,2,c
  2426  001260  EFFF  F008         	goto	l2588
  2427  001264  0A14               	xorlw	20	; case 16
  2428  001266  B4D8               	btfsc	status,2,c
  2429  001268  EFA9  F008         	goto	l2576
  2430  00126C  EF1A  F009         	goto	l2592
  2431  001270                     l324:
  2432  001270  0012               	return		;funcret
  2433  001272                     __end_of_ProcessAckPayload:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _ProcessActionRequest *****************
  2437 ;; Defined at:
  2438 ;;		line 184 in file "handler.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  actionID        1    wreg     unsigned char 
  2441 ;;  data            2    5[BANK0 ] PTR unsigned char 
  2442 ;;		 -> ProcessAckPayload@data(32), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  actionID        1   35[COMRAM] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;Total ram usage:        5 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 9
  2461 ;; This function calls:
  2462 ;;		_ReloadConfig
  2463 ;;		_SendError
  2464 ;; This function is called by:
  2465 ;;		_ProcessAckPayload
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text20
  2470  001764                     __ptext20:
  2471                           	callstack 0
  2472  001764                     _ProcessActionRequest:
  2473                           	callstack 19
  2474                           
  2475                           ;incstack = 0
  2476                           ;ProcessActionRequest@actionID stored from wreg
  2477  001764  6E24               	movwf	ProcessActionRequest@actionID^0,c
  2478  001766                     
  2479                           ;handler.c: 186:     switch (actionID) {
  2480  001766  EFCE  F00B         	goto	l2496
  2481  00176A                     l329:
  2482                           
  2483                           ; BSR set to: 0
  2484  00176A  9289               	bcf	137,1,c	;volatile
  2485  00176C                     
  2486                           ; BSR set to: 0
  2487                           ;handler.c: 189:             if (data[0]) {
  2488  00176C  C0A5  FFD9         	movff	ProcessActionRequest@data,fsr2l
  2489  001770  C0A6  FFDA         	movff	ProcessActionRequest@data+1,fsr2h
  2490  001774  50DF               	movf	indf2,w,c
  2491  001776  B4D8               	btfsc	status,2,c
  2492  001778  EFC0  F00B         	goto	u1001
  2493  00177C  EFC2  F00B         	goto	u1000
  2494  001780                     u1001:
  2495  001780  EFE4  F00B         	goto	l337
  2496  001784                     u1000:
  2497  001784                     
  2498                           ; BSR set to: 0
  2499  001784  8289               	bsf	137,1,c	;volatile
  2500  001786  EFE4  F00B         	goto	l337
  2501  00178A                     l2492:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;handler.c: 194:              ReloadConfig();
  2505  00178A  ECE5  F00B         	call	_ReloadConfig	;wreg free
  2506                           
  2507                           ;handler.c: 195:             break;
  2508  00178E  EFE4  F00B         	goto	l337
  2509  001792                     l2494:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;handler.c: 197:             SendError(0x04);
  2513  001792  0E04               	movlw	4
  2514  001794  EC49  F00B         	call	_SendError
  2515                           
  2516                           ;handler.c: 198:     }
  2517  001798  EFE4  F00B         	goto	l337
  2518  00179C                     l2496:
  2519  00179C  5024               	movf	ProcessActionRequest@actionID^0,w,c
  2520  00179E  0100               	movlb	0	; () banked
  2521  0017A0  6FA7               	movwf	??_ProcessActionRequest& (0+255),b
  2522  0017A2  6BA8               	clrf	(??_ProcessActionRequest+1)& (0+255),b
  2523                           
  2524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2525                           ; Switch size 1, requested type "simple"
  2526                           ; Number of cases is 1, Range of values is 0 to 0
  2527                           ; switch strategies available:
  2528                           ; Name         Instructions Cycles
  2529                           ; simple_byte            4     3 (average)
  2530                           ;	Chosen strategy is simple_byte
  2531  0017A4  51A8               	movf	(??_ProcessActionRequest+1)& (0+255),w,b
  2532  0017A6  0A00               	xorlw	0	; case 0
  2533  0017A8  B4D8               	btfsc	status,2,c
  2534  0017AA  EFD9  F00B         	goto	l2786
  2535  0017AE  EFC9  F00B         	goto	l2494
  2536  0017B2                     l2786:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ; Switch size 1, requested type "simple"
  2540                           ; Number of cases is 2, Range of values is 19 to 21
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte            7     4 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545  0017B2  51A7               	movf	??_ProcessActionRequest& (0+255),w,b
  2546  0017B4  0A13               	xorlw	19	; case 19
  2547  0017B6  B4D8               	btfsc	status,2,c
  2548  0017B8  EFB5  F00B         	goto	l329
  2549  0017BC  0A06               	xorlw	6	; case 21
  2550  0017BE  B4D8               	btfsc	status,2,c
  2551  0017C0  EFC5  F00B         	goto	l2492
  2552  0017C4  EFC9  F00B         	goto	l2494
  2553  0017C8                     l337:
  2554  0017C8  0012               	return		;funcret
  2555  0017CA                     __end_of_ProcessActionRequest:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _SendError *****************
  2559 ;; Defined at:
  2560 ;;		line 226 in file "handler.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  errorCode       1    wreg     unsigned char 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  errorCode       1    3[BANK0 ] unsigned char 
  2565 ;;  i               1    4[BANK0 ] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      unsigned char 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 8
  2582 ;; This function calls:
  2583 ;;		_QueueTXPacket
  2584 ;;		_SuperMemCpy
  2585 ;; This function is called by:
  2586 ;;		_ProcessAckPayload
  2587 ;;		_ProcessActionRequest
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text21
  2592  001692                     __ptext21:
  2593                           	callstack 0
  2594  001692                     _SendError:
  2595                           	callstack 20
  2596                           
  2597                           ;incstack = 0
  2598                           ;SendError@errorCode stored from wreg
  2599  001692  0100               	movlb	0	; () banked
  2600  001694  6FA3               	movwf	SendError@errorCode& (0+255),b
  2601  001696                     
  2602                           ;handler.c: 227:     uint8_t i = 0;
  2603  001696  0E00               	movlw	0
  2604  001698  0100               	movlb	0	; () banked
  2605  00169A  6FA4               	movwf	SendError@i& (0+255),b
  2606  00169C                     
  2607                           ; BSR set to: 0
  2608                           ;handler.c: 228:     bufferTX[i] = 0x01;
  2609  00169C  0E01               	movlw	1
  2610  00169E  6F80               	movwf	_bufferTX& (0+255),b
  2611  0016A0                     
  2612                           ; BSR set to: 0
  2613                           ;handler.c: 229:     SuperMemCpy(bufferTX, 1, BoardAddress, 0, 3);
  2614  0016A0  0E80               	movlw	low _bufferTX
  2615  0016A2  6E18               	movwf	SuperMemCpy@dest^0,c
  2616  0016A4  0E00               	movlw	high _bufferTX
  2617  0016A6  6E19               	movwf	(SuperMemCpy@dest+1)^0,c
  2618  0016A8  0E01               	movlw	1
  2619  0016AA  6E1A               	movwf	SuperMemCpy@destStart^0,c
  2620  0016AC  0E41               	movlw	low _BoardAddress
  2621  0016AE  6E1B               	movwf	SuperMemCpy@src^0,c
  2622  0016B0  0E00               	movlw	high _BoardAddress
  2623  0016B2  6E1C               	movwf	(SuperMemCpy@src+1)^0,c
  2624  0016B4  0E00               	movlw	0
  2625  0016B6  6E1D               	movwf	SuperMemCpy@srcStart^0,c
  2626  0016B8  0E03               	movlw	3
  2627  0016BA  6E1E               	movwf	SuperMemCpy@sz^0,c
  2628  0016BC  EC43  F00C         	call	_SuperMemCpy	;wreg free
  2629  0016C0                     
  2630                           ;handler.c: 230:     i += 3;
  2631  0016C0  0E03               	movlw	3
  2632  0016C2  0100               	movlb	0	; () banked
  2633  0016C4  27A4               	addwf	SendError@i& (0+255),f,b
  2634  0016C6                     
  2635                           ; BSR set to: 0
  2636                           ;handler.c: 231:     bufferTX[++i] = 0;
  2637  0016C6  2BA4               	incf	SendError@i& (0+255),f,b
  2638  0016C8  0E80               	movlw	low _bufferTX
  2639  0016CA  25A4               	addwf	SendError@i& (0+255),w,b
  2640  0016CC  6ED9               	movwf	fsr2l,c
  2641  0016CE  6ADA               	clrf	fsr2h,c
  2642  0016D0  0E00               	movlw	high _bufferTX
  2643  0016D2  22DA               	addwfc	fsr2h,f,c
  2644  0016D4  0E00               	movlw	0
  2645  0016D6  6EDF               	movwf	indf2,c
  2646  0016D8                     
  2647                           ; BSR set to: 0
  2648                           ;handler.c: 232:     bufferTX[++i] = errorCode;
  2649  0016D8  2BA4               	incf	SendError@i& (0+255),f,b
  2650  0016DA  0E80               	movlw	low _bufferTX
  2651  0016DC  25A4               	addwf	SendError@i& (0+255),w,b
  2652  0016DE  6ED9               	movwf	fsr2l,c
  2653  0016E0  6ADA               	clrf	fsr2h,c
  2654  0016E2  0E00               	movlw	high _bufferTX
  2655  0016E4  22DA               	addwfc	fsr2h,f,c
  2656  0016E6  C0A3  FFDF         	movff	SendError@errorCode,indf2
  2657  0016EA                     
  2658                           ; BSR set to: 0
  2659                           ;handler.c: 233:     return QueueTXPacket(bufferTX, (i + 1));;	Return value of _SendErro
      +                          r is never used
  2660  0016EA  0E80               	movlw	low _bufferTX
  2661  0016EC  6FA0               	movwf	QueueTXPacket@buffer& (0+255),b
  2662  0016EE  0E00               	movlw	high _bufferTX
  2663  0016F0  6FA1               	movwf	(QueueTXPacket@buffer+1)& (0+255),b
  2664  0016F2  29A4               	incf	SendError@i& (0+255),w,b
  2665  0016F4  6FA2               	movwf	QueueTXPacket@sz& (0+255),b
  2666  0016F6  EC25  F00A         	call	_QueueTXPacket	;wreg free
  2667  0016FA  0012               	return		;funcret
  2668  0016FC                     __end_of_SendError:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _SuperMemCpy *****************
  2672 ;; Defined at:
  2673 ;;		line 242 in file "handler.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  dest            2   23[COMRAM] PTR unsigned char 
  2676 ;;		 -> bufferTX(32), ProcessAckPayload@data(32), config(17), 
  2677 ;;  destStart       1   25[COMRAM] unsigned char 
  2678 ;;  src             2   26[COMRAM] PTR unsigned char 
  2679 ;;		 -> bufferRX(32), BoardAddress(3), 
  2680 ;;  srcStart        1   28[COMRAM] unsigned char 
  2681 ;;  sz              1   29[COMRAM] unsigned char 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  i               1   34[COMRAM] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2693 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;Total ram usage:       12 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 6
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_ProcessAckPayload
  2704 ;;		_SendError
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text22
  2709  001886                     __ptext22:
  2710                           	callstack 0
  2711  001886                     _SuperMemCpy:
  2712                           	callstack 22
  2713  001886                     
  2714                           ;handler.c: 243:     for (uint8_t i = 0; i < sz; i++) {
  2715  001886  0E00               	movlw	0
  2716  001888  6E23               	movwf	SuperMemCpy@i^0,c
  2717  00188A  EF62  F00C         	goto	l2432
  2718  00188E                     l2428:
  2719                           
  2720                           ;handler.c: 244:         dest[i + destStart] = src[i + srcStart];
  2721  00188E  5023               	movf	SuperMemCpy@i^0,w,c
  2722  001890  241B               	addwf	SuperMemCpy@src^0,w,c
  2723  001892  6E1F               	movwf	??_SuperMemCpy^0,c
  2724  001894  0E00               	movlw	0
  2725  001896  201C               	addwfc	(SuperMemCpy@src+1)^0,w,c
  2726  001898  6E20               	movwf	(??_SuperMemCpy+1)^0,c
  2727  00189A  501D               	movf	SuperMemCpy@srcStart^0,w,c
  2728  00189C  241F               	addwf	??_SuperMemCpy^0,w,c
  2729  00189E  6ED9               	movwf	fsr2l,c
  2730  0018A0  0E00               	movlw	0
  2731  0018A2  2020               	addwfc	(??_SuperMemCpy+1)^0,w,c
  2732  0018A4  6EDA               	movwf	fsr2h,c
  2733  0018A6  5023               	movf	SuperMemCpy@i^0,w,c
  2734  0018A8  2418               	addwf	SuperMemCpy@dest^0,w,c
  2735  0018AA  6E21               	movwf	(??_SuperMemCpy+2)^0,c
  2736  0018AC  0E00               	movlw	0
  2737  0018AE  2019               	addwfc	(SuperMemCpy@dest+1)^0,w,c
  2738  0018B0  6E22               	movwf	(??_SuperMemCpy+3)^0,c
  2739  0018B2  501A               	movf	SuperMemCpy@destStart^0,w,c
  2740  0018B4  2421               	addwf	(??_SuperMemCpy+2)^0,w,c
  2741  0018B6  6EE1               	movwf	fsr1l,c
  2742  0018B8  0E00               	movlw	0
  2743  0018BA  2022               	addwfc	(??_SuperMemCpy+3)^0,w,c
  2744  0018BC  6EE2               	movwf	fsr1h,c
  2745  0018BE  CFDF FFE7          	movff	indf2,indf1
  2746  0018C2                     
  2747                           ;handler.c: 245:     }
  2748  0018C2  2A23               	incf	SuperMemCpy@i^0,f,c
  2749  0018C4                     l2432:
  2750  0018C4  501E               	movf	SuperMemCpy@sz^0,w,c
  2751  0018C6  5C23               	subwf	SuperMemCpy@i^0,w,c
  2752  0018C8  A0D8               	btfss	status,0,c
  2753  0018CA  EF69  F00C         	goto	u991
  2754  0018CE  EF6B  F00C         	goto	u990
  2755  0018D2                     u991:
  2756  0018D2  EF47  F00C         	goto	l2428
  2757  0018D6                     u990:
  2758  0018D6  0012               	return		;funcret
  2759  0018D8                     __end_of_SuperMemCpy:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _QueueTXPacket *****************
  2763 ;; Defined at:
  2764 ;;		line 71 in file "handler.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  2767 ;;		 -> bufferTX(32), 
  2768 ;;  sz              1    2[BANK0 ] unsigned char 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  i               1   34[COMRAM] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      unsigned char 
  2773 ;; Registers used:
  2774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2780 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;Total ram usage:        4 bytes
  2785 ;; Hardware stack levels used: 1
  2786 ;; Hardware stack levels required when called: 7
  2787 ;; This function calls:
  2788 ;;		_memcpy
  2789 ;; This function is called by:
  2790 ;;		_SendError
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text23
  2795  00144A                     __ptext23:
  2796                           	callstack 0
  2797  00144A                     _QueueTXPacket:
  2798                           	callstack 20
  2799  00144A                     
  2800                           ;handler.c: 72:     uint8_t i;;handler.c: 73:     for (i = 0; i < 8; i++) {
  2801  00144A  0E00               	movlw	0
  2802  00144C  6E23               	movwf	QueueTXPacket@i^0,c
  2803  00144E                     l2404:
  2804                           
  2805                           ;handler.c: 74:         if (packetsTX[i].free) {
  2806  00144E  5023               	movf	QueueTXPacket@i^0,w,c
  2807  001450  0D22               	mullw	34
  2808  001452  0EF3               	movlw	low (_packetsTX+32)
  2809  001454  24F3               	addwf	243,w,c
  2810  001456  6ED9               	movwf	fsr2l,c
  2811  001458  0E00               	movlw	high (_packetsTX+32)
  2812  00145A  20F4               	addwfc	prodh,w,c
  2813  00145C  6EDA               	movwf	fsr2h,c
  2814  00145E  50DF               	movf	indf2,w,c
  2815  001460  B4D8               	btfsc	status,2,c
  2816  001462  EF35  F00A         	goto	u961
  2817  001466  EF37  F00A         	goto	u960
  2818  00146A                     u961:
  2819  00146A  EF39  F00A         	goto	l2408
  2820  00146E                     u960:
  2821  00146E  EF42  F00A         	goto	l2412
  2822  001472                     l2408:
  2823                           
  2824                           ;handler.c: 77:     }
  2825  001472  2A23               	incf	QueueTXPacket@i^0,f,c
  2826  001474  0E07               	movlw	7
  2827  001476  6423               	cpfsgt	QueueTXPacket@i^0,c
  2828  001478  EF40  F00A         	goto	u971
  2829  00147C  EF42  F00A         	goto	u970
  2830  001480                     u971:
  2831  001480  EF27  F00A         	goto	l2404
  2832  001484                     u970:
  2833  001484                     l2412:
  2834                           
  2835                           ;handler.c: 78:     if (i == 8) {
  2836  001484  0E08               	movlw	8
  2837  001486  1823               	xorwf	QueueTXPacket@i^0,w,c
  2838  001488  A4D8               	btfss	status,2,c
  2839  00148A  EF49  F00A         	goto	u981
  2840  00148E  EF4B  F00A         	goto	u980
  2841  001492                     u981:
  2842  001492  EF4E  F00A         	goto	l2418
  2843  001496                     u980:
  2844  001496                     
  2845                           ;handler.c: 79:         return 0;
  2846  001496  0E00               	movlw	0
  2847  001498  EF74  F00A         	goto	l289
  2848  00149C                     l2418:
  2849                           
  2850                           ;handler.c: 81:     packetsTX[i].free = 0;
  2851  00149C  5023               	movf	QueueTXPacket@i^0,w,c
  2852  00149E  0D22               	mullw	34
  2853  0014A0  0EF3               	movlw	low (_packetsTX+32)
  2854  0014A2  24F3               	addwf	243,w,c
  2855  0014A4  6ED9               	movwf	fsr2l,c
  2856  0014A6  0E00               	movlw	high (_packetsTX+32)
  2857  0014A8  20F4               	addwfc	prodh,w,c
  2858  0014AA  6EDA               	movwf	fsr2h,c
  2859  0014AC  0E00               	movlw	0
  2860  0014AE  6EDF               	movwf	indf2,c
  2861                           
  2862                           ;handler.c: 82:     packetsTX[i].size = sz;
  2863  0014B0  5023               	movf	QueueTXPacket@i^0,w,c
  2864  0014B2  0D22               	mullw	34
  2865  0014B4  0EF4               	movlw	low (_packetsTX+33)
  2866  0014B6  24F3               	addwf	243,w,c
  2867  0014B8  6ED9               	movwf	fsr2l,c
  2868  0014BA  0E00               	movlw	high (_packetsTX+33)
  2869  0014BC  20F4               	addwfc	prodh,w,c
  2870  0014BE  6EDA               	movwf	fsr2h,c
  2871  0014C0  C0A2  FFDF         	movff	QueueTXPacket@sz,indf2
  2872  0014C4                     
  2873                           ;handler.c: 83:     memcpy(packetsTX[i].packet, buffer, sz);
  2874  0014C4  5023               	movf	QueueTXPacket@i^0,w,c
  2875  0014C6  0D22               	mullw	34
  2876  0014C8  0ED3               	movlw	low _packetsTX
  2877  0014CA  24F3               	addwf	243,w,c
  2878  0014CC  6E18               	movwf	memcpy@d1^0,c
  2879  0014CE  0E00               	movlw	high _packetsTX
  2880  0014D0  20F4               	addwfc	prodh,w,c
  2881  0014D2  6E19               	movwf	(memcpy@d1+1)^0,c
  2882  0014D4  C0A0  F01A         	movff	QueueTXPacket@buffer,memcpy@s1
  2883  0014D8  C0A1  F01B         	movff	QueueTXPacket@buffer+1,memcpy@s1+1
  2884  0014DC  C0A2  F01C         	movff	QueueTXPacket@sz,memcpy@n
  2885  0014E0  6A1D               	clrf	(memcpy@n+1)^0,c
  2886  0014E2  EC95  F00C         	call	_memcpy	;wreg free
  2887  0014E6                     
  2888                           ;handler.c: 84:     return 1;
  2889  0014E6  0E01               	movlw	1
  2890  0014E8                     l289:
  2891  0014E8  0012               	return		;funcret
  2892  0014EA                     __end_of_QueueTXPacket:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _ReloadConfig *****************
  2896 ;; Defined at:
  2897 ;;		line 212 in file "handler.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  ard             1   34[COMRAM] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:        1 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 8
  2918 ;; This function calls:
  2919 ;;		_memcpy
  2920 ;;		_nrf24_write_buff
  2921 ;;		_nrf24_write_register
  2922 ;; This function is called by:
  2923 ;;		_ProcessActionRequest
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text24
  2928  0017CA                     __ptext24:
  2929                           	callstack 0
  2930  0017CA                     _ReloadConfig:
  2931                           	callstack 19
  2932  0017CA                     
  2933                           ;handler.c: 213:     config.IsConfigured = 1;
  2934  0017CA  0E01               	movlw	1
  2935  0017CC  6E29               	movwf	_config^0,c
  2936  0017CE                     
  2937                           ;handler.c: 214:     nrf24_write_register(0x05, config.RFChannel);
  2938  0017CE  C02E  F019         	movff	_config+5,nrf24_write_register@value
  2939  0017D2  0E05               	movlw	5
  2940  0017D4  EC09  F00B         	call	_nrf24_write_register
  2941  0017D8                     
  2942                           ;handler.c: 216:     nrf24_write_buff(0x10, config.PipeAddr1, 5);
  2943  0017D8  0E2F               	movlw	low (_config+6)
  2944  0017DA  6E19               	movwf	nrf24_write_buff@buffer^0,c
  2945  0017DC  0E00               	movlw	high (_config+6)
  2946  0017DE  6E1A               	movwf	(nrf24_write_buff@buffer+1)^0,c
  2947  0017E0  0E05               	movlw	5
  2948  0017E2  6E1B               	movwf	nrf24_write_buff@bytes^0,c
  2949  0017E4  0E10               	movlw	16
  2950  0017E6  EC56  F00D         	call	_nrf24_write_buff
  2951  0017EA                     
  2952                           ;handler.c: 217:     nrf24_write_buff(0x0A, config.PipeAddr1, 5);
  2953  0017EA  0E2F               	movlw	low (_config+6)
  2954  0017EC  6E19               	movwf	nrf24_write_buff@buffer^0,c
  2955  0017EE  0E00               	movlw	high (_config+6)
  2956  0017F0  6E1A               	movwf	(nrf24_write_buff@buffer+1)^0,c
  2957  0017F2  0E05               	movlw	5
  2958  0017F4  6E1B               	movwf	nrf24_write_buff@bytes^0,c
  2959  0017F6  0E0A               	movlw	10
  2960  0017F8  EC56  F00D         	call	_nrf24_write_buff
  2961  0017FC                     
  2962                           ;handler.c: 219:     uint8_t ard = (config.ARD << 4) | 0xF;
  2963  0017FC  3839               	swapf	(_config+16)^0,w,c
  2964  0017FE  0BF0               	andlw	240
  2965  001800  090F               	iorlw	15
  2966  001802  6E23               	movwf	ReloadConfig@ard^0,c
  2967  001804                     
  2968                           ;handler.c: 220:     nrf24_write_register(0x04, ard);
  2969  001804  C023  F019         	movff	ReloadConfig@ard,nrf24_write_register@value
  2970  001808  0E04               	movlw	4
  2971  00180A  EC09  F00B         	call	_nrf24_write_register
  2972  00180E                     
  2973                           ;handler.c: 222:     memcpy(BoardAddress,config.Address,3);
  2974  00180E  0E41               	movlw	low _BoardAddress
  2975  001810  6E18               	movwf	memcpy@d1^0,c
  2976  001812  0E00               	movlw	high _BoardAddress
  2977  001814  6E19               	movwf	(memcpy@d1+1)^0,c
  2978  001816  0E2A               	movlw	low (_config+1)
  2979  001818  6E1A               	movwf	memcpy@s1^0,c
  2980  00181A  0E00               	movlw	high (_config+1)
  2981  00181C  6E1B               	movwf	(memcpy@s1+1)^0,c
  2982  00181E  0E00               	movlw	0
  2983  001820  6E1D               	movwf	(memcpy@n+1)^0,c
  2984  001822  0E03               	movlw	3
  2985  001824  6E1C               	movwf	memcpy@n^0,c
  2986  001826  EC95  F00C         	call	_memcpy	;wreg free
  2987  00182A                     
  2988                           ;handler.c: 223:     PingInterval = config.PingInterval;
  2989  00182A  C02D  F03A         	movff	_config+4,_PingInterval
  2990  00182E  0012               	return		;funcret
  2991  001830                     __end_of_ReloadConfig:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _nrf24_write_register *****************
  2995 ;; Defined at:
  2996 ;;		line 8 in file "../lib/nrf24_lib.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  mnemonic_add    1    wreg     unsigned char 
  2999 ;;  value           1   24[COMRAM] unsigned char 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  mnemonic_add    1   25[COMRAM] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3011 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;Total ram usage:        2 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 7
  3018 ;; This function calls:
  3019 ;;		_SPI1_ExchangeByte
  3020 ;; This function is called by:
  3021 ;;		_InitRadio
  3022 ;;		_HandlePacketLoop
  3023 ;;		_ReloadConfig
  3024 ;;		_nrf24_read_rf_data
  3025 ;;		_nrf24_flush_tx_rx
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text25
  3030  001612                     __ptext25:
  3031                           	callstack 0
  3032  001612                     _nrf24_write_register:
  3033                           	callstack 22
  3034                           
  3035                           ;incstack = 0
  3036                           ;nrf24_write_register@mnemonic_addr stored from wreg
  3037  001612  6E1A               	movwf	nrf24_write_register@mnemonic_addr^0,c
  3038  001614  928B               	bcf	139,1,c	;volatile
  3039  001616                     
  3040                           ;../lib/nrf24_lib.c: 10:     if (mnemonic_addr < 0x20) {
  3041  001616  0E20               	movlw	32
  3042  001618  601A               	cpfslt	nrf24_write_register@mnemonic_addr^0,c
  3043  00161A  EF11  F00B         	goto	u911
  3044  00161E  EF13  F00B         	goto	u910
  3045  001622                     u911:
  3046  001622  EF1D  F00B         	goto	l2382
  3047  001626                     u910:
  3048  001626                     
  3049                           ;../lib/nrf24_lib.c: 12:         SPI1_ExchangeByte(0x20 | (mnemonic_addr & 0x1F));
  3050  001626  501A               	movf	nrf24_write_register@mnemonic_addr^0,w,c
  3051  001628  0B1F               	andlw	31
  3052  00162A  0920               	iorlw	32
  3053  00162C  EC3E  F00E         	call	_SPI1_ExchangeByte
  3054  001630                     
  3055                           ;../lib/nrf24_lib.c: 13:         SPI1_ExchangeByte(value);
  3056  001630  5019               	movf	nrf24_write_register@value^0,w,c
  3057  001632  EC3E  F00E         	call	_SPI1_ExchangeByte
  3058                           
  3059                           ;../lib/nrf24_lib.c: 14:     } else {
  3060  001636  EF46  F00B         	goto	l2394
  3061  00163A                     l2382:
  3062                           
  3063                           ;../lib/nrf24_lib.c: 16:         SPI1_ExchangeByte(mnemonic_addr);
  3064  00163A  501A               	movf	nrf24_write_register@mnemonic_addr^0,w,c
  3065  00163C  EC3E  F00E         	call	_SPI1_ExchangeByte
  3066  001640                     
  3067                           ;../lib/nrf24_lib.c: 17:         if ((mnemonic_addr != 0xE1) && (mnemonic_addr != 0xE2) 
      +                          && (mnemonic_addr != 0xE3) && (mnemonic_addr != 0xFF)) {
  3068  001640  0EE1               	movlw	225
  3069  001642  181A               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  3070  001644  B4D8               	btfsc	status,2,c
  3071  001646  EF27  F00B         	goto	u921
  3072  00164A  EF29  F00B         	goto	u920
  3073  00164E                     u921:
  3074  00164E  EF46  F00B         	goto	l2394
  3075  001652                     u920:
  3076  001652  0EE2               	movlw	226
  3077  001654  181A               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  3078  001656  B4D8               	btfsc	status,2,c
  3079  001658  EF30  F00B         	goto	u931
  3080  00165C  EF32  F00B         	goto	u930
  3081  001660                     u931:
  3082  001660  EF46  F00B         	goto	l2394
  3083  001664                     u930:
  3084  001664  0EE3               	movlw	227
  3085  001666  181A               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  3086  001668  B4D8               	btfsc	status,2,c
  3087  00166A  EF39  F00B         	goto	u941
  3088  00166E  EF3B  F00B         	goto	u940
  3089  001672                     u941:
  3090  001672  EF46  F00B         	goto	l2394
  3091  001676                     u940:
  3092  001676  281A               	incf	nrf24_write_register@mnemonic_addr^0,w,c
  3093  001678  B4D8               	btfsc	status,2,c
  3094  00167A  EF41  F00B         	goto	u951
  3095  00167E  EF43  F00B         	goto	u950
  3096  001682                     u951:
  3097  001682  EF46  F00B         	goto	l2394
  3098  001686                     u950:
  3099  001686                     
  3100                           ;../lib/nrf24_lib.c: 18: ;../lib/nrf24_lib.c: 20:             SPI1_ExchangeByte(value);
  3101  001686  5019               	movf	nrf24_write_register@value^0,w,c
  3102  001688  EC3E  F00E         	call	_SPI1_ExchangeByte
  3103  00168C                     l2394:
  3104                           
  3105                           ;../lib/nrf24_lib.c: 23:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  3106  00168C  D000               	nop2		;2 cycle nop
  3107  00168E  828B               	bsf	139,1,c	;volatile
  3108  001690  0012               	return		;funcret
  3109  001692                     __end_of_nrf24_write_register:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _nrf24_write_buff *****************
  3113 ;; Defined at:
  3114 ;;		line 46 in file "../lib/nrf24_lib.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  mnemonic_add    1    wreg     unsigned char 
  3117 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  3118 ;;		 -> packetsTX(272), config(17), DEFAULT_PIPE_ADDR(6), 
  3119 ;;  bytes           1   26[COMRAM] unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  mnemonic_add    1   27[COMRAM] unsigned char 
  3122 ;;  i               1   28[COMRAM] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3132 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;Total ram usage:        5 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; Hardware stack levels required when called: 7
  3139 ;; This function calls:
  3140 ;;		_SPI1_ExchangeByte
  3141 ;; This function is called by:
  3142 ;;		_InitRadio
  3143 ;;		_ReloadConfig
  3144 ;;		_nrf24_send_rf_data
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text26
  3149  001AAC                     __ptext26:
  3150                           	callstack 0
  3151  001AAC                     _nrf24_write_buff:
  3152                           	callstack 22
  3153                           
  3154                           ;incstack = 0
  3155                           ;nrf24_write_buff@mnemonic_addr stored from wreg
  3156  001AAC  6E1C               	movwf	nrf24_write_buff@mnemonic_addr^0,c
  3157  001AAE  928B               	bcf	139,1,c	;volatile
  3158  001AB0                     
  3159                           ;../lib/nrf24_lib.c: 49:     SPI1_ExchangeByte(0x20 | mnemonic_addr);
  3160  001AB0  501C               	movf	nrf24_write_buff@mnemonic_addr^0,w,c
  3161  001AB2  0920               	iorlw	32
  3162  001AB4  EC3E  F00E         	call	_SPI1_ExchangeByte
  3163  001AB8                     
  3164                           ;../lib/nrf24_lib.c: 50:     for (i = 0; i < bytes; i++) {
  3165  001AB8  0E00               	movlw	0
  3166  001ABA  6E1D               	movwf	nrf24_write_buff@i^0,c
  3167  001ABC  EF6B  F00D         	goto	l2374
  3168  001AC0                     l2366:
  3169                           
  3170                           ;../lib/nrf24_lib.c: 51:         SPI1_ExchangeByte(*buffer);
  3171  001AC0  C019  FFD9         	movff	nrf24_write_buff@buffer,fsr2l
  3172  001AC4  C01A  FFDA         	movff	nrf24_write_buff@buffer+1,fsr2h
  3173  001AC8  50DF               	movf	indf2,w,c
  3174  001ACA  EC3E  F00E         	call	_SPI1_ExchangeByte
  3175  001ACE                     
  3176                           ;../lib/nrf24_lib.c: 52:         buffer++;
  3177  001ACE  4A19               	infsnz	nrf24_write_buff@buffer^0,f,c
  3178  001AD0  2A1A               	incf	(nrf24_write_buff@buffer+1)^0,f,c
  3179  001AD2                     
  3180                           ;../lib/nrf24_lib.c: 53:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  3181  001AD2  D000               	nop2		;2 cycle nop
  3182  001AD4                     
  3183                           ;../lib/nrf24_lib.c: 54:     }
  3184  001AD4  2A1D               	incf	nrf24_write_buff@i^0,f,c
  3185  001AD6                     l2374:
  3186  001AD6  501B               	movf	nrf24_write_buff@bytes^0,w,c
  3187  001AD8  5C1D               	subwf	nrf24_write_buff@i^0,w,c
  3188  001ADA  A0D8               	btfss	status,0,c
  3189  001ADC  EF72  F00D         	goto	u901
  3190  001AE0  EF74  F00D         	goto	u900
  3191  001AE4                     u901:
  3192  001AE4  EF60  F00D         	goto	l2366
  3193  001AE8                     u900:
  3194  001AE8  828B               	bsf	139,1,c	;volatile
  3195  001AEA  0012               	return		;funcret
  3196  001AEC                     __end_of_nrf24_write_buff:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _SPI1_ExchangeByte *****************
  3200 ;; Defined at:
  3201 ;;		line 92 in file "mcc_generated_files/spi1.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  data            1    wreg     unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  data            1   23[COMRAM] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      unsigned char 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        1 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 6
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_nrf24_write_register
  3226 ;;		_nrf24_read_register
  3227 ;;		_nrf24_read_dynamic_payload_length
  3228 ;;		_nrf24_write_buff
  3229 ;;		_nrf24_read_buff
  3230 ;;		_nrf24_flush_tx_rx
  3231 ;;		_SPI1_WriteBlock
  3232 ;;		_SPI1_ReadBlock
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text27
  3237  001C7C                     __ptext27:
  3238                           	callstack 0
  3239  001C7C                     _SPI1_ExchangeByte:
  3240                           	callstack 22
  3241                           
  3242                           ;incstack = 0
  3243                           ;SPI1_ExchangeByte@data stored from wreg
  3244  001C7C  6E18               	movwf	SPI1_ExchangeByte@data^0,c
  3245  001C7E                     
  3246                           ;mcc_generated_files/spi1.c: 92: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 93: {;mcc_generated_files/spi1.c: 94:     SSP1BUF = data;
  3247  001C7E  C018  FFC9         	movff	SPI1_ExchangeByte@data,4041	;volatile
  3248  001C82                     l61:
  3249  001C82  A69E               	btfss	158,3,c	;volatile
  3250  001C84  EF46  F00E         	goto	u881
  3251  001C88  EF48  F00E         	goto	u880
  3252  001C8C                     u881:
  3253  001C8C  EF41  F00E         	goto	l61
  3254  001C90                     u880:
  3255  001C90                     
  3256                           ;mcc_generated_files/spi1.c: 96:     PIR1bits.SSP1IF = 0;
  3257  001C90  969E               	bcf	158,3,c	;volatile
  3258                           
  3259                           ;mcc_generated_files/spi1.c: 97:     return SSP1BUF;
  3260  001C92  50C9               	movf	201,w,c	;volatile
  3261  001C94  0012               	return		;funcret
  3262  001C96                     __end_of_SPI1_ExchangeByte:
  3263                           	callstack 0
  3264                           
  3265 ;; *************** function _memcpy *****************
  3266 ;; Defined at:
  3267 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  d1              2   23[COMRAM] PTR void 
  3270 ;;		 -> packetsTX(272), BoardAddress(3), config(17), 
  3271 ;;  s1              2   25[COMRAM] PTR const void 
  3272 ;;		 -> bufferTX(32), config.Address(3), BoardAddress(3), config(17), 
  3273 ;;		 -> DEFAULT_PIPE_ADDR(6), 
  3274 ;;  n               2   27[COMRAM] unsigned int 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  s               2   32[COMRAM] PTR const unsigned char 
  3277 ;;		 -> bufferTX(32), config.Address(3), BoardAddress(3), config(17), 
  3278 ;;		 -> DEFAULT_PIPE_ADDR(6), 
  3279 ;;  d               2   30[COMRAM] PTR unsigned char 
  3280 ;;		 -> packetsTX(272), BoardAddress(3), config(17), 
  3281 ;;  tmp             1   29[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  2   23[COMRAM] PTR void 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3291 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;Total ram usage:       11 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 6
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_InitRadio
  3302 ;;		_QueueTXPacket
  3303 ;;		_ReloadConfig
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text28
  3308  00192A                     __ptext28:
  3309                           	callstack 0
  3310  00192A                     _memcpy:
  3311                           	callstack 23
  3312  00192A  C01A  F021         	movff	memcpy@s1,memcpy@s
  3313  00192E  C01B  F022         	movff	memcpy@s1+1,memcpy@s+1
  3314  001932  C018  F01F         	movff	memcpy@d1,memcpy@d
  3315  001936  C019  F020         	movff	memcpy@d1+1,memcpy@d+1
  3316  00193A  EFAF  F00C         	goto	l2360
  3317  00193E                     l2352:
  3318  00193E  C021  FFD9         	movff	memcpy@s,fsr2l
  3319  001942  C022  FFDA         	movff	memcpy@s+1,fsr2h
  3320  001946  50DF               	movf	indf2,w,c
  3321  001948  6E1E               	movwf	memcpy@tmp^0,c
  3322  00194A  4A21               	infsnz	memcpy@s^0,f,c
  3323  00194C  2A22               	incf	(memcpy@s+1)^0,f,c
  3324  00194E  C01F  FFD9         	movff	memcpy@d,fsr2l
  3325  001952  C020  FFDA         	movff	memcpy@d+1,fsr2h
  3326  001956  C01E  FFDF         	movff	memcpy@tmp,indf2
  3327  00195A  4A1F               	infsnz	memcpy@d^0,f,c
  3328  00195C  2A20               	incf	(memcpy@d+1)^0,f,c
  3329  00195E                     l2360:
  3330  00195E  061C               	decf	memcpy@n^0,f,c
  3331  001960  A0D8               	btfss	status,0,c
  3332  001962  061D               	decf	(memcpy@n+1)^0,f,c
  3333  001964  281C               	incf	memcpy@n^0,w,c
  3334  001966  E106               	bnz	u891
  3335  001968  281D               	incf	(memcpy@n+1)^0,w,c
  3336  00196A  A4D8               	btfss	status,2,c
  3337  00196C  EFBA  F00C         	goto	u891
  3338  001970  EFBC  F00C         	goto	u890
  3339  001974                     u891:
  3340  001974  EF9F  F00C         	goto	l2352
  3341  001978                     u890:
  3342  001978  0012               	return		;funcret
  3343  00197A                     __end_of_memcpy:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _INTERRUPT_InterruptManager *****************
  3347 ;; Defined at:
  3348 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;Total ram usage:        8 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 5
  3369 ;; This function calls:
  3370 ;;		_TMR1_ISR
  3371 ;; This function is called by:
  3372 ;;		Interrupt level 2
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	intcode
  3377  000008                     __pintcode:
  3378                           	callstack 0
  3379  000008                     _INTERRUPT_InterruptManager:
  3380                           	callstack 19
  3381                           
  3382                           ;incstack = 0
  3383  000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3384  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
  3385  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3386  000012  CFE1 F012          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  3387  000016  CFE2 F013          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  3388  00001A  CFD9 F014          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  3389  00001E  CFDA F015          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  3390  000022  CFF3 F016          	movff	prodl,??_INTERRUPT_InterruptManager+6
  3391  000026  CFF4 F017          	movff	prodh,??_INTERRUPT_InterruptManager+7
  3392  00002A                     
  3393                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  3394  00002A  ACF2               	btfss	242,6,c	;volatile
  3395  00002C  EF1A  F000         	goto	i2u85_41
  3396  000030  EF1C  F000         	goto	i2u85_40
  3397  000034                     i2u85_41:
  3398  000034  EF2C  F000         	goto	i2l197
  3399  000038                     i2u85_40:
  3400  000038                     
  3401                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3402  000038  A09D               	btfss	157,0,c	;volatile
  3403  00003A  EF21  F000         	goto	i2u86_41
  3404  00003E  EF23  F000         	goto	i2u86_40
  3405  000042                     i2u86_41:
  3406  000042  EF2C  F000         	goto	i2l197
  3407  000046                     i2u86_40:
  3408  000046  A09E               	btfss	158,0,c	;volatile
  3409  000048  EF28  F000         	goto	i2u87_41
  3410  00004C  EF2A  F000         	goto	i2u87_40
  3411  000050                     i2u87_41:
  3412  000050  EF2C  F000         	goto	i2l197
  3413  000054                     i2u87_40:
  3414  000054                     
  3415                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  3416  000054  EC76  F00D         	call	_TMR1_ISR	;wreg free
  3417  000058                     i2l197:
  3418  000058  C017  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  3419  00005C  C016  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  3420  000060  C015  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  3421  000064  C014  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  3422  000068  C013  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  3423  00006C  C012  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  3424  000070  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3425  000074  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3426  000078  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3427  00007A  0011               	retfie		f
  3428  00007C                     __end_of_INTERRUPT_InterruptManager:
  3429                           	callstack 0
  3430                           
  3431 ;; *************** function _TMR1_ISR *****************
  3432 ;; Defined at:
  3433 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; Hardware stack levels required when called: 4
  3454 ;; This function calls:
  3455 ;;		Absolute function
  3456 ;;		_TMR1_DefaultInterruptHandler
  3457 ;;		_TMR1_WriteTimer
  3458 ;;		_TimerInterruptHandler
  3459 ;; This function is called by:
  3460 ;;		_INTERRUPT_InterruptManager
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text30
  3465  001AEC                     __ptext30:
  3466                           	callstack 0
  3467  001AEC                     _TMR1_ISR:
  3468                           	callstack 19
  3469  001AEC                     
  3470                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  3471  001AEC  909E               	bcf	158,0,c	;volatile
  3472  001AEE                     
  3473                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  3474  001AEE  C046  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  3475  001AF2  C047  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  3476  001AF6  ECDA  F00D         	call	_TMR1_WriteTimer	;wreg free
  3477  001AFA                     
  3478                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  3479  001AFA  5044               	movf	_TMR1_InterruptHandler^0,w,c
  3480  001AFC  1045               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  3481  001AFE  B4D8               	btfsc	status,2,c
  3482  001B00  EF84  F00D         	goto	i2u72_41
  3483  001B04  EF86  F00D         	goto	i2u72_40
  3484  001B08                     i2u72_41:
  3485  001B08  EF92  F00D         	goto	i2l169
  3486  001B0C                     i2u72_40:
  3487  001B0C                     
  3488                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  3489  001B0C  D802               	call	i2u73_48
  3490  001B0E  EF92  F00D         	goto	i2u73_49
  3491  001B12                     i2u73_48:
  3492  001B12  0005               	push	
  3493  001B14  6EFA               	movwf	pclath,c
  3494  001B16  5044               	movf	_TMR1_InterruptHandler^0,w,c
  3495  001B18  6EFD               	movwf	tosl,c
  3496  001B1A  5045               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  3497  001B1C  6EFE               	movwf	tosh,c
  3498  001B1E  6AFF               	clrf	tosu,c
  3499  001B20  50FA               	movf	pclath,w,c
  3500  001B22  0012               	return		;indir
  3501  001B24                     i2u73_49:
  3502  001B24                     i2l169:
  3503  001B24  0012               	return		;funcret
  3504  001B26                     __end_of_TMR1_ISR:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3508 ;; Defined at:
  3509 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		None
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_TMR1_Initialize
  3533 ;;		_TMR1_ISR
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text31
  3538  001CF4                     __ptext31:
  3539                           	callstack 0
  3540  001CF4                     _TMR1_DefaultInterruptHandler:
  3541                           	callstack 22
  3542  001CF4  0012               	return		;funcret
  3543  001CF6                     __end_of_TMR1_DefaultInterruptHandler:
  3544                           	callstack 0
  3545                           
  3546 ;; *************** function _TimerInterruptHandler *****************
  3547 ;; Defined at:
  3548 ;;		line 138 in file "handler.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 3
  3569 ;; This function calls:
  3570 ;;		_SendPing
  3571 ;;		___llmod
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;;		_TMR1_ISR
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text32
  3579  001A62                     __ptext32:
  3580                           	callstack 0
  3581  001A62                     _TimerInterruptHandler:
  3582                           	callstack 19
  3583  001A62                     
  3584                           ;handler.c: 139:     Ticks++;
  3585  001A62  0E01               	movlw	1
  3586  001A64  2625               	addwf	_Ticks^0,f,c
  3587  001A66  0E00               	movlw	0
  3588  001A68  2226               	addwfc	(_Ticks+1)^0,f,c
  3589  001A6A  2227               	addwfc	(_Ticks+2)^0,f,c
  3590  001A6C  2228               	addwfc	(_Ticks+3)^0,f,c
  3591  001A6E                     
  3592                           ;handler.c: 142:     if (Ticks % PingInterval != 0) {
  3593  001A6E  C025  F001         	movff	_Ticks,___llmod@dividend
  3594  001A72  C026  F002         	movff	_Ticks+1,___llmod@dividend+1
  3595  001A76  C027  F003         	movff	_Ticks+2,___llmod@dividend+2
  3596  001A7A  C028  F004         	movff	_Ticks+3,___llmod@dividend+3
  3597  001A7E  503A               	movf	_PingInterval^0,w,c
  3598  001A80  6E05               	movwf	___llmod@divisor^0,c
  3599  001A82  6A06               	clrf	(___llmod@divisor+1)^0,c
  3600  001A84  6A07               	clrf	(___llmod@divisor+2)^0,c
  3601  001A86  6A08               	clrf	(___llmod@divisor+3)^0,c
  3602  001A88  ECC5  F00A         	call	___llmod	;wreg free
  3603  001A8C  5001               	movf	?___llmod^0,w,c
  3604  001A8E  1002               	iorwf	(?___llmod+1)^0,w,c
  3605  001A90  1003               	iorwf	(?___llmod+2)^0,w,c
  3606  001A92  1004               	iorwf	(?___llmod+3)^0,w,c
  3607  001A94  B4D8               	btfsc	status,2,c
  3608  001A96  EF4F  F00D         	goto	i2u71_41
  3609  001A9A  EF51  F00D         	goto	i2u71_40
  3610  001A9E                     i2u71_41:
  3611  001A9E  EF53  F00D         	goto	i2l2134
  3612  001AA2                     i2u71_40:
  3613  001AA2  EF55  F00D         	goto	i2l309
  3614  001AA6                     i2l2134:
  3615                           
  3616                           ;handler.c: 145:     SendPing();
  3617  001AA6  EC93  F00D         	call	_SendPing	;wreg free
  3618  001AAA                     i2l309:
  3619  001AAA  0012               	return		;funcret
  3620  001AAC                     __end_of_TimerInterruptHandler:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function ___llmod *****************
  3624 ;; Defined at:
  3625 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/llmod.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  dividend        4    0[COMRAM] unsigned long 
  3628 ;;  divisor         4    4[COMRAM] unsigned long 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  counter         1    8[COMRAM] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  4    0[COMRAM] unsigned long 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        9 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_TimerInterruptHandler
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text33
  3654  00158A                     __ptext33:
  3655                           	callstack 0
  3656  00158A                     ___llmod:
  3657                           	callstack 21
  3658  00158A  5005               	movf	___llmod@divisor^0,w,c
  3659  00158C  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  3660  00158E  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  3661  001590  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  3662  001592  B4D8               	btfsc	status,2,c
  3663  001594  EFCE  F00A         	goto	i2u65_41
  3664  001598  EFD0  F00A         	goto	i2u65_40
  3665  00159C                     i2u65_41:
  3666  00159C  EF00  F00B         	goto	i2l877
  3667  0015A0                     i2u65_40:
  3668  0015A0  0E01               	movlw	1
  3669  0015A2  6E09               	movwf	___llmod@counter^0,c
  3670  0015A4  EFDA  F00A         	goto	i2l2010
  3671  0015A8                     i2l2008:
  3672  0015A8  90D8               	bcf	status,0,c
  3673  0015AA  3605               	rlcf	___llmod@divisor^0,f,c
  3674  0015AC  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  3675  0015AE  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  3676  0015B0  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  3677  0015B2  2A09               	incf	___llmod@counter^0,f,c
  3678  0015B4                     i2l2010:
  3679  0015B4  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  3680  0015B6  EFDF  F00A         	goto	i2u66_41
  3681  0015BA  EFE1  F00A         	goto	i2u66_40
  3682  0015BE                     i2u66_41:
  3683  0015BE  EFD4  F00A         	goto	i2l2008
  3684  0015C2                     i2u66_40:
  3685  0015C2                     i2l2012:
  3686  0015C2  5005               	movf	___llmod@divisor^0,w,c
  3687  0015C4  5C01               	subwf	___llmod@dividend^0,w,c
  3688  0015C6  5006               	movf	(___llmod@divisor+1)^0,w,c
  3689  0015C8  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  3690  0015CA  5007               	movf	(___llmod@divisor+2)^0,w,c
  3691  0015CC  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  3692  0015CE  5008               	movf	(___llmod@divisor+3)^0,w,c
  3693  0015D0  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  3694  0015D2  A0D8               	btfss	status,0,c
  3695  0015D4  EFEE  F00A         	goto	i2u67_41
  3696  0015D8  EFF0  F00A         	goto	i2u67_40
  3697  0015DC                     i2u67_41:
  3698  0015DC  EFF8  F00A         	goto	i2l2016
  3699  0015E0                     i2u67_40:
  3700  0015E0  5005               	movf	___llmod@divisor^0,w,c
  3701  0015E2  5E01               	subwf	___llmod@dividend^0,f,c
  3702  0015E4  5006               	movf	(___llmod@divisor+1)^0,w,c
  3703  0015E6  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  3704  0015E8  5007               	movf	(___llmod@divisor+2)^0,w,c
  3705  0015EA  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  3706  0015EC  5008               	movf	(___llmod@divisor+3)^0,w,c
  3707  0015EE  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  3708  0015F0                     i2l2016:
  3709  0015F0  90D8               	bcf	status,0,c
  3710  0015F2  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  3711  0015F4  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  3712  0015F6  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  3713  0015F8  3205               	rrcf	___llmod@divisor^0,f,c
  3714  0015FA  2E09               	decfsz	___llmod@counter^0,f,c
  3715  0015FC  EFE1  F00A         	goto	i2l2012
  3716  001600                     i2l877:
  3717  001600  C001  F001         	movff	___llmod@dividend,?___llmod
  3718  001604  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3719  001608  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3720  00160C  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3721  001610  0012               	return		;funcret
  3722  001612                     __end_of___llmod:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _SendPing *****************
  3726 ;; Defined at:
  3727 ;;		line 236 in file "handler.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      unsigned char 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;Total ram usage:        0 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 2
  3748 ;; This function calls:
  3749 ;;		i2_QueueTXPacket
  3750 ;;		i2_SuperMemCpy
  3751 ;; This function is called by:
  3752 ;;		_TimerInterruptHandler
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text34
  3757  001B26                     __ptext34:
  3758                           	callstack 0
  3759  001B26                     _SendPing:
  3760                           	callstack 19
  3761  001B26                     
  3762                           ;handler.c: 237:     bufferTX[0] = 0x02;
  3763  001B26  0E02               	movlw	2
  3764  001B28  0100               	movlb	0	; () banked
  3765  001B2A  6F80               	movwf	_bufferTX& (0+255),b
  3766  001B2C                     
  3767                           ; BSR set to: 0
  3768                           ;handler.c: 238:     SuperMemCpy(bufferTX, 1, BoardAddress, 0, 3);
  3769  001B2C  0E80               	movlw	low _bufferTX
  3770  001B2E  6E01               	movwf	i2SuperMemCpy@dest^0,c
  3771  001B30  0E00               	movlw	high _bufferTX
  3772  001B32  6E02               	movwf	(i2SuperMemCpy@dest+1)^0,c
  3773  001B34  0E01               	movlw	1
  3774  001B36  6E03               	movwf	i2SuperMemCpy@destStart^0,c
  3775  001B38  0E41               	movlw	low _BoardAddress
  3776  001B3A  6E04               	movwf	i2SuperMemCpy@src^0,c
  3777  001B3C  0E00               	movlw	high _BoardAddress
  3778  001B3E  6E05               	movwf	(i2SuperMemCpy@src+1)^0,c
  3779  001B40  0E00               	movlw	0
  3780  001B42  6E06               	movwf	i2SuperMemCpy@srcStart^0,c
  3781  001B44  0E03               	movlw	3
  3782  001B46  6E07               	movwf	i2SuperMemCpy@sz^0,c
  3783  001B48  EC6C  F00C         	call	i2_SuperMemCpy	;wreg free
  3784  001B4C                     
  3785                           ;handler.c: 239:     return QueueTXPacket(bufferTX, (3 + 1));;	Return value of _SendPing
      +                           is never used
  3786  001B4C  0E80               	movlw	low _bufferTX
  3787  001B4E  6E0C               	movwf	i2QueueTXPacket@buffer^0,c
  3788  001B50  0E00               	movlw	high _bufferTX
  3789  001B52  6E0D               	movwf	(i2QueueTXPacket@buffer+1)^0,c
  3790  001B54  0E04               	movlw	4
  3791  001B56  6E0E               	movwf	i2QueueTXPacket@sz^0,c
  3792  001B58  EC75  F00A         	call	i2_QueueTXPacket	;wreg free
  3793  001B5C  0012               	return		;funcret
  3794  001B5E                     __end_of_SendPing:
  3795                           	callstack 0
  3796                           
  3797 ;; *************** function i2_SuperMemCpy *****************
  3798 ;; Defined at:
  3799 ;;		line 242 in file "handler.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3802 ;;		 -> bufferTX(32), ProcessAckPayload@data(32), config(17), 
  3803 ;;  destStart       1    2[COMRAM] unsigned char 
  3804 ;;  src             2    3[COMRAM] PTR unsigned char 
  3805 ;;		 -> bufferRX(32), BoardAddress(3), 
  3806 ;;  srcStart        1    5[COMRAM] unsigned char 
  3807 ;;  sz              1    6[COMRAM] unsigned char 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  i               1   11[COMRAM] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3819 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;Total ram usage:       12 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_SendPing
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text35
  3833  0018D8                     __ptext35:
  3834                           	callstack 0
  3835  0018D8                     i2_SuperMemCpy:
  3836                           	callstack 20
  3837  0018D8                     
  3838                           ;handler.c: 243:     for (uint8_t i = 0; i < sz; i++) {
  3839  0018D8  0E00               	movlw	0
  3840  0018DA  6E0C               	movwf	i2SuperMemCpy@i^0,c
  3841  0018DC  EF8B  F00C         	goto	i2l1940
  3842  0018E0                     i2l1936:
  3843                           
  3844                           ;handler.c: 244:         dest[i + destStart] = src[i + srcStart];
  3845  0018E0  500C               	movf	i2SuperMemCpy@i^0,w,c
  3846  0018E2  2404               	addwf	i2SuperMemCpy@src^0,w,c
  3847  0018E4  6E08               	movwf	??i2_SuperMemCpy^0,c
  3848  0018E6  0E00               	movlw	0
  3849  0018E8  2005               	addwfc	(i2SuperMemCpy@src+1)^0,w,c
  3850  0018EA  6E09               	movwf	(??i2_SuperMemCpy+1)^0,c
  3851  0018EC  5006               	movf	i2SuperMemCpy@srcStart^0,w,c
  3852  0018EE  2408               	addwf	??i2_SuperMemCpy^0,w,c
  3853  0018F0  6ED9               	movwf	fsr2l,c
  3854  0018F2  0E00               	movlw	0
  3855  0018F4  2009               	addwfc	(??i2_SuperMemCpy+1)^0,w,c
  3856  0018F6  6EDA               	movwf	fsr2h,c
  3857  0018F8  500C               	movf	i2SuperMemCpy@i^0,w,c
  3858  0018FA  2401               	addwf	i2SuperMemCpy@dest^0,w,c
  3859  0018FC  6E0A               	movwf	(??i2_SuperMemCpy+2)^0,c
  3860  0018FE  0E00               	movlw	0
  3861  001900  2002               	addwfc	(i2SuperMemCpy@dest+1)^0,w,c
  3862  001902  6E0B               	movwf	(??i2_SuperMemCpy+3)^0,c
  3863  001904  5003               	movf	i2SuperMemCpy@destStart^0,w,c
  3864  001906  240A               	addwf	(??i2_SuperMemCpy+2)^0,w,c
  3865  001908  6EE1               	movwf	fsr1l,c
  3866  00190A  0E00               	movlw	0
  3867  00190C  200B               	addwfc	(??i2_SuperMemCpy+3)^0,w,c
  3868  00190E  6EE2               	movwf	fsr1h,c
  3869  001910  CFDF FFE7          	movff	indf2,indf1
  3870  001914                     
  3871                           ;handler.c: 245:     }
  3872  001914  2A0C               	incf	i2SuperMemCpy@i^0,f,c
  3873  001916                     i2l1940:
  3874  001916  5007               	movf	i2SuperMemCpy@sz^0,w,c
  3875  001918  5C0C               	subwf	i2SuperMemCpy@i^0,w,c
  3876  00191A  A0D8               	btfss	status,0,c
  3877  00191C  EF92  F00C         	goto	i2u62_41
  3878  001920  EF94  F00C         	goto	i2u62_40
  3879  001924                     i2u62_41:
  3880  001924  EF70  F00C         	goto	i2l1936
  3881  001928                     i2u62_40:
  3882  001928  0012               	return		;funcret
  3883  00192A                     __end_ofi2_SuperMemCpy:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function i2_QueueTXPacket *****************
  3887 ;; Defined at:
  3888 ;;		line 71 in file "handler.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  buffer          2   11[COMRAM] PTR unsigned char 
  3891 ;;		 -> bufferTX(32), 
  3892 ;;  sz              1   13[COMRAM] unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  i               1   14[COMRAM] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      unsigned char 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3904 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;Total ram usage:        4 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 1
  3911 ;; This function calls:
  3912 ;;		i2_memcpy
  3913 ;; This function is called by:
  3914 ;;		_SendPing
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text36
  3919  0014EA                     __ptext36:
  3920                           	callstack 0
  3921  0014EA                     i2_QueueTXPacket:
  3922                           	callstack 19
  3923  0014EA                     
  3924                           ;handler.c: 72:     uint8_t i;;handler.c: 73:     for (i = 0; i < 8; i++) {
  3925  0014EA  0E00               	movlw	0
  3926  0014EC  6E0F               	movwf	i2QueueTXPacket@i^0,c
  3927  0014EE                     i2l1912:
  3928                           
  3929                           ;handler.c: 74:         if (packetsTX[i].free) {
  3930  0014EE  500F               	movf	i2QueueTXPacket@i^0,w,c
  3931  0014F0  0D22               	mullw	34
  3932  0014F2  0EF3               	movlw	low (_packetsTX+32)
  3933  0014F4  24F3               	addwf	243,w,c
  3934  0014F6  6ED9               	movwf	fsr2l,c
  3935  0014F8  0E00               	movlw	high (_packetsTX+32)
  3936  0014FA  20F4               	addwfc	prodh,w,c
  3937  0014FC  6EDA               	movwf	fsr2h,c
  3938  0014FE  50DF               	movf	indf2,w,c
  3939  001500  B4D8               	btfsc	status,2,c
  3940  001502  EF85  F00A         	goto	i2u59_41
  3941  001506  EF87  F00A         	goto	i2u59_40
  3942  00150A                     i2u59_41:
  3943  00150A  EF89  F00A         	goto	i2l1916
  3944  00150E                     i2u59_40:
  3945  00150E  EF92  F00A         	goto	i2l1920
  3946  001512                     i2l1916:
  3947                           
  3948                           ;handler.c: 77:     }
  3949  001512  2A0F               	incf	i2QueueTXPacket@i^0,f,c
  3950  001514  0E07               	movlw	7
  3951  001516  640F               	cpfsgt	i2QueueTXPacket@i^0,c
  3952  001518  EF90  F00A         	goto	i2u60_41
  3953  00151C  EF92  F00A         	goto	i2u60_40
  3954  001520                     i2u60_41:
  3955  001520  EF77  F00A         	goto	i2l1912
  3956  001524                     i2u60_40:
  3957  001524                     i2l1920:
  3958                           
  3959                           ;handler.c: 78:     if (i == 8) {
  3960  001524  0E08               	movlw	8
  3961  001526  180F               	xorwf	i2QueueTXPacket@i^0,w,c
  3962  001528  A4D8               	btfss	status,2,c
  3963  00152A  EF99  F00A         	goto	i2u61_41
  3964  00152E  EF9B  F00A         	goto	i2u61_40
  3965  001532                     i2u61_41:
  3966  001532  EF9E  F00A         	goto	i2l1926
  3967  001536                     i2u61_40:
  3968  001536                     
  3969                           ;handler.c: 79:         return 0;
  3970  001536  0E00               	movlw	0
  3971  001538  EFC4  F00A         	goto	i2l289
  3972  00153C                     i2l1926:
  3973                           
  3974                           ;handler.c: 81:     packetsTX[i].free = 0;
  3975  00153C  500F               	movf	i2QueueTXPacket@i^0,w,c
  3976  00153E  0D22               	mullw	34
  3977  001540  0EF3               	movlw	low (_packetsTX+32)
  3978  001542  24F3               	addwf	243,w,c
  3979  001544  6ED9               	movwf	fsr2l,c
  3980  001546  0E00               	movlw	high (_packetsTX+32)
  3981  001548  20F4               	addwfc	prodh,w,c
  3982  00154A  6EDA               	movwf	fsr2h,c
  3983  00154C  0E00               	movlw	0
  3984  00154E  6EDF               	movwf	indf2,c
  3985                           
  3986                           ;handler.c: 82:     packetsTX[i].size = sz;
  3987  001550  500F               	movf	i2QueueTXPacket@i^0,w,c
  3988  001552  0D22               	mullw	34
  3989  001554  0EF4               	movlw	low (_packetsTX+33)
  3990  001556  24F3               	addwf	243,w,c
  3991  001558  6ED9               	movwf	fsr2l,c
  3992  00155A  0E00               	movlw	high (_packetsTX+33)
  3993  00155C  20F4               	addwfc	prodh,w,c
  3994  00155E  6EDA               	movwf	fsr2h,c
  3995  001560  C00E  FFDF         	movff	i2QueueTXPacket@sz,indf2
  3996  001564                     
  3997                           ;handler.c: 83:     memcpy(packetsTX[i].packet, buffer, sz);
  3998  001564  500F               	movf	i2QueueTXPacket@i^0,w,c
  3999  001566  0D22               	mullw	34
  4000  001568  0ED3               	movlw	low _packetsTX
  4001  00156A  24F3               	addwf	243,w,c
  4002  00156C  6E01               	movwf	i2memcpy@d1^0,c
  4003  00156E  0E00               	movlw	high _packetsTX
  4004  001570  20F4               	addwfc	prodh,w,c
  4005  001572  6E02               	movwf	(i2memcpy@d1+1)^0,c
  4006  001574  C00C  F003         	movff	i2QueueTXPacket@buffer,i2memcpy@s1
  4007  001578  C00D  F004         	movff	i2QueueTXPacket@buffer+1,i2memcpy@s1+1
  4008  00157C  C00E  F005         	movff	i2QueueTXPacket@sz,i2memcpy@n
  4009  001580  6A06               	clrf	(i2memcpy@n+1)^0,c
  4010  001582  ECBD  F00C         	call	i2_memcpy	;wreg free
  4011  001586                     
  4012                           ;handler.c: 84:     return 1;
  4013  001586  0E01               	movlw	1
  4014  001588                     i2l289:
  4015  001588  0012               	return		;funcret
  4016  00158A                     __end_ofi2_QueueTXPacket:
  4017                           	callstack 0
  4018                           
  4019 ;; *************** function i2_memcpy *****************
  4020 ;; Defined at:
  4021 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  d1              2    0[COMRAM] PTR void 
  4024 ;;		 -> packetsTX(272), BoardAddress(3), config(17), 
  4025 ;;  s1              2    2[COMRAM] PTR const void 
  4026 ;;		 -> bufferTX(32), BoardAddress(3), config(17), DEFAULT_PIPE_ADDR(6), 
  4027 ;;  n               2    4[COMRAM] unsigned int 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4030 ;;		 -> bufferTX(32), BoardAddress(3), config(17), DEFAULT_PIPE_ADDR(6), 
  4031 ;;  d               2    6[COMRAM] PTR unsigned char 
  4032 ;;		 -> packetsTX(272), BoardAddress(3), config(17), 
  4033 ;;  tmp             1   10[COMRAM] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  2    0[COMRAM] PTR void 
  4036 ;; Registers used:
  4037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;Total ram usage:       11 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		i2_QueueTXPacket
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text37
  4057  00197A                     __ptext37:
  4058                           	callstack 0
  4059  00197A                     i2_memcpy:
  4060                           	callstack 19
  4061  00197A  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
  4062  00197E  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
  4063  001982  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
  4064  001986  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
  4065  00198A  EFD7  F00C         	goto	i2l1872
  4066  00198E                     i2l1864:
  4067  00198E  C009  FFD9         	movff	i2memcpy@s,fsr2l
  4068  001992  C00A  FFDA         	movff	i2memcpy@s+1,fsr2h
  4069  001996  50DF               	movf	indf2,w,c
  4070  001998  6E0B               	movwf	i2memcpy@tmp^0,c
  4071  00199A  4A09               	infsnz	i2memcpy@s^0,f,c
  4072  00199C  2A0A               	incf	(i2memcpy@s+1)^0,f,c
  4073  00199E  C007  FFD9         	movff	i2memcpy@d,fsr2l
  4074  0019A2  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
  4075  0019A6  C00B  FFDF         	movff	i2memcpy@tmp,indf2
  4076  0019AA  4A07               	infsnz	i2memcpy@d^0,f,c
  4077  0019AC  2A08               	incf	(i2memcpy@d+1)^0,f,c
  4078  0019AE                     i2l1872:
  4079  0019AE  0605               	decf	i2memcpy@n^0,f,c
  4080  0019B0  A0D8               	btfss	status,0,c
  4081  0019B2  0606               	decf	(i2memcpy@n+1)^0,f,c
  4082  0019B4  2805               	incf	i2memcpy@n^0,w,c
  4083  0019B6  E106               	bnz	i2u58_41
  4084  0019B8  2806               	incf	(i2memcpy@n+1)^0,w,c
  4085  0019BA  A4D8               	btfss	status,2,c
  4086  0019BC  EFE2  F00C         	goto	i2u58_41
  4087  0019C0  EFE4  F00C         	goto	i2u58_40
  4088  0019C4                     i2u58_41:
  4089  0019C4  EFC7  F00C         	goto	i2l1864
  4090  0019C8                     i2u58_40:
  4091  0019C8  0012               	return		;funcret
  4092  0019CA                     __end_ofi2_memcpy:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _TMR1_WriteTimer *****************
  4096 ;; Defined at:
  4097 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  timerVal        2    0[COMRAM] unsigned short 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;Total ram usage:        2 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_TMR1_ISR
  4121 ;;		_TMR1_Reload
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text38
  4126  001BB4                     __ptext38:
  4127                           	callstack 0
  4128  001BB4                     _TMR1_WriteTimer:
  4129                           	callstack 22
  4130  001BB4                     
  4131                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  4132  001BB4  A4CD               	btfss	205,2,c	;volatile
  4133  001BB6  EFDF  F00D         	goto	i2u68_41
  4134  001BBA  EFE1  F00D         	goto	i2u68_40
  4135  001BBE                     i2u68_41:
  4136  001BBE  EFE9  F00D         	goto	i2l2042
  4137  001BC2                     i2u68_40:
  4138  001BC2                     
  4139                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  4140  001BC2  90CD               	bcf	205,0,c	;volatile
  4141  001BC4                     
  4142                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  4143  001BC4  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4144  001BC6  6ECF               	movwf	207,c	;volatile
  4145  001BC8                     
  4146                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  4147  001BC8  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4148  001BCC                     
  4149                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  4150  001BCC  80CD               	bsf	205,0,c	;volatile
  4151                           
  4152                           ;mcc_generated_files/tmr1.c: 134:     }
  4153  001BCE  EFED  F00D         	goto	i2l156
  4154  001BD2                     i2l2042:
  4155                           
  4156                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4157  001BD2  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4158  001BD4  6ECF               	movwf	207,c	;volatile
  4159  001BD6                     
  4160                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  4161  001BD6  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4162  001BDA                     i2l156:
  4163  001BDA  0012               	return		;funcret
  4164  001BDC                     __end_of_TMR1_WriteTimer:
  4165                           	callstack 0
  4166                           
  4167                           	psect	text39
  4168  000000                     __ptext39:
  4169                           	callstack 0
  4170  000000                     
  4171                           	psect	rparam
  4172  0000                     
  4173                           	psect	temp
  4174  000048                     btemp:
  4175                           	callstack 0
  4176  000048                     	ds	1
  4177  0000                     int$flags	set	btemp
  4178  0000                     wtemp8	set	btemp+1
  4179  0000                     ttemp5	set	btemp+1
  4180  0000                     ttemp6	set	btemp+4
  4181  0000                     ttemp7	set	btemp+8
  4182                           
  4183                           	psect	idloc
  4184                           
  4185                           ;Config register IDLOC0 @ 0x200000
  4186                           ;	unspecified, using default values
  4187  200000                     	org	2097152
  4188  200000  FF                 	db	255
  4189                           
  4190                           ;Config register IDLOC1 @ 0x200001
  4191                           ;	unspecified, using default values
  4192  200001                     	org	2097153
  4193  200001  FF                 	db	255
  4194                           
  4195                           ;Config register IDLOC2 @ 0x200002
  4196                           ;	unspecified, using default values
  4197  200002                     	org	2097154
  4198  200002  FF                 	db	255
  4199                           
  4200                           ;Config register IDLOC3 @ 0x200003
  4201                           ;	unspecified, using default values
  4202  200003                     	org	2097155
  4203  200003  FF                 	db	255
  4204                           
  4205                           ;Config register IDLOC4 @ 0x200004
  4206                           ;	unspecified, using default values
  4207  200004                     	org	2097156
  4208  200004  FF                 	db	255
  4209                           
  4210                           ;Config register IDLOC5 @ 0x200005
  4211                           ;	unspecified, using default values
  4212  200005                     	org	2097157
  4213  200005  FF                 	db	255
  4214                           
  4215                           ;Config register IDLOC6 @ 0x200006
  4216                           ;	unspecified, using default values
  4217  200006                     	org	2097158
  4218  200006  FF                 	db	255
  4219                           
  4220                           ;Config register IDLOC7 @ 0x200007
  4221                           ;	unspecified, using default values
  4222  200007                     	org	2097159
  4223  200007  FF                 	db	255
  4224                           
  4225                           	psect	config
  4226                           
  4227                           ; Padding undefined space
  4228  300000                     	org	3145728
  4229  300000  FF                 	db	255
  4230                           
  4231                           ;Config register CONFIG1H @ 0x300001
  4232                           ;	Oscillator Selection bits
  4233                           ;	FOSC = INTIO67, Internal oscillator block
  4234                           ;	4X PLL Enable
  4235                           ;	PLLCFG = OFF, Oscillator used directly
  4236                           ;	Primary clock enable bit
  4237                           ;	PRICLKEN = ON, Primary clock enabled
  4238                           ;	Fail-Safe Clock Monitor Enable bit
  4239                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4240                           ;	Internal/External Oscillator Switchover bit
  4241                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4242  300001                     	org	3145729
  4243  300001  28                 	db	40
  4244                           
  4245                           ;Config register CONFIG2L @ 0x300002
  4246                           ;	Power-up Timer Enable bit
  4247                           ;	PWRTEN = OFF, Power up timer disabled
  4248                           ;	Brown-out Reset Enable bits
  4249                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4250                           ;	Brown Out Reset Voltage bits
  4251                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4252  300002                     	org	3145730
  4253  300002  1F                 	db	31
  4254                           
  4255                           ;Config register CONFIG2H @ 0x300003
  4256                           ;	Watchdog Timer Enable bits
  4257                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4258                           ;	Watchdog Timer Postscale Select bits
  4259                           ;	WDTPS = 32768, 1:32768
  4260  300003                     	org	3145731
  4261  300003  3C                 	db	60
  4262                           
  4263                           ; Padding undefined space
  4264  300004                     	org	3145732
  4265  300004  FF                 	db	255
  4266                           
  4267                           ;Config register CONFIG3H @ 0x300005
  4268                           ;	CCP2 MUX bit
  4269                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4270                           ;	PORTB A/D Enable bit
  4271                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4272                           ;	P3A/CCP3 Mux bit
  4273                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4274                           ;	HFINTOSC Fast Start-up
  4275                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4276                           ;	Timer3 Clock input mux bit
  4277                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4278                           ;	ECCP2 B output mux bit
  4279                           ;	P2BMX = PORTB5, P2B is on RB5
  4280                           ;	MCLR Pin Enable bit
  4281                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4282  300005                     	org	3145733
  4283  300005  BF                 	db	191
  4284                           
  4285                           ;Config register CONFIG4L @ 0x300006
  4286                           ;	Stack Full/Underflow Reset Enable bit
  4287                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4288                           ;	Single-Supply ICSP Enable bit
  4289                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4290                           ;	Extended Instruction Set Enable bit
  4291                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4292                           ;	Background Debug
  4293                           ;	DEBUG = OFF, Disabled
  4294  300006                     	org	3145734
  4295  300006  85                 	db	133
  4296                           
  4297                           ; Padding undefined space
  4298  300007                     	org	3145735
  4299  300007  FF                 	db	255
  4300                           
  4301                           ;Config register CONFIG5L @ 0x300008
  4302                           ;	Code Protection Block 0
  4303                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4304                           ;	Code Protection Block 1
  4305                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4306                           ;	Code Protection Block 2
  4307                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4308                           ;	Code Protection Block 3
  4309                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4310  300008                     	org	3145736
  4311  300008  0F                 	db	15
  4312                           
  4313                           ;Config register CONFIG5H @ 0x300009
  4314                           ;	Boot Block Code Protection bit
  4315                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4316                           ;	Data EEPROM Code Protection bit
  4317                           ;	CPD = OFF, Data EEPROM not code-protected
  4318  300009                     	org	3145737
  4319  300009  C0                 	db	192
  4320                           
  4321                           ;Config register CONFIG6L @ 0x30000A
  4322                           ;	Write Protection Block 0
  4323                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4324                           ;	Write Protection Block 1
  4325                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4326                           ;	Write Protection Block 2
  4327                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4328                           ;	Write Protection Block 3
  4329                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4330  30000A                     	org	3145738
  4331  30000A  0F                 	db	15
  4332                           
  4333                           ;Config register CONFIG6H @ 0x30000B
  4334                           ;	Configuration Register Write Protection bit
  4335                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4336                           ;	Boot Block Write Protection bit
  4337                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4338                           ;	Data EEPROM Write Protection bit
  4339                           ;	WRTD = OFF, Data EEPROM not write-protected
  4340  30000B                     	org	3145739
  4341  30000B  E0                 	db	224
  4342                           
  4343                           ;Config register CONFIG7L @ 0x30000C
  4344                           ;	Table Read Protection Block 0
  4345                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4346                           ;	Table Read Protection Block 1
  4347                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4348                           ;	Table Read Protection Block 2
  4349                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4350                           ;	Table Read Protection Block 3
  4351                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4352  30000C                     	org	3145740
  4353  30000C  0F                 	db	15
  4354                           
  4355                           ;Config register CONFIG7H @ 0x30000D
  4356                           ;	Boot Block Table Read Protection bit
  4357                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4358  30000D                     	org	3145741
  4359  30000D  40                 	db	64
  4360                           tosu	equ	0xFFF
  4361                           tosh	equ	0xFFE
  4362                           tosl	equ	0xFFD
  4363                           stkptr	equ	0xFFC
  4364                           pclatu	equ	0xFFB
  4365                           pclath	equ	0xFFA
  4366                           pcl	equ	0xFF9
  4367                           tblptru	equ	0xFF8
  4368                           tblptrh	equ	0xFF7
  4369                           tblptrl	equ	0xFF6
  4370                           tablat	equ	0xFF5
  4371                           prodh	equ	0xFF4
  4372                           prodl	equ	0xFF3
  4373                           indf0	equ	0xFEF
  4374                           postinc0	equ	0xFEE
  4375                           postdec0	equ	0xFED
  4376                           preinc0	equ	0xFEC
  4377                           plusw0	equ	0xFEB
  4378                           fsr0h	equ	0xFEA
  4379                           fsr0l	equ	0xFE9
  4380                           wreg	equ	0xFE8
  4381                           indf1	equ	0xFE7
  4382                           postinc1	equ	0xFE6
  4383                           postdec1	equ	0xFE5
  4384                           preinc1	equ	0xFE4
  4385                           plusw1	equ	0xFE3
  4386                           fsr1h	equ	0xFE2
  4387                           fsr1l	equ	0xFE1
  4388                           bsr	equ	0xFE0
  4389                           indf2	equ	0xFDF
  4390                           postinc2	equ	0xFDE
  4391                           postdec2	equ	0xFDD
  4392                           preinc2	equ	0xFDC
  4393                           plusw2	equ	0xFDB
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    4
    Data        10
    BSS         357
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      71
    BANK0           160     51     115
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), BoardAddress(COMRAM[3]), config(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), BoardAddress(COMRAM[3]), config(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), config.Address(COMRAM[3]), BoardAddress(COMRAM[3]), config(COMRAM[17]), 
		 -> DEFAULT_PIPE_ADDR(COMRAM[6]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), config.Address(COMRAM[3]), BoardAddress(COMRAM[3]), config(COMRAM[17]), 
		 -> DEFAULT_PIPE_ADDR(COMRAM[6]), 

    nrf24_read_rf_data@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    nrf24_send_rf_data@buffer	PTR unsigned char  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), 

    nrf24_read_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    nrf24_write_buff@buffer	PTR unsigned char  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), config(COMRAM[17]), DEFAULT_PIPE_ADDR(COMRAM[6]), 

    SuperMemCpy@src	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), BoardAddress(COMRAM[3]), 

    SuperMemCpy@dest	PTR unsigned char  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), ProcessAckPayload@data(BANK0[32]), config(COMRAM[17]), 

    ProcessActionRequest@data	PTR unsigned char  size(2) Largest target is 32
		 -> ProcessAckPayload@data(BANK0[32]), 

    ProcessAckPayload@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    VerifyBoardAddress@bufferRX	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    QueueTXPacket@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), 

    sp__memcpy	PTR void  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), BoardAddress(COMRAM[3]), config(COMRAM[17]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInterruptHandler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInterruptHandler(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _InitRadio->_memcpy
    _nrf24_rf_init->_SPI1_Open
    _nrf24_send_rf_data->_nrf24_write_buff
    _nrf24_read_rf_data->_nrf24_read_buff
    _nrf24_read_buff->_SPI1_ExchangeByte
    _nrf24_flush_tx_rx->_nrf24_write_register
    _nrf24_read_register->_SPI1_ExchangeByte
    _nrf24_read_dynamic_payload_length->_SPI1_ExchangeByte
    _ProcessAckPayload->_ProcessActionRequest
    _ProcessActionRequest->_ReloadConfig
    _SendError->_QueueTXPacket
    _SendError->_SuperMemCpy
    _QueueTXPacket->_memcpy
    _ReloadConfig->_memcpy
    _nrf24_write_register->_SPI1_ExchangeByte
    _nrf24_write_buff->_SPI1_ExchangeByte

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _SendPing->i2_QueueTXPacket
    i2_QueueTXPacket->i2_memcpy

Critical Paths under _main in BANK0

    _main->_HandlePacketLoop
    _HandlePacketLoop->_ProcessAckPayload
    _ProcessAckPayload->_ProcessActionRequest
    _ProcessActionRequest->_SendError
    _SendError->_QueueTXPacket

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   31825
                   _HandlePacketLoop
                          _InitRadio
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitRadio                                            1     1      0    4382
                                             34 COMRAM     1     1      0
                             _memcpy
                      _nrf24_rf_init
                   _nrf24_write_buff
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_rf_init                                        0     0      0      60
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0      60
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _HandlePacketLoop                                     3     3      0   27095
                                             48 BANK0      3     3      0
                  _ProcessAckPayload
                 _VerifyBoardAddress
                  _nrf24_flush_tx_rx
  _nrf24_read_dynamic_payload_length
                _nrf24_read_register
                 _nrf24_read_rf_data
                 _nrf24_send_rf_data
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_send_rf_data                                   3     0      3    1306
                                             29 COMRAM     3     0      3
                   _nrf24_write_buff
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_rf_data                                   3     0      3    3788
                                             29 COMRAM     3     0      3
                  _nrf24_flush_tx_rx
                    _nrf24_read_buff
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (3) _nrf24_read_buff                                      5     2      3     375
                                             24 COMRAM     5     2      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _nrf24_flush_tx_rx                                    1     1      0    1601
                                             26 COMRAM     1     1      0
                  _SPI1_ExchangeByte
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_register                                  2     2      0      96
                                             24 COMRAM     2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_dynamic_payload_length                    1     1      0      65
                                             24 COMRAM     1     1      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _VerifyBoardAddress                                   8     6      2     251
                                             23 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _ProcessAckPayload                                   39    36      3   18000
                                              9 BANK0     39    36      3
               _ProcessActionRequest
                          _SendError
                        _SuperMemCpy
 ---------------------------------------------------------------------------------
 (3) _ProcessActionRequest                                 5     3      2    9482
                                             35 COMRAM     1     1      0
                                              5 BANK0      4     2      2
                       _ReloadConfig
                          _SendError
 ---------------------------------------------------------------------------------
 (3) _SendError                                            2     2      0    5104
                                              3 BANK0      2     2      0
                      _QueueTXPacket
                        _SuperMemCpy
 ---------------------------------------------------------------------------------
 (3) _SuperMemCpy                                         12     5      7    2779
                                             23 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (4) _QueueTXPacket                                        4     1      3    2164
                                             34 COMRAM     1     1      0
                                              0 BANK0      3     0      3
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _ReloadConfig                                         1     1      0    4226
                                             34 COMRAM     1     1      0
                             _memcpy
                   _nrf24_write_buff
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_write_register                                 2     1      1    1570
                                             24 COMRAM     2     1      1
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_write_buff                                     5     2      3    1064
                                             24 COMRAM     5     2      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      31
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1558
                                             23 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           8     8      0    1354
                                             15 COMRAM     8     8      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0    1354
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
              _TimerInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TimerInterruptHandler                                0     0      0    1114
                           _SendPing
                            ___llmod
 ---------------------------------------------------------------------------------
 (10) ___llmod                                             9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (10) _SendPing                                            0     0      0     803
                    i2_QueueTXPacket
                      i2_SuperMemCpy
 ---------------------------------------------------------------------------------
 (11) i2_SuperMemCpy                                      12     5      7     308
                                              0 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (11) i2_QueueTXPacket                                     4     1      3     495
                                             11 COMRAM     4     1      3
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HandlePacketLoop
     _ProcessAckPayload
       _ProcessActionRequest
         _ReloadConfig
           _memcpy
           _nrf24_write_buff
             _SPI1_ExchangeByte
           _nrf24_write_register
             _SPI1_ExchangeByte
         _SendError
           _QueueTXPacket
             _memcpy
           _SuperMemCpy
       _SendError
       _SuperMemCpy
     _VerifyBoardAddress
     _nrf24_flush_tx_rx
       _SPI1_ExchangeByte
       _nrf24_write_register
     _nrf24_read_dynamic_payload_length
       _SPI1_ExchangeByte
     _nrf24_read_register
       _SPI1_ExchangeByte
     _nrf24_read_rf_data
       _nrf24_flush_tx_rx
       _nrf24_read_buff
         _SPI1_ExchangeByte
       _nrf24_write_register
     _nrf24_send_rf_data
       _nrf24_write_buff
     _nrf24_write_register
   _InitRadio
     _memcpy
     _nrf24_rf_init
       _SPI1_Open
     _nrf24_write_buff
     _nrf24_write_register
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _TimerInterruptHandler *
       _SendPing
         i2_QueueTXPacket
           i2_memcpy
         i2_SuperMemCpy
       ___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     110      47        7.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      47       1       75.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlhh        27      0       0      45        0.0%
BITBIGSFRhhllh      26      0       0      41        0.0%
BITBIGSFRlhl        26      0       0      46        0.0%
BITBIGSFRhhlhh      1D      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhllll      6      0       0      43        0.0%
BITBIGSFRhl          6      0       0      44        0.0%
BITBIGSFRhhlhll      2      0       0      40        0.0%
BITBIGSFRhhlhlh      1      0       0      39        0.0%
BITBIGSFRhhlllh      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      32        0.0%
DATA                 0      0     1CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jul 16 11:57:40 2022

                        _SPI1_ExchangeByte 1C7C                                         l27 1B88  
                                       l51 1CBC                                         l61 1C82  
                                       l63 1C90                                         l55 1448  
                                       l64 1C94                         ?_SPI1_ExchangeByte 0001  
                                      l110 1CAA                                        l113 1CDA  
                                      l142 1BB2                                        l401 1A1A  
                                      l315 1762                                        l340 182E  
                                      l332 1784                                        l324 1270  
                                      l172 1CEE                                        l343 16FA  
                                      l352 18D6                                        l408 1A60  
                                      l337 17C8                                        l329 176A  
                                      l433 1C22                                        l426 1C42  
                                      l282 1398                                        l419 1CCC  
                                      l436 19CA                                        l188 1CF2  
                                      l381 1C7A                                        l374 1690  
                                      l391 1AAE                                        l367 1614  
                                      l384 1C44                                        l448 1A16  
                                      l296 113E                                        l289 14E8  
                                      l377 1C64                                        l298 10AA  
                                      l396 1AE8                                        l388 1C60  
                                      l398 1AEA                                        u180 13AA  
                                      u181 13A6                    ProcessAckPayload@buffer 00A9  
                                      u900 1AE8                                        u901 1AE4  
                                      u910 1626                                        u911 1622  
                                      u920 1652                                        u921 164E  
                                      u930 1664                                        u931 1660  
                                      u940 1676                                        u941 1672  
                                      u950 1686                                        u951 1682  
                                      u880 1C90                                        u960 146E  
                                      u881 1C8C                                        u961 146A  
                                      u890 1978                                        u970 1484  
                                      u891 1974                                        u971 1480  
                                      u980 1496                                        u981 1492  
                                      u990 18D6                                        u991 18D2  
                          _timer1ReloadVal 0046                        ??_SPI1_ExchangeByte 0018  
                                      prod 000FF3                                        tosl 000FFD  
                                      wreg 000FE8                         _nrf24_read_rf_data 1C02  
                           ?_nrf24_rf_init 0001                        VerifyBoardAddress@i 001E  
                                     l2020 1B8A                                       l1134 1978  
                                     l1310 1412                                       l1302 139C  
                                     l2030 1BAE                                       l2022 1B96  
                                     l1312 1446                                       l1304 13AA  
                                     l1400 1CAC                                       l2024 1B9E  
                                     l1306 13EA                                       l1402 1CB8  
                                     l2026 1BA0                                       l1308 13EE  
                                     l1404 1CBA                                       l2028 1BA2  
                                     l2140 1C9E                                       l1406 1CF0  
                                     l2142 1CA2                                       l1440 1CC6  
                                     l1408 1CCE                                       l2144 1CA6  
                                     l2136 1C96                                       l2410 1474  
                                     l1442 1CC8                                       l2138 1C9A  
                                     l2420 14C4                                       l2412 1484  
                                     l2404 144E                                       l1444 1CCA  
                                     l1436 1CBE                                       l2350 192A  
                                     l2422 14E6                                       l2414 1496  
                                     l2430 18C2                                       l2510 1A3A  
                                     l1438 1CC4                                       l2352 193E  
                                     l2360 195E                                       l2408 1472  
                                     l2432 18C4                                       l2440 16C0  
                                     l2512 1A3E                                       l2504 1A1C  
                                     l2520 1C24                                       l2600 1272  
                                     l2354 194A                                       l2370 1AD2  
                                     l2362 1AB0                                       l2450 17CA  
                                     l2418 149C                                       l2426 1886  
                                     l2442 16C6                                       l2434 1696  
                                     l2530 1C6E                                       l2514 1A40  
                                     l2506 1A22                                       l2522 1C36  
                                     l2610 12AE                                       l2602 1276  
                                     l1394 1B5E                                       l2356 194E  
                                     l2348 1C7E                                       l2372 1AD4  
                                     l2364 1AB8                                       l2380 1630  
                                     l2460 1804                                       l2452 17CE  
                                     l2428 188E                                       l2444 16D8  
                                     l2436 169C                                       l2540 1C54  
                                     l2532 1C76                                       l2516 1A52  
                                     l2508 1A2A                                       l2524 1C38  
                                     l2700 112C                                       l2620 12E0  
                                     l2612 12B8                                       l2604 1288  
                                     l1396 1B6E                                       l2358 195A  
                                     l2366 1AC0                                       l2374 1AD6  
                                     l2390 1676                                       l2382 163A  
                                     l2462 180E                                       l2454 17D8  
                                     l2446 16EA                                       l2438 16A0  
                                     l2542 1C5C                                       l2534 1C78  
                                     l2470 19E4                                       l2518 1A5E  
                                     l2550 1C14                                       l2526 1C40  
                                     l2630 12FE                                       l2622 12EA  
                                     l2614 12C2                                       l2606 129A  
                                     l1398 1B86                                       l2368 1ACE  
                                     l2392 1686                                       l2384 1640  
                                     l2376 1616                                       l2464 182A  
                                     l2456 17EA                                       l2560 1704  
                                     l2544 1C5E                                       l2528 1C66  
                                     l2480 19FE                                       l2472 19E6  
                                     l2552 1C1E                                       l2640 135A  
                                     l2632 1302                                       l2624 12F4  
                                     l2616 12CC                                       l2608 12A4  
                                     l2720 1BE0                                       l2386 1652  
                                     l2394 168C                                       l2378 1626  
                                     l2458 17FC                                       l2490 176C  
                                     l2570 1760                                       l2562 173A  
                                     l2554 16FC                                       l2538 1C46  
                                     l2482 1A00                                       l2474 19E8  
                                     l2466 19CC                                       l2650 1388  
                                     l2634 131E                                       l2626 12F6  
                                     l2618 12D6                                       l2722 1BE2  
                                     l2396 168E                                       l2388 1664  
                                     l2492 178A                                       l2580 1184  
                                     l2484 1A06                                       l2476 19EE  
                                     l2468 19D6                                       l2548 1C02  
                                     l2652 1006                                       l2636 133A  
                                     l2628 12FA                                       l2724 1BF0  
                                     l2398 144A                                       l2494 1792  
                                     l2590 121E                                       l2582 1198  
                                     l2574 1140                                       l2566 1740  
                                     l2486 1A14                                       l2478 19FC  
                                     l2670 1058                                       l2662 1030  
                                     l2646 135E                                       l2638 1356  
                                     l1942 1CE6                                       l2726 1BF4  
                                     l2718 1BDC                                       l2496 179C  
                                     l2488 1766                                       l2592 1234  
                                     l2584 11A8                                       l2576 1152  
                                     l2568 1744                                       l2680 10B0  
                                     l2672 1080                                       l2664 1032  
                                     l2648 1386                                       l2728 1BF8  
                                     l2586 11C8                                       l2578 1162  
                                     l2594 123E                                       l2690 10E6  
                                     l2682 10BA                                       l2674 1080  
                                     l2666 1042                                       l2658 100C  
                                     l2588 11FE                                       l2692 10F4  
                                     l2684 10CA                                       l2676 108A  
                                     l2694 10FC                                       l2678 1098  
                                     l2784 1252                                       l2696 110C  
                                     l2688 10D2                                       l2786 17B2  
                     SuperMemCpy@destStart 001A                                       u1000 1784  
                                     u1001 1780                                       u1010 1A52  
                                     u1011 1A4E                                       u1020 173A  
                                     u1100 10CA                                       u1021 1736  
                                     u1101 10C6                                       u1030 1760  
                                     u1110 10F4                                       u1031 175C  
                                     u1111 10F0                                       u1120 1128  
                                     u1040 1398                                       u1121 1124  
                                     u1041 1394                                       u1050 102C  
                                     u1051 1028                                       u1060 1042  
                                     u1061 103E                                       u1070 1054  
                                     u1071 1050                                       u1080 1098  
                                     u1081 1094                                       u1090 10A6  
                                     u1091 10A2                                       u1157 1C3A  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     u1167 19DC                                       _LATC 000F8B  
                                     u1177 19F4                                       u1187 1A0C  
                                     u1197 1C56                                       _TMR1 000FCE  
                      ?_nrf24_read_rf_data 001E                                       _WPUB 000F61  
                               InitRadio@i 0023           nrf24_read_register@mnemonic_addr 0019  
                                     _main 1BDC                        SuperMemCpy@srcStart 001D  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0048                   ProcessAckPayload@pktType 00CF  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 007C               __end_of_nrf24_write_register 1692  
                __end_of_SPI1_ExchangeByte 1C96                 ??_TMR1_SetInterruptHandler 001A  
                             ___param_bank 000000                        _nrf24_read_register 1C62  
                     ??_nrf24_read_rf_data 0021              __end_of_OSCILLATOR_Initialize 1CDC  
                                    ?_main 0001                   ProcessActionRequest@data 00A5  
         SPI1_Open@spi1UniqueConfiguration 0019              nrf24_write_buff@mnemonic_addr 001C  
                                    _T1CON 000FCD                            __end_of___llmod 1612  
                                    i2l156 1BDA                                      i2l309 1AAA  
                                    i2l175 1CF4                                      i2l352 1928  
                                    i2l169 1B24                                      i2l346 1B5C  
                                    i2l197 0058                                      i2l289 1588  
                                    i2l884 1610                                      i2l877 1600  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                 i2memcpy@d1 0001  
                               i2memcpy@s1 0003                                      _Ticks 0025  
                         __end_of_TMR1_ISR 1B26                       ?_nrf24_read_register 0001  
                  __end_of_TMR1_Initialize 1BB4                                      pclath 000FFA  
                                    pclatu 000FFB                                      tablat 000FF5  
                 nrf24_read_rf_data@buffer 001E                              i2_SuperMemCpy 18D8  
                                    ttemp5 0049                                      ttemp6 004C  
                                    ttemp7 0050                                      status 000FD8  
                                    wtemp8 0049                   __end_of_nrf24_write_buff 1AEC  
                         __end_ofi2_memcpy 19CA                            _TMR1_WriteTimer 1BB4  
                               SendError@i 00A4                           ?_nrf24_read_buff 0019  
                          __initialization 1830                               __end_of_main 1C02  
                  ??_TimerInterruptHandler 0010                        QueueTXPacket@buffer 00A0  
               __end_of_VerifyBoardAddress 1764                ?_INTERRUPT_InterruptManager 0001  
                                   ??_main 0025                           __end_of_SendPing 1B5E  
                            __activetblptr 000003                            ??_nrf24_rf_init 001A  
                    ??_nrf24_read_register 0019                           ___llmod@dividend 0001  
                       _nrf24_send_rf_data 1C24                                     _ANSELA 000F38  
                                   _ANSELB 000F39                          i2SuperMemCpy@dest 0001  
                                   _ANSELC 000F3A                                     _T1GCON 000FCC  
                  TMR1_WriteTimer@timerVal 0001                                     i2l2010 15B4  
                                   i2l2012 15C2                                     i2l2004 158A  
                                   i2l1134 19C8                                     i2l2014 15E0  
                                   i2l2006 15A0                                     i2l2040 1BCC  
                                   i2l2032 1BB4                                     i2l2016 15F0  
                                   i2l2008 15A8                                     i2l2034 1BC2  
                                   i2l2042 1BD2                                     i2l2018 15FA  
                                   i2l2130 1A6E                                     i2l2044 1BD6  
                                   i2l2036 1BC4                                     i2l2038 1BC8  
                                   i2l2134 1AA6                                     i2l2150 1AFA  
                                   i2l2128 1A62                                     i2l2152 1B0C  
                                   i2l2146 1AEC                                     i2l2148 1AEE  
                                   i2l2280 0054                                     i2l2274 002A  
                                   i2l2276 0038                                     i2l2278 0046  
                                   i2l1920 1524                                     i2l1912 14EE  
                                   i2l1930 1586                                     i2l1922 1536  
                                   i2l1906 14EA                                     i2l1916 1512  
                                   i2l1940 1916                                     i2l1870 19AA  
                                   i2l1862 197A                                     i2l1926 153C  
                                   i2l1918 1514                                     i2l1934 18D8  
                                   i2l1864 198E                                     i2l1872 19AE  
                                   i2l1928 1564                                     i2l1936 18E0  
                                   i2l1866 199A                                     i2l1938 1914  
                                   i2l1970 1B4C                                     i2l1868 199E  
                                   i2l1966 1B26                                     i2l1968 1B2C  
                           ?i2_SuperMemCpy 0001                                     _OSCCON 000FD3  
                        i2QueueTXPacket@sz 000E                               SuperMemCpy@i 0023  
                      ?_nrf24_send_rf_data 001E                          __end_of_SPI1_Open 144A  
     __end_of_TMR1_DefaultInterruptHandler 1CF6               _TMR1_DefaultInterruptHandler 1CF4  
                              i2memcpy@tmp 000B                                  ??___llmod 0009  
                                   _config 0029                                     _memcpy 192A  
                                   clear_0 1858                                     clear_1 186A  
                                   clear_2 1876                                     isa$std 000001  
                          i2_QueueTXPacket 14EA                       ??_nrf24_send_rf_data 0021  
                             __pdataCOMRAM 003A                               __mediumconst 0000  
                     _nrf24_write_register 1612                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                            ?_ReloadConfig 0001                               _BoardAddress 0041  
 TMR1_SetInterruptHandler@InterruptHandler 0018                    __end_of_TMR1_WriteTimer 1BDC  
                         ?_TMR1_Initialize 0001                          _SYSTEM_Initialize 1C96  
                        ?_HandlePacketLoop 0001                                 __accesstop 0060  
                  __end_of__initialization 187C                         ?_SYSTEM_Initialize 0001  
                       ??_HandlePacketLoop 0025                              ___rparam_used 000001  
                           __pcstackCOMRAM 0001                        ??_SYSTEM_Initialize 001A  
                                ?_TMR1_ISR 0001            fp__TMR1_DefaultInterruptHandler 0000  
            ?_TMR1_DefaultInterruptHandler 0001                          ??_SPI1_Initialize 0018  
                    SPI1_ExchangeByte@data 0018                          __end_of_InitRadio 139A  
                       _spi1_configuration 1001                      ?_nrf24_write_register 0019  
                                ?i2_memcpy 0001                          HandlePacketLoop@i 00D2  
                           ??_ReloadConfig 0023                          __end_of_SendError 16FC  
                __end_of_SYSTEM_Initialize 1CAC                            ??i2_SuperMemCpy 0008  
               VerifyBoardAddress@bufferRX 0018                              ??_SuperMemCpy 001F  
                               __pbssBANK0 0060                                 __pnvCOMRAM 0044  
                                ?_SendPing 0001                      __end_of_QueueTXPacket 14EA  
                  __end_ofi2_QueueTXPacket 158A                                 ??_TMR1_ISR 0010  
                                  ?_memcpy 0018  __end_of_nrf24_read_dynamic_payload_length 1C62  
      ??_nrf24_read_dynamic_payload_length 0019         ?_nrf24_read_dynamic_payload_length 0001  
        _nrf24_read_dynamic_payload_length 1C44                                 ??i2_memcpy 0007  
                                  _OSCCON2 000FD2                                    i2u60_40 1524  
                                  i2u60_41 1520                                    i2u61_40 1536  
                                  i2u61_41 1532                                    i2u62_40 1928  
                                  i2u62_41 1924                                    _OSCTUNE 000F9B  
                                  i2u71_40 1AA2                                    i2u71_41 1A9E  
                                  i2u72_40 1B0C                                    i2u72_41 1B08  
                                  i2u65_40 15A0                                    i2u65_41 159C  
                                  i2u58_40 19C8                                    i2u66_40 15C2  
                                  i2u73_48 1B12                                    i2u58_41 19C4  
                                  i2u66_41 15BE                                    i2u73_49 1B24  
                                  i2u59_40 150E                                    i2u67_40 15E0  
                                  i2u59_41 150A                                    i2u67_41 15DC  
                                  i2u68_40 1BC2                                    i2u68_41 1BBE  
                                  i2u85_40 0038                                    i2u85_41 0034  
                                  i2u86_40 0046                                    i2u86_41 0042  
                                  i2u87_40 0054                                    i2u87_41 0050  
                                  _SSP1ADD 000FC8                                    _SSP1BUF 000FC9  
                          ReloadConfig@ard 0023                              SuperMemCpy@sz 001E  
                         ?_TMR1_WriteTimer 0001                          ?_nrf24_write_buff 0019  
                               ??_SendPing 0010                        __end_of_SuperMemCpy 18D8  
                                  __Hparam 0000                             i2SuperMemCpy@i 000C  
                                  __Lparam 0000                         ??_nrf24_write_buff 001C  
                                  ___llmod 158A                               __psmallconst 1000  
            __end_of_TimerInterruptHandler 1AAC                                    __pcinit 1830  
                                  __ramtop 1000                                    __ptext0 1BDC  
                                  __ptext1 1C96                                    __ptext2 1B8A  
                                  __ptext3 1CE6                                    __ptext4 1CAC  
                                  __ptext5 1B5E                                    __ptext6 1CCE  
                                  __ptext7 1CF0                                    __ptext8 1272  
                                  __ptext9 1CBE             ??_TMR1_DefaultInterruptHandler 0001  
                   ??_nrf24_write_register 001A                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 1CCE                   ??_PIN_MANAGER_Initialize 0018  
                ?_TMR1_SetInterruptHandler 0018                         _VerifyBoardAddress 16FC  
                     end_of_initialization 187C                                    memcpy@d 001F  
                                  memcpy@n 001C                                    memcpy@s 0021  
                      ?_VerifyBoardAddress 0018                       __end_of_ReloadConfig 1830  
                                  postdec1 000FE5                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         ?i2_QueueTXPacket 000C                                  _SPI1_Open 139A  
              __end_of_nrf24_read_register 1C7C                       ??_VerifyBoardAddress 001A  
   nrf24_read_dynamic_payload_length@byte0 0019                          _nrf24_flush_tx_rx 19CA  
                    nrf24_read_buff@buffer 0019                                  _TRISCbits 000F94  
                    __end_of_nrf24_rf_init 1CCE                            SuperMemCpy@dest 0018  
                       ?_nrf24_flush_tx_rx 0001                            QueueTXPacket@sz 00A2  
                              _SuperMemCpy 1886                        ??_nrf24_flush_tx_rx 001B  
                          _SPI1_Initialize 1CAC                   nrf24_send_rf_data@buffer 001E  
             __end_of_INTERRUPT_Initialize 1CF4                                 ?_SPI1_Open 0001  
                            __pidataCOMRAM 1CDC                                  i2memcpy@d 0007  
                                i2memcpy@n 0005                                  i2memcpy@s 0009  
                           __end_of_memcpy 197A                     ?_OSCILLATOR_Initialize 0001  
                __end_of_nrf24_flush_tx_rx 1A18                   fp__TimerInterruptHandler 0000  
                      start_initialization 1830                                  _InitRadio 1272  
                   HandlePacketLoop@status 00D1                                  _SendError 1692  
                          ___llmod@divisor 0005                           i2SuperMemCpy@src 0004  
                          ___llmod@counter 0009                           i2QueueTXPacket@i 000F  
                 nrf24_read_register@byte0 001A                         HandlePacketLoop@sz 00D0  
             __end_of_ProcessActionRequest 17CA                                   ??_memcpy 001E  
        nrf24_write_register@mnemonic_addr 001A                                __pbssBIGRAM 00D3  
                              __pbssCOMRAM 0025                              __pcstackBANK0 00A0  
                               ?_InitRadio 0001                          ??_nrf24_read_buff 001C  
                  __end_of_SPI1_Initialize 1CBE                     i2SuperMemCpy@destStart 0003  
                    __end_ofi2_SuperMemCpy 192A               nrf24_read_buff@mnemonic_addr 001C  
                               ?_SendError 0001                     _PIN_MANAGER_Initialize 1B5E  
                ProcessAckPayload@actionID 00CE                                  __pintcode 0008  
         __end_of_TMR1_SetInterruptHandler 1CF0                           nrf24_read_buff@i 001D  
                             _PingInterval 003A                  nrf24_write_register@value 0019  
                                 ?___llmod 0001                                ??_SPI1_Open 0018  
             ??_INTERRUPT_InterruptManager 0010                        ProcessAckPayload@sz 00AB  
                              __smallconst 1000                                  _packetsTX 00D3  
                             _ReloadConfig 17CA                       _INTERRUPT_Initialize 1CF0  
                                 _LATAbits 000F89                                   _LATCbits 000F8B  
                                 _PIE1bits 000F9D                                   _PIR1bits 000F9E  
                                 _RCONbits 000FD0                 __end_of_nrf24_read_rf_data 1C24  
                                 _SSP1CON1 000FC6                                   _SSP1CON2 000FC5  
                                 _TMR1_ISR 1AEC                                   _SSP1STAT 000FC7  
                         _HandlePacketLoop 1006                       nrf24_read_buff@bytes 001B  
                        ??_TMR1_Initialize 001A                             SuperMemCpy@src 001B  
                           QueueTXPacket@i 0023                      _TimerInterruptHandler 1A62  
                    ProcessAckPayload@data 00AE                                   i2_memcpy 197A  
                              ??_InitRadio 0023                           ?_SPI1_Initialize 0001  
                              _INTCON2bits 000FF1                                  copy_data0 1844  
                    ?_INTERRUPT_Initialize 0001                               ?_SuperMemCpy 0018  
                     _ProcessActionRequest 1764                                ??_SendError 0024  
                                 _SendPing 1B26                            i2SuperMemCpy@sz 0007  
                                 __Hrparam 0000                                  memcpy@tmp 001E  
                                 __Lrparam 0000                          _ProcessAckPayload 1140  
                            _QueueTXPacket 144A                         ?_ProcessAckPayload 00A9  
                  ??_OSCILLATOR_Initialize 0018                   _TMR1_SetInterruptHandler 1CE6  
                     nrf24_read_rf_data@sz 0020                      _TMR1_InterruptHandler 0044  
                      ??_ProcessAckPayload 00AC                         SendError@errorCode 00A3  
                                 __ptext10 139A                                   __ptext11 1006  
                                 __ptext20 1764                                   __ptext12 1C24  
                                 __ptext21 1692                                   __ptext13 1C02  
                               _T1GCONbits 000FCC                                   __ptext30 1AEC  
                                 __ptext22 1886                                   __ptext14 1A18  
                                 __ptext31 1CF4                                   __ptext23 144A  
                                 __ptext15 19CA                                   __ptext32 1A62  
                                 __ptext24 17CA                                   __ptext16 1C62  
                                 __ptext33 158A                                   __ptext25 1612  
                                 __ptext17 1C44                                   __ptext34 1B26  
                                 __ptext26 1AAC                                   __ptext18 16FC  
                                 __ptext35 18D8                                   __ptext27 1C7C  
                                 __ptext19 1140                                   __ptext36 14EA  
                                 __ptext28 192A                                   __ptext37 197A  
                                 __ptext38 1BB4                                   __ptext39 0000  
                             _SSP1CON1bits 000FC6                                   _bufferRX 0060  
                                 _bufferTX 0080                      ?_ProcessActionRequest 00A5  
                    i2SuperMemCpy@srcStart 0006                          _DEFAULT_PIPE_ADDR 003B  
                __end_of_ProcessAckPayload 1272                             ?_QueueTXPacket 00A0  
                                 isa$xinst 000000                          nrf24_write_buff@i 001D  
                                 int$flags 0048               ProcessActionRequest@actionID 0024  
                          _nrf24_read_buff 1A18         __end_of_INTERRUPT_InterruptManager 007C  
               _INTERRUPT_InterruptManager 0008                          ??_TMR1_WriteTimer 0003  
               __end_of_nrf24_send_rf_data 1C44                     ?_TimerInterruptHandler 0001  
                         _nrf24_write_buff 1AAC                                 _INTCONbits 000FF2  
                                 memcpy@d1 0018                                   memcpy@s1 001A  
                   ??_INTERRUPT_Initialize 0018                                   intlevel2 0000  
                  ?_PIN_MANAGER_Initialize 0001                     nrf24_write_buff@buffer 0019  
                    i2QueueTXPacket@buffer 000C                      nrf24_write_buff@bytes 001B  
                            _nrf24_rf_init 1CBE                       nrf24_send_rf_data@sz 0020  
                   ??_ProcessActionRequest 00A7                          ??i2_QueueTXPacket 000F  
                 __end_of_HandlePacketLoop 1140             __end_of_PIN_MANAGER_Initialize 1B8A  
                          ??_QueueTXPacket 0023                    __end_of_nrf24_read_buff 1A62  
                          _TMR1_Initialize 1B8A                 __end_of_spi1_configuration 1005  



Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jul 15 18:08:58 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.35
    61                           ; Generated 05/05/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F26K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  001B6E                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _DEFAULT_PIPE_ADDR
   101  001B6E  68                 	db	104
   102  001B6F  65                 	db	101
   103  001B70  6C                 	db	108
   104  001B71  6C                 	db	108
   105  001B72  6F                 	db	111
   106  001B73  00                 	db	0
   107                           
   108                           	psect	smallconst
   109  001000                     __psmallconst:
   110                           	callstack 0
   111  001000  00                 	db	0
   112  001001                     _spi1_configuration:
   113                           	callstack 0
   114  001001  00                 	db	0
   115  001002  40                 	db	64
   116  001003  01                 	db	1
   117  001004  00                 	db	0
   118  001005                     __end_of_spi1_configuration:
   119                           	callstack 0
   120  0000                     _T1CON	set	4045
   121  0000                     _TMR1L	set	4046
   122  0000                     _TMR1H	set	4047
   123  0000                     _ANSELA	set	3896
   124  0000                     _ANSELB	set	3897
   125  0000                     _ANSELC	set	3898
   126  0000                     _LATA	set	3977
   127  001005  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           	psect	nvCOMRAM
   130  000044                     __pnvCOMRAM:
   131                           	callstack 0
   132  000044                     _TMR1_InterruptHandler:
   133                           	callstack 0
   134  000044                     	ds	2
   135  000046                     _timer1ReloadVal:
   136                           	callstack 0
   137  000046                     	ds	2
   138  0000                     _TMR1	set	4046
   139  0000                     _LATCbits	set	3979
   140  0000                     _LATAbits	set	3977
   141  0000                     _T1GCONbits	set	4044
   142  0000                     _T1CONbits	set	4045
   143  0000                     _SSP1CON1bits	set	4038
   144  0000                     _TRISCbits	set	3988
   145  0000                     _TRISA	set	3986
   146  0000                     _LATC	set	3979
   147  0000                     _LATB	set	3978
   148  0000                     _OSCTUNE	set	3995
   149  0000                     _PIR1bits	set	3998
   150  0000                     _SSP1CON2	set	4037
   151  0000                     _SSP1CON1	set	4038
   152  0000                     _SSP1STAT	set	4039
   153  0000                     _INTCON2bits	set	4081
   154  0000                     _TRISC	set	3988
   155  0000                     _TRISB	set	3987
   156  0000                     _WPUB	set	3937
   157  0000                     _INTCONbits	set	4082
   158  0000                     _T1GCON	set	4044
   159  0000                     _OSCCON2	set	4050
   160  0000                     _OSCCON	set	4051
   161  0000                     _SSP1BUF	set	4041
   162  0000                     _SSP1ADD	set	4040
   163  0000                     _PIE1bits	set	3997
   164  0000                     _RCONbits	set	4048
   165                           
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169  0016B8                     __pcinit:
   170                           	callstack 0
   171  0016B8                     start_initialization:
   172                           	callstack 0
   173  0016B8                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Initialize objects allocated to COMRAM (6 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178  0016B8  0E6E               	movlw	low __pidataCOMRAM
   179  0016BA  6EF6               	movwf	tblptrl,c
   180  0016BC  0E1B               	movlw	high __pidataCOMRAM
   181  0016BE  6EF7               	movwf	tblptrh,c
   182  0016C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183  0016C2  6EF8               	movwf	tblptru,c
   184  0016C4  EE00  F03E         	lfsr	0,__pdataCOMRAM
   185  0016C8  EE10 F006          	lfsr	1,6
   186  0016CC                     copy_data0:
   187  0016CC  0009               	tblrd		*+
   188  0016CE  CFF5 FFEE          	movff	tablat,postinc0
   189  0016D2  50E5               	movf	postdec1,w,c
   190  0016D4  50E1               	movf	fsr1l,w,c
   191  0016D6  E1FA               	bnz	copy_data0
   192                           
   193                           ; Clear objects allocated to BIGRAM (272 bytes)
   194  0016D8  EE00  F0CF         	lfsr	0,__pbssBIGRAM
   195  0016DC  EE11 F010          	lfsr	1,272
   196  0016E0                     clear_0:
   197  0016E0  6AEE               	clrf	postinc0,c
   198  0016E2  50E5               	movf	postdec1,w,c
   199  0016E4  50E1               	movf	fsr1l,w,c
   200  0016E6  E1FC               	bnz	clear_0
   201  0016E8  50E2               	movf	fsr1h,w,c
   202  0016EA  E1FA               	bnz	clear_0
   203                           
   204                           ; Clear objects allocated to BANK0 (64 bytes)
   205  0016EC  EE00  F060         	lfsr	0,__pbssBANK0
   206  0016F0  0E40               	movlw	64
   207  0016F2                     clear_1:
   208  0016F2  6AEE               	clrf	postinc0,c
   209  0016F4  06E8               	decf	wreg,f,c
   210  0016F6  E1FD               	bnz	clear_1
   211                           
   212                           ; Clear objects allocated to COMRAM (21 bytes)
   213  0016F8  EE00  F029         	lfsr	0,__pbssCOMRAM
   214  0016FC  0E15               	movlw	21
   215  0016FE                     clear_2:
   216  0016FE  6AEE               	clrf	postinc0,c
   217  001700  06E8               	decf	wreg,f,c
   218  001702  E1FD               	bnz	clear_2
   219  001704                     end_of_initialization:
   220                           	callstack 0
   221  001704                     __end_of__initialization:
   222                           	callstack 0
   223  001704  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224  001706  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225  001708  0100               	movlb	0
   226  00170A  EF32  F00D         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229  000029                     __pbssCOMRAM:
   230                           	callstack 0
   231  000029                     _Ticks:
   232                           	callstack 0
   233  000029                     	ds	4
   234  00002D                     _config:
   235                           	callstack 0
   236  00002D                     	ds	17
   237                           
   238                           	psect	dataCOMRAM
   239  00003E                     __pdataCOMRAM:
   240                           	callstack 0
   241  00003E                     _DEFAULT_PIPE_ADDR:
   242                           	callstack 0
   243  00003E                     	ds	6
   244                           
   245                           	psect	bssBANK0
   246  000060                     __pbssBANK0:
   247                           	callstack 0
   248  000060                     _bufferRX:
   249                           	callstack 0
   250  000060                     	ds	32
   251  000080                     _bufferTX:
   252                           	callstack 0
   253  000080                     	ds	32
   254                           
   255                           	psect	bssBIGRAM
   256  0000CF                     __pbssBIGRAM:
   257                           	callstack 0
   258  0000CF                     _packetsTX:
   259                           	callstack 0
   260  0000CF                     	ds	272
   261                           
   262                           	psect	cstackBANK0
   263  0000A0                     __pcstackBANK0:
   264                           	callstack 0
   265  0000A0                     ProcessActionRequest@data:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x0
   269  0000A0                     	ds	2
   270  0000A2                     ??_ProcessActionRequest:
   271                           
   272                           ; 1 bytes @ 0x2
   273  0000A2                     	ds	2
   274  0000A4                     ProcessActionRequest@actionID:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x4
   278  0000A4                     	ds	1
   279  0000A5                     ProcessAckPayload@buffer:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x5
   283  0000A5                     	ds	2
   284  0000A7                     ProcessAckPayload@sz:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x7
   288  0000A7                     	ds	1
   289  0000A8                     ??_ProcessAckPayload:
   290                           
   291                           ; 1 bytes @ 0x8
   292  0000A8                     	ds	2
   293  0000AA                     ProcessAckPayload@data:
   294                           	callstack 0
   295                           
   296                           ; 32 bytes @ 0xA
   297  0000AA                     	ds	32
   298  0000CA                     ProcessAckPayload@actionID:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x2A
   302  0000CA                     	ds	1
   303  0000CB                     ProcessAckPayload@pktType:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x2B
   307  0000CB                     	ds	1
   308  0000CC                     HandlePacketLoop@sz:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x2C
   312  0000CC                     	ds	1
   313  0000CD                     HandlePacketLoop@status:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x2D
   317  0000CD                     	ds	1
   318  0000CE                     HandlePacketLoop@i:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x2E
   322  0000CE                     	ds	1
   323                           
   324                           	psect	cstackCOMRAM
   325  000001                     __pcstackCOMRAM:
   326                           	callstack 0
   327  000001                     ?___llmod:
   328                           	callstack 0
   329  000001                     TMR1_WriteTimer@timerVal:
   330                           	callstack 0
   331  000001                     i2SuperMemCpy@dest:
   332                           	callstack 0
   333  000001                     i2memcpy@d1:
   334                           	callstack 0
   335  000001                     ___llmod@dividend:
   336                           	callstack 0
   337                           
   338                           ; 4 bytes @ 0x0
   339  000001                     	ds	2
   340  000003                     i2SuperMemCpy@destStart:
   341                           	callstack 0
   342  000003                     i2memcpy@s1:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x2
   346  000003                     	ds	1
   347  000004                     i2SuperMemCpy@src:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x3
   351  000004                     	ds	1
   352  000005                     i2memcpy@n:
   353                           	callstack 0
   354  000005                     ___llmod@divisor:
   355                           	callstack 0
   356                           
   357                           ; 4 bytes @ 0x4
   358  000005                     	ds	1
   359  000006                     i2SuperMemCpy@srcStart:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x5
   363  000006                     	ds	1
   364  000007                     i2SuperMemCpy@sz:
   365                           	callstack 0
   366  000007                     i2memcpy@d:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x6
   370  000007                     	ds	1
   371  000008                     ??i2_SuperMemCpy:
   372                           
   373                           ; 1 bytes @ 0x7
   374  000008                     	ds	1
   375  000009                     ___llmod@counter:
   376                           	callstack 0
   377  000009                     i2memcpy@s:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x8
   381  000009                     	ds	2
   382  00000B                     i2memcpy@tmp:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xA
   386  00000B                     	ds	1
   387  00000C                     i2SuperMemCpy@i:
   388                           	callstack 0
   389  00000C                     i2QueueTXPacket@buffer:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0xB
   393  00000C                     	ds	2
   394  00000E                     i2QueueTXPacket@sz:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0xD
   398  00000E                     	ds	1
   399  00000F                     i2QueueTXPacket@i:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0xE
   403  00000F                     	ds	1
   404  000010                     ??_INTERRUPT_InterruptManager:
   405                           
   406                           ; 1 bytes @ 0xF
   407  000010                     	ds	8
   408  000018                     ??_SPI1_Open:
   409  000018                     SPI1_ExchangeByte@data:
   410                           	callstack 0
   411  000018                     TMR1_SetInterruptHandler@InterruptHandler:
   412                           	callstack 0
   413  000018                     VerifyBoardAddress@bufferRX:
   414                           	callstack 0
   415  000018                     SuperMemCpy@dest:
   416                           	callstack 0
   417  000018                     memcpy@d1:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x17
   421  000018                     	ds	1
   422  000019                     SPI1_Open@spi1UniqueConfiguration:
   423                           	callstack 0
   424  000019                     nrf24_write_register@value:
   425                           	callstack 0
   426  000019                     nrf24_read_register@mnemonic_addr:
   427                           	callstack 0
   428  000019                     nrf24_read_dynamic_payload_length@byte0:
   429                           	callstack 0
   430  000019                     nrf24_write_buff@buffer:
   431                           	callstack 0
   432  000019                     nrf24_read_buff@buffer:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x18
   436  000019                     	ds	1
   437  00001A                     ??_VerifyBoardAddress:
   438  00001A                     SuperMemCpy@destStart:
   439                           	callstack 0
   440  00001A                     nrf24_write_register@mnemonic_addr:
   441                           	callstack 0
   442  00001A                     nrf24_read_register@byte0:
   443                           	callstack 0
   444  00001A                     memcpy@s1:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x19
   448  00001A                     	ds	1
   449  00001B                     ??_nrf24_flush_tx_rx:
   450  00001B                     nrf24_write_buff@bytes:
   451                           	callstack 0
   452  00001B                     nrf24_read_buff@bytes:
   453                           	callstack 0
   454  00001B                     SuperMemCpy@src:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x1A
   458  00001B                     	ds	1
   459  00001C                     nrf24_write_buff@mnemonic_addr:
   460                           	callstack 0
   461  00001C                     nrf24_read_buff@mnemonic_addr:
   462                           	callstack 0
   463  00001C                     memcpy@n:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x1B
   467  00001C                     	ds	1
   468  00001D                     SuperMemCpy@srcStart:
   469                           	callstack 0
   470  00001D                     nrf24_write_buff@i:
   471                           	callstack 0
   472  00001D                     nrf24_read_buff@i:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x1C
   476  00001D                     	ds	1
   477  00001E                     InitRadio@i:
   478                           	callstack 0
   479  00001E                     SuperMemCpy@sz:
   480                           	callstack 0
   481  00001E                     memcpy@tmp:
   482                           	callstack 0
   483  00001E                     VerifyBoardAddress@i:
   484                           	callstack 0
   485  00001E                     nrf24_send_rf_data@buffer:
   486                           	callstack 0
   487  00001E                     nrf24_read_rf_data@buffer:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x1D
   491  00001E                     	ds	1
   492  00001F                     ??_SuperMemCpy:
   493  00001F                     memcpy@d:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x1E
   497  00001F                     	ds	1
   498  000020                     nrf24_send_rf_data@sz:
   499                           	callstack 0
   500  000020                     nrf24_read_rf_data@sz:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x1F
   504  000020                     	ds	1
   505  000021                     memcpy@s:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x20
   509  000021                     	ds	2
   510  000023                     SuperMemCpy@i:
   511                           	callstack 0
   512  000023                     QueueTXPacket@buffer:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x22
   516  000023                     	ds	2
   517  000025                     QueueTXPacket@sz:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x24
   521  000025                     	ds	1
   522  000026                     QueueTXPacket@i:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x25
   526  000026                     	ds	1
   527  000027                     SendError@errorCode:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x26
   531  000027                     	ds	1
   532  000028                     SendError@i:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x27
   536  000028                     	ds	1
   537  000029                     
   538                           ; 1 bytes @ 0x28
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 11 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels required when called: 12
   564 ;; This function calls:
   565 ;;		_HandlePacketLoop
   566 ;;		_InitRadio
   567 ;;		_SYSTEM_Initialize
   568 ;;		_TMR1_SetInterruptHandler
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text0
   575  001A64                     __ptext0:
   576                           	callstack 0
   577  001A64                     _main:
   578                           	callstack 19
   579  001A64                     
   580                           ;main.c: 13:     SYSTEM_Initialize();
   581  001A64  EC8F  F00D         	call	_SYSTEM_Initialize	;wreg free
   582  001A68                     
   583                           ;main.c: 20:     (INTCONbits.GIE = 1);
   584  001A68  8EF2               	bsf	242,7,c	;volatile
   585  001A6A                     
   586                           ;main.c: 26:     (INTCONbits.PEIE = 1);
   587  001A6A  8CF2               	bsf	242,6,c	;volatile
   588                           
   589                           ;main.c: 30:     TMR1_SetInterruptHandler(TimerInterruptHandler);
   590  001A6C  0EEA               	movlw	low _TimerInterruptHandler
   591  001A6E  6E18               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   592  001A70  0E18               	movlw	high _TimerInterruptHandler
   593  001A72  6E19               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   594  001A74  ECB2  F00D         	call	_TMR1_SetInterruptHandler	;wreg free
   595  001A78                     
   596                           ;main.c: 32:     InitRadio();
   597  001A78  ECA0  F008         	call	_InitRadio	;wreg free
   598  001A7C                     l2585:
   599                           
   600                           ;main.c: 35:         HandlePacketLoop();
   601  001A7C  EC03  F008         	call	_HandlePacketLoop	;wreg free
   602  001A80                     
   603                           ;main.c: 36:         __nop();
   604  001A80  F000               	nop	
   605  001A82  EF3E  F00D         	goto	l2585
   606  001A86  EF3E  F000         	goto	start
   607  001A8A                     __end_of_main:
   608                           	callstack 0
   609                           
   610 ;; *************** function _SYSTEM_Initialize *****************
   611 ;; Defined at:
   612 ;;		line 50 in file "mcc_generated_files/mcc.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used: 1
   632 ;; Hardware stack levels required when called: 8
   633 ;; This function calls:
   634 ;;		_INTERRUPT_Initialize
   635 ;;		_OSCILLATOR_Initialize
   636 ;;		_PIN_MANAGER_Initialize
   637 ;;		_SPI1_Initialize
   638 ;;		_TMR1_Initialize
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text1
   645  001B1E                     __ptext1:
   646                           	callstack 0
   647  001B1E                     _SYSTEM_Initialize:
   648                           	callstack 22
   649  001B1E                     
   650                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   651  001B1E  ECBA  F00D         	call	_INTERRUPT_Initialize	;wreg free
   652  001B22                     
   653                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
   654  001B22  EC9A  F00D         	call	_SPI1_Initialize	;wreg free
   655  001B26                     
   656                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
   657  001B26  ECF3  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
   658  001B2A                     
   659                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
   660  001B2A  ECAB  F00D         	call	_OSCILLATOR_Initialize	;wreg free
   661  001B2E                     
   662                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
   663  001B2E  EC09  F00D         	call	_TMR1_Initialize	;wreg free
   664  001B32  0012               	return		;funcret
   665  001B34                     __end_of_SYSTEM_Initialize:
   666                           	callstack 0
   667                           
   668 ;; *************** function _TMR1_Initialize *****************
   669 ;; Defined at:
   670 ;;		line 64 in file "mcc_generated_files/tmr1.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;Total ram usage:        0 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 7
   691 ;; This function calls:
   692 ;;		_TMR1_SetInterruptHandler
   693 ;; This function is called by:
   694 ;;		_SYSTEM_Initialize
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text2
   699  001A12                     __ptext2:
   700                           	callstack 0
   701  001A12                     _TMR1_Initialize:
   702                           	callstack 22
   703  001A12                     
   704                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
   705  001A12  0E00               	movlw	0
   706  001A14  6ECC               	movwf	204,c	;volatile
   707                           
   708                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x0B;
   709  001A16  0E0B               	movlw	11
   710  001A18  6ECF               	movwf	207,c	;volatile
   711                           
   712                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xDC;
   713  001A1A  0EDC               	movlw	220
   714  001A1C  6ECE               	movwf	206,c	;volatile
   715  001A1E                     
   716                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
   717  001A1E  CFCE F046          	movff	4046,_timer1ReloadVal	;volatile
   718  001A22  CFCF F047          	movff	4047,_timer1ReloadVal+1	;volatile
   719  001A26                     
   720                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
   721  001A26  909E               	bcf	158,0,c	;volatile
   722  001A28                     
   723                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
   724  001A28  809D               	bsf	157,0,c	;volatile
   725  001A2A                     
   726                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
   727  001A2A  0E78               	movlw	low _TMR1_DefaultInterruptHandler
   728  001A2C  6E18               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   729  001A2E  0E1B               	movlw	high _TMR1_DefaultInterruptHandler
   730  001A30  6E19               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   731  001A32  ECB2  F00D         	call	_TMR1_SetInterruptHandler	;wreg free
   732  001A36                     
   733                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x21;
   734  001A36  0E21               	movlw	33
   735  001A38  6ECD               	movwf	205,c	;volatile
   736  001A3A  0012               	return		;funcret
   737  001A3C                     __end_of_TMR1_Initialize:
   738                           	callstack 0
   739                           
   740 ;; *************** function _TMR1_SetInterruptHandler *****************
   741 ;; Defined at:
   742 ;;		line 172 in file "mcc_generated_files/tmr1.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  InterruptHan    2   23[COMRAM] PTR FTN()void 
   745 ;;		 -> TimerInterruptHandler(1), TMR1_DefaultInterruptHandler(1), 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;Total ram usage:        2 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 6
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_TMR1_Initialize
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text3
   773  001B64                     __ptext3:
   774                           	callstack 0
   775  001B64                     _TMR1_SetInterruptHandler:
   776                           	callstack 24
   777  001B64                     
   778                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
   779  001B64  C018  F044         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
   780  001B68  C019  F045         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
   781  001B6C  0012               	return		;funcret
   782  001B6E                     __end_of_TMR1_SetInterruptHandler:
   783                           	callstack 0
   784                           
   785 ;; *************** function _SPI1_Initialize *****************
   786 ;; Defined at:
   787 ;;		line 62 in file "mcc_generated_files/spi1.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; Hardware stack levels required when called: 6
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_SYSTEM_Initialize
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text4
   816  001B34                     __ptext4:
   817                           	callstack 0
   818  001B34                     _SPI1_Initialize:
   819                           	callstack 23
   820  001B34                     
   821                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
   822  001B34  0E40               	movlw	64
   823  001B36  6EC7               	movwf	199,c	;volatile
   824                           
   825                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
   826  001B38  0E00               	movlw	0
   827  001B3A  6EC6               	movwf	198,c	;volatile
   828                           
   829                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
   830  001B3C  0E01               	movlw	1
   831  001B3E  6EC8               	movwf	200,c	;volatile
   832  001B40                     
   833                           ;mcc_generated_files/spi1.c: 68:     TRISCbits.TRISC3 = 0;
   834  001B40  9694               	bcf	148,3,c	;volatile
   835  001B42                     
   836                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
   837  001B42  9AC6               	bcf	198,5,c	;volatile
   838  001B44  0012               	return		;funcret
   839  001B46                     __end_of_SPI1_Initialize:
   840                           	callstack 0
   841                           
   842 ;; *************** function _PIN_MANAGER_Initialize *****************
   843 ;; Defined at:
   844 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 6
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_SYSTEM_Initialize
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text5
   873  0019E6                     __ptext5:
   874                           	callstack 0
   875  0019E6                     _PIN_MANAGER_Initialize:
   876                           	callstack 23
   877  0019E6                     
   878                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   879  0019E6  0E00               	movlw	0
   880  0019E8  6E89               	movwf	137,c	;volatile
   881                           
   882                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   883  0019EA  0E00               	movlw	0
   884  0019EC  6E8A               	movwf	138,c	;volatile
   885                           
   886                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   887  0019EE  0E00               	movlw	0
   888  0019F0  6E8B               	movwf	139,c	;volatile
   889                           
   890                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFD;
   891  0019F2  0EFD               	movlw	253
   892  0019F4  6E92               	movwf	146,c	;volatile
   893  0019F6                     
   894                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   895  0019F6  6893               	setf	147,c	;volatile
   896                           
   897                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD1;
   898  0019F8  0ED1               	movlw	209
   899  0019FA  6E94               	movwf	148,c	;volatile
   900                           
   901                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC4;
   902  0019FC  0EC4               	movlw	196
   903  0019FE  010F               	movlb	15	; () banked
   904  001A00  6F3A               	movwf	58,b	;volatile
   905                           
   906                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
   907  001A02  0E3F               	movlw	63
   908  001A04  6F39               	movwf	57,b	;volatile
   909                           
   910                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2D;
   911  001A06  0E2D               	movlw	45
   912  001A08  6F38               	movwf	56,b	;volatile
   913                           
   914                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   915  001A0A  0E00               	movlw	0
   916  001A0C  6E61               	movwf	97,c	;volatile
   917  001A0E                     
   918                           ; BSR set to: 15
   919                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   920  001A0E  8EF1               	bsf	241,7,c	;volatile
   921  001A10                     
   922                           ; BSR set to: 15
   923  001A10  0012               	return		;funcret
   924  001A12                     __end_of_PIN_MANAGER_Initialize:
   925                           	callstack 0
   926                           
   927 ;; *************** function _OSCILLATOR_Initialize *****************
   928 ;; Defined at:
   929 ;;		line 60 in file "mcc_generated_files/mcc.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, status,2
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;Total ram usage:        0 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 6
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_SYSTEM_Initialize
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text6
   958  001B56                     __ptext6:
   959                           	callstack 0
   960  001B56                     _OSCILLATOR_Initialize:
   961                           	callstack 23
   962  001B56                     
   963                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x30;
   964  001B56  0E30               	movlw	48
   965  001B58  6ED3               	movwf	211,c	;volatile
   966                           
   967                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
   968  001B5A  0E04               	movlw	4
   969  001B5C  6ED2               	movwf	210,c	;volatile
   970                           
   971                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
   972  001B5E  0E00               	movlw	0
   973  001B60  6E9B               	movwf	155,c	;volatile
   974  001B62  0012               	return		;funcret
   975  001B64                     __end_of_OSCILLATOR_Initialize:
   976                           	callstack 0
   977                           
   978 ;; *************** function _INTERRUPT_Initialize *****************
   979 ;; Defined at:
   980 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		None
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; Hardware stack levels required when called: 6
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_SYSTEM_Initialize
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text7
  1009  001B74                     __ptext7:
  1010                           	callstack 0
  1011  001B74                     _INTERRUPT_Initialize:
  1012                           	callstack 23
  1013  001B74                     
  1014                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1015  001B74  9ED0               	bcf	208,7,c	;volatile
  1016  001B76  0012               	return		;funcret
  1017  001B78                     __end_of_INTERRUPT_Initialize:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _InitRadio *****************
  1021 ;; Defined at:
  1022 ;;		line 26 in file "handler.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  i               1   29[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;Total ram usage:        1 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; Hardware stack levels required when called: 8
  1043 ;; This function calls:
  1044 ;;		_nrf24_rf_init
  1045 ;;		_nrf24_write_buff
  1046 ;;		_nrf24_write_register
  1047 ;; This function is called by:
  1048 ;;		_main
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text8
  1053  001140                     __ptext8:
  1054                           	callstack 0
  1055  001140                     _InitRadio:
  1056                           	callstack 22
  1057  001140                     
  1058                           ;handler.c: 27:     nrf24_rf_init();
  1059  001140  ECA3  F00D         	call	_nrf24_rf_init	;wreg free
  1060  001144                     
  1061                           ;handler.c: 29:     nrf24_write_buff(0x10, DEFAULT_PIPE_ADDR, 5);
  1062  001144  0E3E               	movlw	low _DEFAULT_PIPE_ADDR
  1063  001146  6E19               	movwf	nrf24_write_buff@buffer^0,c
  1064  001148  0E00               	movlw	high _DEFAULT_PIPE_ADDR
  1065  00114A  6E1A               	movwf	(nrf24_write_buff@buffer+1)^0,c
  1066  00114C  0E05               	movlw	5
  1067  00114E  6E1B               	movwf	nrf24_write_buff@bytes^0,c
  1068  001150  0E10               	movlw	16
  1069  001152  EC9A  F00C         	call	_nrf24_write_buff
  1070  001156                     
  1071                           ;handler.c: 30:     nrf24_write_buff(0x0A, DEFAULT_PIPE_ADDR, 5);
  1072  001156  0E3E               	movlw	low _DEFAULT_PIPE_ADDR
  1073  001158  6E19               	movwf	nrf24_write_buff@buffer^0,c
  1074  00115A  0E00               	movlw	high _DEFAULT_PIPE_ADDR
  1075  00115C  6E1A               	movwf	(nrf24_write_buff@buffer+1)^0,c
  1076  00115E  0E05               	movlw	5
  1077  001160  6E1B               	movwf	nrf24_write_buff@bytes^0,c
  1078  001162  0E0A               	movlw	10
  1079  001164  EC9A  F00C         	call	_nrf24_write_buff
  1080  001168                     
  1081                           ;handler.c: 32:     nrf24_write_register(0x00, 0b1111010);
  1082  001168  0E7A               	movlw	122
  1083  00116A  6E19               	movwf	nrf24_write_register@value^0,c
  1084  00116C  0E00               	movlw	0
  1085  00116E  EC89  F00A         	call	_nrf24_write_register
  1086  001172                     
  1087                           ;handler.c: 34:     nrf24_write_register(0x01, 0b1);
  1088  001172  0E01               	movlw	1
  1089  001174  6E19               	movwf	nrf24_write_register@value^0,c
  1090  001176  0E01               	movlw	1
  1091  001178  EC89  F00A         	call	_nrf24_write_register
  1092  00117C                     
  1093                           ;handler.c: 36:     nrf24_write_register(0x02, 0b1);
  1094  00117C  0E01               	movlw	1
  1095  00117E  6E19               	movwf	nrf24_write_register@value^0,c
  1096  001180  0E02               	movlw	2
  1097  001182  EC89  F00A         	call	_nrf24_write_register
  1098  001186                     
  1099                           ;handler.c: 38:     nrf24_write_register(0x03, 0b11);
  1100  001186  0E03               	movlw	3
  1101  001188  6E19               	movwf	nrf24_write_register@value^0,c
  1102  00118A  0E03               	movlw	3
  1103  00118C  EC89  F00A         	call	_nrf24_write_register
  1104  001190                     
  1105                           ;handler.c: 40:     nrf24_write_register(0x04, 0b11011111);
  1106  001190  0EDF               	movlw	223
  1107  001192  6E19               	movwf	nrf24_write_register@value^0,c
  1108  001194  0E04               	movlw	4
  1109  001196  EC89  F00A         	call	_nrf24_write_register
  1110  00119A                     
  1111                           ;handler.c: 42:     nrf24_write_register(0x05, 115);
  1112  00119A  0E73               	movlw	115
  1113  00119C  6E19               	movwf	nrf24_write_register@value^0,c
  1114  00119E  0E05               	movlw	5
  1115  0011A0  EC89  F00A         	call	_nrf24_write_register
  1116  0011A4                     
  1117                           ;handler.c: 44:     nrf24_write_register(0x06, 0b1110);
  1118  0011A4  0E0E               	movlw	14
  1119  0011A6  6E19               	movwf	nrf24_write_register@value^0,c
  1120  0011A8  0E06               	movlw	6
  1121  0011AA  EC89  F00A         	call	_nrf24_write_register
  1122  0011AE                     
  1123                           ;handler.c: 46:     nrf24_write_register(0x1D, 0b110);
  1124  0011AE  0E06               	movlw	6
  1125  0011B0  6E19               	movwf	nrf24_write_register@value^0,c
  1126  0011B2  0E1D               	movlw	29
  1127  0011B4  EC89  F00A         	call	_nrf24_write_register
  1128  0011B8                     
  1129                           ;handler.c: 48:     nrf24_write_register(0x1C, 0b1);
  1130  0011B8  0E01               	movlw	1
  1131  0011BA  6E19               	movwf	nrf24_write_register@value^0,c
  1132  0011BC  0E1C               	movlw	28
  1133  0011BE  EC89  F00A         	call	_nrf24_write_register
  1134  0011C2                     
  1135                           ;handler.c: 49:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1136  0011C2  D000               	nop2		;2 cycle nop
  1137  0011C4                     
  1138                           ;handler.c: 52:     config.IsConfigured = 0;
  1139  0011C4  0E00               	movlw	0
  1140  0011C6  6E2D               	movwf	_config^0,c
  1141  0011C8                     
  1142                           ;handler.c: 53:     config.PingInterval = 2;
  1143  0011C8  0E02               	movlw	2
  1144  0011CA  6E31               	movwf	(_config+4)^0,c
  1145  0011CC                     
  1146                           ;handler.c: 56:     for (uint8_t i = 0; i < 8; i++) {
  1147  0011CC  0E00               	movlw	0
  1148  0011CE  6E1E               	movwf	InitRadio@i^0,c
  1149  0011D0                     l2505:
  1150                           
  1151                           ;handler.c: 57:         packetsTX[i].free = 1;
  1152  0011D0  501E               	movf	InitRadio@i^0,w,c
  1153  0011D2  0D22               	mullw	34
  1154  0011D4  0EEF               	movlw	low (_packetsTX+32)
  1155  0011D6  24F3               	addwf	243,w,c
  1156  0011D8  6ED9               	movwf	fsr2l,c
  1157  0011DA  0E00               	movlw	high (_packetsTX+32)
  1158  0011DC  20F4               	addwfc	prodh,w,c
  1159  0011DE  6EDA               	movwf	fsr2h,c
  1160  0011E0  0E01               	movlw	1
  1161  0011E2  6EDF               	movwf	indf2,c
  1162                           
  1163                           ;handler.c: 58:         packetsTX[i].size = 0;
  1164  0011E4  501E               	movf	InitRadio@i^0,w,c
  1165  0011E6  0D22               	mullw	34
  1166  0011E8  0EF0               	movlw	low (_packetsTX+33)
  1167  0011EA  24F3               	addwf	243,w,c
  1168  0011EC  6ED9               	movwf	fsr2l,c
  1169  0011EE  0E00               	movlw	high (_packetsTX+33)
  1170  0011F0  20F4               	addwfc	prodh,w,c
  1171  0011F2  6EDA               	movwf	fsr2h,c
  1172  0011F4  0E00               	movlw	0
  1173  0011F6  6EDF               	movwf	indf2,c
  1174  0011F8                     
  1175                           ;handler.c: 59:     }
  1176  0011F8  2A1E               	incf	InitRadio@i^0,f,c
  1177  0011FA  0E07               	movlw	7
  1178  0011FC  641E               	cpfsgt	InitRadio@i^0,c
  1179  0011FE  EF03  F009         	goto	u1041
  1180  001202  EF05  F009         	goto	u1040
  1181  001206                     u1041:
  1182  001206  EFE8  F008         	goto	l2505
  1183  00120A                     u1040:
  1184  00120A  0012               	return		;funcret
  1185  00120C                     __end_of_InitRadio:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _nrf24_rf_init *****************
  1189 ;; Defined at:
  1190 ;;		line 70 in file "../lib/nrf24_lib.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 7
  1211 ;; This function calls:
  1212 ;;		_SPI1_Open
  1213 ;; This function is called by:
  1214 ;;		_InitRadio
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text9
  1219  001B46                     __ptext9:
  1220                           	callstack 0
  1221  001B46                     _nrf24_rf_init:
  1222                           	callstack 22
  1223  001B46                     
  1224                           ;../lib/nrf24_lib.c: 71:     SPI1_Open(SPI1_DEFAULT);
  1225  001B46  0E00               	movlw	0
  1226  001B48  EC06  F009         	call	_SPI1_Open
  1227  001B4C  9294               	bcf	148,1,c	;volatile
  1228  001B4E  9494               	bcf	148,2,c	;volatile
  1229  001B50  828B               	bsf	139,1,c	;volatile
  1230  001B52  948B               	bcf	139,2,c	;volatile
  1231  001B54  0012               	return		;funcret
  1232  001B56                     __end_of_nrf24_rf_init:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _SPI1_Open *****************
  1236 ;; Defined at:
  1237 ;;		line 72 in file "mcc_generated_files/spi1.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  spi1UniqueCo    1    wreg     enum E355
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  spi1UniqueCo    1   24[COMRAM] enum E355
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      _Bool 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;Total ram usage:        2 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 6
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_nrf24_rf_init
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text10
  1266  00120C                     __ptext10:
  1267                           	callstack 0
  1268  00120C                     _SPI1_Open:
  1269                           	callstack 22
  1270                           
  1271                           ;incstack = 0
  1272                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  1273  00120C  6E19               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
  1274  00120E                     
  1275                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  1276  00120E  BAC6               	btfsc	198,5,c	;volatile
  1277  001210  EF0C  F009         	goto	u171
  1278  001214  EF0E  F009         	goto	u170
  1279  001218                     u171:
  1280  001218  EF5D  F009         	goto	l55
  1281  00121C                     u170:
  1282  00121C                     
  1283                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  1284  00121C  5019               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1285  00121E  0D04               	mullw	4
  1286  001220  0E01               	movlw	1
  1287  001222  26F3               	addwf	243,f,c
  1288  001224  0E00               	movlw	0
  1289  001226  22F4               	addwfc	244,f,c
  1290  001228  0E01               	movlw	low _spi1_configuration
  1291  00122A  24F3               	addwf	243,w,c
  1292  00122C  6EF6               	movwf	tblptrl,c
  1293  00122E  0E10               	movlw	high _spi1_configuration
  1294  001230  20F4               	addwfc	244,w,c
  1295  001232  6EF7               	movwf	tblptrh,c
  1296  001234                     	if	1	;There are 3 active tblptr bytes
  1297  001234  6AF8               	clrf	tblptru,c
  1298  001236  0E00               	movlw	low (__mediumconst shr (0+16))
  1299  001238  22F8               	addwfc	tblptru,f,c
  1300  00123A                     	endif
  1301  00123A  0008               	tblrd		*
  1302  00123C  CFF5 FFC7          	movff	tablat,4039	;volatile
  1303                           
  1304                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  1305  001240  5019               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1306  001242  0D04               	mullw	4
  1307  001244  0E01               	movlw	low _spi1_configuration
  1308  001246  24F3               	addwf	243,w,c
  1309  001248  6EF6               	movwf	tblptrl,c
  1310  00124A  0E10               	movlw	high _spi1_configuration
  1311  00124C  20F4               	addwfc	244,w,c
  1312  00124E  6EF7               	movwf	tblptrh,c
  1313  001250                     	if	1	;There are 3 active tblptr bytes
  1314  001250  6AF8               	clrf	tblptru,c
  1315  001252  0E00               	movlw	low (__mediumconst shr (0+16))
  1316  001254  22F8               	addwfc	tblptru,f,c
  1317  001256                     	endif
  1318  001256  0008               	tblrd		*
  1319  001258  CFF5 FFC6          	movff	tablat,4038	;volatile
  1320  00125C                     
  1321                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  1322  00125C  0E00               	movlw	0
  1323  00125E  6EC5               	movwf	197,c	;volatile
  1324  001260                     
  1325                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  1326  001260  5019               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1327  001262  0D04               	mullw	4
  1328  001264  0E02               	movlw	2
  1329  001266  26F3               	addwf	243,f,c
  1330  001268  0E00               	movlw	0
  1331  00126A  22F4               	addwfc	244,f,c
  1332  00126C  0E01               	movlw	low _spi1_configuration
  1333  00126E  24F3               	addwf	243,w,c
  1334  001270  6EF6               	movwf	tblptrl,c
  1335  001272  0E10               	movlw	high _spi1_configuration
  1336  001274  20F4               	addwfc	244,w,c
  1337  001276  6EF7               	movwf	tblptrh,c
  1338  001278                     	if	1	;There are 3 active tblptr bytes
  1339  001278  6AF8               	clrf	tblptru,c
  1340  00127A  0E00               	movlw	low (__mediumconst shr (0+16))
  1341  00127C  22F8               	addwfc	tblptru,f,c
  1342  00127E                     	endif
  1343  00127E  0008               	tblrd		*
  1344  001280  CFF5 FFC8          	movff	tablat,4040	;volatile
  1345  001284                     
  1346                           ;mcc_generated_files/spi1.c: 80:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  1347  001284  5019               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1348  001286  0D04               	mullw	4
  1349  001288  0E03               	movlw	3
  1350  00128A  26F3               	addwf	243,f,c
  1351  00128C  0E00               	movlw	0
  1352  00128E  22F4               	addwfc	244,f,c
  1353  001290  0E01               	movlw	low _spi1_configuration
  1354  001292  24F3               	addwf	243,w,c
  1355  001294  6EF6               	movwf	tblptrl,c
  1356  001296  0E10               	movlw	high _spi1_configuration
  1357  001298  20F4               	addwfc	244,w,c
  1358  00129A  6EF7               	movwf	tblptrh,c
  1359  00129C                     	if	1	;There are 3 active tblptr bytes
  1360  00129C  6AF8               	clrf	tblptru,c
  1361  00129E  0E00               	movlw	low (__mediumconst shr (0+16))
  1362  0012A0  22F8               	addwfc	tblptru,f,c
  1363  0012A2                     	endif
  1364  0012A2  0008               	tblrd		*
  1365  0012A4  CFF5 F018          	movff	tablat,??_SPI1_Open
  1366  0012A8  4618               	rlncf	??_SPI1_Open^0,f,c
  1367  0012AA  4618               	rlncf	??_SPI1_Open^0,f,c
  1368  0012AC  4618               	rlncf	??_SPI1_Open^0,f,c
  1369  0012AE  5094               	movf	148,w,c	;volatile
  1370  0012B0  1818               	xorwf	??_SPI1_Open^0,w,c
  1371  0012B2  0BF7               	andlw	-9
  1372  0012B4  1818               	xorwf	??_SPI1_Open^0,w,c
  1373  0012B6  6E94               	movwf	148,c	;volatile
  1374  0012B8                     
  1375                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  1376  0012B8  8AC6               	bsf	198,5,c	;volatile
  1377  0012BA                     l55:
  1378  0012BA  0012               	return		;funcret
  1379  0012BC                     __end_of_SPI1_Open:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _HandlePacketLoop *****************
  1383 ;; Defined at:
  1384 ;;		line 83 in file "handler.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  sz              1   44[BANK0 ] unsigned char 
  1389 ;;  i               1   46[BANK0 ] unsigned char 
  1390 ;;  status          1   45[BANK0 ] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        3 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 11
  1407 ;; This function calls:
  1408 ;;		_ProcessAckPayload
  1409 ;;		_VerifyBoardAddress
  1410 ;;		_nrf24_flush_tx_rx
  1411 ;;		_nrf24_read_dynamic_payload_length
  1412 ;;		_nrf24_read_register
  1413 ;;		_nrf24_read_rf_data
  1414 ;;		_nrf24_send_rf_data
  1415 ;;		_nrf24_write_register
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text11
  1422  001006                     __ptext11:
  1423                           	callstack 0
  1424  001006                     _HandlePacketLoop:
  1425                           	callstack 19
  1426  001006                     
  1427                           ;handler.c: 84:     uint8_t i;;handler.c: 87:     for (i = 0; i < 8; i++) {
  1428  001006  0E00               	movlw	0
  1429  001008  0100               	movlb	0	; () banked
  1430  00100A  6FCE               	movwf	HandlePacketLoop@i& (0+255),b
  1431  00100C                     l2517:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;handler.c: 88:         if (!packetsTX[i].free) {
  1435  00100C  51CE               	movf	HandlePacketLoop@i& (0+255),w,b
  1436  00100E  0D22               	mullw	34
  1437  001010  0EEF               	movlw	low (_packetsTX+32)
  1438  001012  24F3               	addwf	243,w,c
  1439  001014  6ED9               	movwf	fsr2l,c
  1440  001016  0E00               	movlw	high (_packetsTX+32)
  1441  001018  20F4               	addwfc	prodh,w,c
  1442  00101A  6EDA               	movwf	fsr2h,c
  1443  00101C  50DF               	movf	indf2,w,c
  1444  00101E  A4D8               	btfss	status,2,c
  1445  001020  EF14  F008         	goto	u1051
  1446  001024  EF16  F008         	goto	u1050
  1447  001028                     u1051:
  1448  001028  EF18  F008         	goto	l2521
  1449  00102C                     u1050:
  1450  00102C  EF21  F008         	goto	l2525
  1451  001030                     l2521:
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;handler.c: 91:     }
  1455  001030  2BCE               	incf	HandlePacketLoop@i& (0+255),f,b
  1456  001032                     
  1457                           ; BSR set to: 0
  1458  001032  0E07               	movlw	7
  1459  001034  65CE               	cpfsgt	HandlePacketLoop@i& (0+255),b
  1460  001036  EF1F  F008         	goto	u1061
  1461  00103A  EF21  F008         	goto	u1060
  1462  00103E                     u1061:
  1463  00103E  EF06  F008         	goto	l2517
  1464  001042                     u1060:
  1465  001042                     l2525:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;handler.c: 92:     if (i == 8) {
  1469  001042  0E08               	movlw	8
  1470  001044  19CE               	xorwf	HandlePacketLoop@i& (0+255),w,b
  1471  001046  A4D8               	btfss	status,2,c
  1472  001048  EF28  F008         	goto	u1071
  1473  00104C  EF2A  F008         	goto	u1070
  1474  001050                     u1071:
  1475  001050  EF2C  F008         	goto	l2529
  1476  001054                     u1070:
  1477  001054  EF9F  F008         	goto	l286
  1478  001058                     l2529:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;handler.c: 96:     nrf24_send_rf_data(packetsTX[i].packet, packetsTX[i].size);
  1482  001058  51CE               	movf	HandlePacketLoop@i& (0+255),w,b
  1483  00105A  0D22               	mullw	34
  1484  00105C  0ECF               	movlw	low _packetsTX
  1485  00105E  24F3               	addwf	243,w,c
  1486  001060  6E1E               	movwf	nrf24_send_rf_data@buffer^0,c
  1487  001062  0E00               	movlw	high _packetsTX
  1488  001064  20F4               	addwfc	prodh,w,c
  1489  001066  6E1F               	movwf	(nrf24_send_rf_data@buffer+1)^0,c
  1490  001068  51CE               	movf	HandlePacketLoop@i& (0+255),w,b
  1491  00106A  0D22               	mullw	34
  1492  00106C  0EF0               	movlw	low (_packetsTX+33)
  1493  00106E  24F3               	addwf	243,w,c
  1494  001070  6ED9               	movwf	fsr2l,c
  1495  001072  0E00               	movlw	high (_packetsTX+33)
  1496  001074  20F4               	addwfc	prodh,w,c
  1497  001076  6EDA               	movwf	fsr2h,c
  1498  001078  50DF               	movf	indf2,w,c
  1499  00107A  6E20               	movwf	nrf24_send_rf_data@sz^0,c
  1500  00107C  EC56  F00D         	call	_nrf24_send_rf_data	;wreg free
  1501  001080                     l2533:
  1502                           
  1503                           ;handler.c: 101:         status = nrf24_read_register(0x07);
  1504  001080  0E07               	movlw	7
  1505  001082  EC75  F00D         	call	_nrf24_read_register
  1506  001086  0100               	movlb	0	; () banked
  1507  001088  6FCD               	movwf	HandlePacketLoop@status& (0+255),b
  1508  00108A                     
  1509                           ; BSR set to: 0
  1510                           ;handler.c: 102:         if ((status & 0x20) || (status & 0x10)) {
  1511  00108A  BBCD               	btfsc	HandlePacketLoop@status& (0+255),5,b
  1512  00108C  EF4A  F008         	goto	u1081
  1513  001090  EF4C  F008         	goto	u1080
  1514  001094                     u1081:
  1515  001094  EF58  F008         	goto	l2539
  1516  001098                     u1080:
  1517  001098                     
  1518                           ; BSR set to: 0
  1519  001098  A9CD               	btfss	HandlePacketLoop@status& (0+255),4,b
  1520  00109A  EF51  F008         	goto	u1091
  1521  00109E  EF53  F008         	goto	u1090
  1522  0010A2                     u1091:
  1523  0010A2  EF55  F008         	goto	l288
  1524  0010A6                     u1090:
  1525  0010A6  EF58  F008         	goto	l2539
  1526  0010AA                     l288:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;handler.c: 105:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  1530  0010AA  D000               	nop2		;2 cycle nop
  1531  0010AC  EF40  F008         	goto	l2533
  1532  0010B0                     l2539:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;handler.c: 108:     nrf24_write_register(0x07, 0x70);
  1536  0010B0  0E70               	movlw	112
  1537  0010B2  6E19               	movwf	nrf24_write_register@value^0,c
  1538  0010B4  0E07               	movlw	7
  1539  0010B6  EC89  F00A         	call	_nrf24_write_register
  1540  0010BA                     
  1541                           ;handler.c: 111:     if (status & 0x10) {
  1542  0010BA  0100               	movlb	0	; () banked
  1543  0010BC  A9CD               	btfss	HandlePacketLoop@status& (0+255),4,b
  1544  0010BE  EF63  F008         	goto	u1101
  1545  0010C2  EF65  F008         	goto	u1100
  1546  0010C6                     u1101:
  1547  0010C6  EF69  F008         	goto	l2547
  1548  0010CA                     u1100:
  1549  0010CA                     
  1550                           ; BSR set to: 0
  1551                           ;handler.c: 112:         nrf24_flush_tx_rx();
  1552  0010CA  EC29  F00C         	call	_nrf24_flush_tx_rx	;wreg free
  1553  0010CE  EF9F  F008         	goto	l286
  1554  0010D2                     l2547:
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;handler.c: 119:     packetsTX[i].free = 1;
  1558  0010D2  51CE               	movf	HandlePacketLoop@i& (0+255),w,b
  1559  0010D4  0D22               	mullw	34
  1560  0010D6  0EEF               	movlw	low (_packetsTX+32)
  1561  0010D8  24F3               	addwf	243,w,c
  1562  0010DA  6ED9               	movwf	fsr2l,c
  1563  0010DC  0E00               	movlw	high (_packetsTX+32)
  1564  0010DE  20F4               	addwfc	prodh,w,c
  1565  0010E0  6EDA               	movwf	fsr2h,c
  1566  0010E2  0E01               	movlw	1
  1567  0010E4  6EDF               	movwf	indf2,c
  1568  0010E6                     
  1569                           ; BSR set to: 0
  1570                           ;handler.c: 122:     if (status & 0x40) {
  1571  0010E6  ADCD               	btfss	HandlePacketLoop@status& (0+255),6,b
  1572  0010E8  EF78  F008         	goto	u1111
  1573  0010EC  EF7A  F008         	goto	u1110
  1574  0010F0                     u1111:
  1575  0010F0  EF9F  F008         	goto	l286
  1576  0010F4                     u1110:
  1577  0010F4                     
  1578                           ; BSR set to: 0
  1579                           ;handler.c: 123:         uint8_t sz = nrf24_read_dynamic_payload_length();
  1580  0010F4  EC66  F00D         	call	_nrf24_read_dynamic_payload_length	;wreg free
  1581  0010F8  0100               	movlb	0	; () banked
  1582  0010FA  6FCC               	movwf	HandlePacketLoop@sz& (0+255),b
  1583  0010FC                     
  1584                           ; BSR set to: 0
  1585                           ;handler.c: 124:         nrf24_read_rf_data(bufferRX, sz);
  1586  0010FC  0E60               	movlw	low _bufferRX
  1587  0010FE  6E1E               	movwf	nrf24_read_rf_data@buffer^0,c
  1588  001100  0E00               	movlw	high _bufferRX
  1589  001102  6E1F               	movwf	(nrf24_read_rf_data@buffer+1)^0,c
  1590  001104  C0CC  F020         	movff	HandlePacketLoop@sz,nrf24_read_rf_data@sz
  1591  001108  EC45  F00D         	call	_nrf24_read_rf_data	;wreg free
  1592  00110C                     
  1593                           ;handler.c: 125:         if (!VerifyBoardAddress(bufferRX)) {
  1594  00110C  0E60               	movlw	low _bufferRX
  1595  00110E  6E18               	movwf	VerifyBoardAddress@bufferRX^0,c
  1596  001110  0E00               	movlw	high _bufferRX
  1597  001112  6E19               	movwf	(VerifyBoardAddress@bufferRX+1)^0,c
  1598  001114  ECC9  F00A         	call	_VerifyBoardAddress	;wreg free
  1599  001118  0900               	iorlw	0
  1600  00111A  A4D8               	btfss	status,2,c
  1601  00111C  EF92  F008         	goto	u1121
  1602  001120  EF94  F008         	goto	u1120
  1603  001124                     u1121:
  1604  001124  EF96  F008         	goto	l2559
  1605  001128                     u1120:
  1606  001128  EF9F  F008         	goto	l286
  1607  00112C                     l2559:
  1608                           
  1609                           ;handler.c: 128:         ProcessAckPayload(bufferRX, sz);
  1610  00112C  0E60               	movlw	low _bufferRX
  1611  00112E  0100               	movlb	0	; () banked
  1612  001130  6FA5               	movwf	ProcessAckPayload@buffer& (0+255),b
  1613  001132  0E00               	movlw	high _bufferRX
  1614  001134  6FA6               	movwf	(ProcessAckPayload@buffer+1)& (0+255),b
  1615  001136  C0CC  F0A7         	movff	HandlePacketLoop@sz,ProcessAckPayload@sz
  1616  00113A  ECFE  F009         	call	_ProcessAckPayload	;wreg free
  1617  00113E                     l286:
  1618  00113E  0012               	return		;funcret
  1619  001140                     __end_of_HandlePacketLoop:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _nrf24_send_rf_data *****************
  1623 ;; Defined at:
  1624 ;;		line 79 in file "../lib/nrf24_lib.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  buffer          2   29[COMRAM] PTR unsigned char 
  1627 ;;		 -> packetsTX(272), 
  1628 ;;  sz              1   31[COMRAM] unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:        3 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 8
  1647 ;; This function calls:
  1648 ;;		_nrf24_write_buff
  1649 ;; This function is called by:
  1650 ;;		_HandlePacketLoop
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text12
  1655  001AAC                     __ptext12:
  1656                           	callstack 0
  1657  001AAC                     _nrf24_send_rf_data:
  1658                           	callstack 21
  1659  001AAC                     
  1660                           ;../lib/nrf24_lib.c: 80:     nrf24_write_buff(0xA0, buffer, sz);
  1661  001AAC  C01E  F019         	movff	nrf24_send_rf_data@buffer,nrf24_write_buff@buffer
  1662  001AB0  C01F  F01A         	movff	nrf24_send_rf_data@buffer+1,nrf24_write_buff@buffer+1
  1663  001AB4  C020  F01B         	movff	nrf24_send_rf_data@sz,nrf24_write_buff@bytes
  1664  001AB8  0EA0               	movlw	160
  1665  001ABA  EC9A  F00C         	call	_nrf24_write_buff
  1666  001ABE  848B               	bsf	139,2,c	;volatile
  1667  001AC0                     
  1668                           ;../lib/nrf24_lib.c: 82:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1669  001AC0  0E53               	movlw	83
  1670  001AC2                     u1157:
  1671  001AC2  2EE8               	decfsz	wreg,f,c
  1672  001AC4  D7FE               	bra	u1157
  1673  001AC6  F000               	nop	
  1674  001AC8  948B               	bcf	139,2,c	;volatile
  1675  001ACA  0012               	return		;funcret
  1676  001ACC                     __end_of_nrf24_send_rf_data:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _nrf24_write_buff *****************
  1680 ;; Defined at:
  1681 ;;		line 46 in file "../lib/nrf24_lib.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  mnemonic_add    1    wreg     unsigned char 
  1684 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  1685 ;;		 -> packetsTX(272), DEFAULT_PIPE_ADDR(6), 
  1686 ;;  bytes           1   26[COMRAM] unsigned char 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  mnemonic_add    1   27[COMRAM] unsigned char 
  1689 ;;  i               1   28[COMRAM] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1699 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;Total ram usage:        5 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 7
  1706 ;; This function calls:
  1707 ;;		_SPI1_ExchangeByte
  1708 ;; This function is called by:
  1709 ;;		_InitRadio
  1710 ;;		_nrf24_send_rf_data
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text13
  1715  001934                     __ptext13:
  1716                           	callstack 0
  1717  001934                     _nrf24_write_buff:
  1718                           	callstack 22
  1719                           
  1720                           ;incstack = 0
  1721                           ;nrf24_write_buff@mnemonic_addr stored from wreg
  1722  001934  6E1C               	movwf	nrf24_write_buff@mnemonic_addr^0,c
  1723  001936  928B               	bcf	139,1,c	;volatile
  1724  001938                     
  1725                           ;../lib/nrf24_lib.c: 49:     SPI1_ExchangeByte(0x20 | mnemonic_addr);
  1726  001938  501C               	movf	nrf24_write_buff@mnemonic_addr^0,w,c
  1727  00193A  0920               	iorlw	32
  1728  00193C  EC82  F00D         	call	_SPI1_ExchangeByte
  1729  001940                     
  1730                           ;../lib/nrf24_lib.c: 50:     for (i = 0; i < bytes; i++) {
  1731  001940  0E00               	movlw	0
  1732  001942  6E1D               	movwf	nrf24_write_buff@i^0,c
  1733  001944  EFAF  F00C         	goto	l2345
  1734  001948                     l2337:
  1735                           
  1736                           ;../lib/nrf24_lib.c: 51:         SPI1_ExchangeByte(*buffer);
  1737  001948  C019  FFD9         	movff	nrf24_write_buff@buffer,fsr2l
  1738  00194C  C01A  FFDA         	movff	nrf24_write_buff@buffer+1,fsr2h
  1739  001950  50DF               	movf	indf2,w,c
  1740  001952  EC82  F00D         	call	_SPI1_ExchangeByte
  1741  001956                     
  1742                           ;../lib/nrf24_lib.c: 52:         buffer++;
  1743  001956  4A19               	infsnz	nrf24_write_buff@buffer^0,f,c
  1744  001958  2A1A               	incf	(nrf24_write_buff@buffer+1)^0,f,c
  1745  00195A                     
  1746                           ;../lib/nrf24_lib.c: 53:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  1747  00195A  D000               	nop2		;2 cycle nop
  1748  00195C                     
  1749                           ;../lib/nrf24_lib.c: 54:     }
  1750  00195C  2A1D               	incf	nrf24_write_buff@i^0,f,c
  1751  00195E                     l2345:
  1752  00195E  501B               	movf	nrf24_write_buff@bytes^0,w,c
  1753  001960  5C1D               	subwf	nrf24_write_buff@i^0,w,c
  1754  001962  A0D8               	btfss	status,0,c
  1755  001964  EFB6  F00C         	goto	u991
  1756  001968  EFB8  F00C         	goto	u990
  1757  00196C                     u991:
  1758  00196C  EFA4  F00C         	goto	l2337
  1759  001970                     u990:
  1760  001970  828B               	bsf	139,1,c	;volatile
  1761  001972  0012               	return		;funcret
  1762  001974                     __end_of_nrf24_write_buff:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _nrf24_read_rf_data *****************
  1766 ;; Defined at:
  1767 ;;		line 93 in file "../lib/nrf24_lib.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  buffer          2   29[COMRAM] PTR unsigned char 
  1770 ;;		 -> bufferRX(32), 
  1771 ;;  sz              1   31[COMRAM] unsigned char 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1783 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;Total ram usage:        3 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 9
  1790 ;; This function calls:
  1791 ;;		_nrf24_flush_tx_rx
  1792 ;;		_nrf24_read_buff
  1793 ;;		_nrf24_write_register
  1794 ;; This function is called by:
  1795 ;;		_HandlePacketLoop
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text14
  1800  001A8A                     __ptext14:
  1801                           	callstack 0
  1802  001A8A                     _nrf24_read_rf_data:
  1803                           	callstack 20
  1804  001A8A                     
  1805                           ;../lib/nrf24_lib.c: 94:     nrf24_read_buff(0x61, buffer, sz);
  1806  001A8A  C01E  F019         	movff	nrf24_read_rf_data@buffer,nrf24_read_buff@buffer
  1807  001A8E  C01F  F01A         	movff	nrf24_read_rf_data@buffer+1,nrf24_read_buff@buffer+1
  1808  001A92  C020  F01B         	movff	nrf24_read_rf_data@sz,nrf24_read_buff@bytes
  1809  001A96  0E61               	movlw	97
  1810  001A98  EC50  F00C         	call	_nrf24_read_buff
  1811  001A9C                     
  1812                           ;../lib/nrf24_lib.c: 95:     nrf24_write_register(0x07, 0x70);
  1813  001A9C  0E70               	movlw	112
  1814  001A9E  6E19               	movwf	nrf24_write_register@value^0,c
  1815  001AA0  0E07               	movlw	7
  1816  001AA2  EC89  F00A         	call	_nrf24_write_register
  1817  001AA6                     
  1818                           ;../lib/nrf24_lib.c: 96:     nrf24_flush_tx_rx();
  1819  001AA6  EC29  F00C         	call	_nrf24_flush_tx_rx	;wreg free
  1820  001AAA  0012               	return		;funcret
  1821  001AAC                     __end_of_nrf24_read_rf_data:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _nrf24_read_buff *****************
  1825 ;; Defined at:
  1826 ;;		line 58 in file "../lib/nrf24_lib.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  mnemonic_add    1    wreg     unsigned char 
  1829 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  1830 ;;		 -> bufferRX(32), 
  1831 ;;  bytes           1   26[COMRAM] unsigned char 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  mnemonic_add    1   27[COMRAM] unsigned char 
  1834 ;;  i               1   28[COMRAM] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:        5 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 7
  1851 ;; This function calls:
  1852 ;;		_SPI1_ExchangeByte
  1853 ;; This function is called by:
  1854 ;;		_nrf24_read_rf_data
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text15
  1859  0018A0                     __ptext15:
  1860                           	callstack 0
  1861  0018A0                     _nrf24_read_buff:
  1862                           	callstack 21
  1863                           
  1864                           ;incstack = 0
  1865                           ;nrf24_read_buff@mnemonic_addr stored from wreg
  1866  0018A0  6E1C               	movwf	nrf24_read_buff@mnemonic_addr^0,c
  1867  0018A2  928B               	bcf	139,1,c	;volatile
  1868  0018A4                     
  1869                           ;../lib/nrf24_lib.c: 61:     SPI1_ExchangeByte(0x00 | mnemonic_addr);
  1870  0018A4  501C               	movf	nrf24_read_buff@mnemonic_addr^0,w,c
  1871  0018A6  EC82  F00D         	call	_SPI1_ExchangeByte
  1872  0018AA                     
  1873                           ;../lib/nrf24_lib.c: 62:     for (i = 0; i < bytes; i++) {
  1874  0018AA  0E00               	movlw	0
  1875  0018AC  6E1D               	movwf	nrf24_read_buff@i^0,c
  1876  0018AE  EF64  F00C         	goto	l2393
  1877  0018B2                     l2387:
  1878                           
  1879                           ;../lib/nrf24_lib.c: 63:         *buffer = SPI1_ExchangeByte(0xFF);
  1880  0018B2  0EFF               	movlw	255
  1881  0018B4  EC82  F00D         	call	_SPI1_ExchangeByte
  1882  0018B8  C019  FFD9         	movff	nrf24_read_buff@buffer,fsr2l
  1883  0018BC  C01A  FFDA         	movff	nrf24_read_buff@buffer+1,fsr2h
  1884  0018C0  6EDF               	movwf	indf2,c
  1885  0018C2                     
  1886                           ;../lib/nrf24_lib.c: 64:         buffer++;
  1887  0018C2  4A19               	infsnz	nrf24_read_buff@buffer^0,f,c
  1888  0018C4  2A1A               	incf	(nrf24_read_buff@buffer+1)^0,f,c
  1889  0018C6                     
  1890                           ;../lib/nrf24_lib.c: 65:     }
  1891  0018C6  2A1D               	incf	nrf24_read_buff@i^0,f,c
  1892  0018C8                     l2393:
  1893  0018C8  501B               	movf	nrf24_read_buff@bytes^0,w,c
  1894  0018CA  5C1D               	subwf	nrf24_read_buff@i^0,w,c
  1895  0018CC  A0D8               	btfss	status,0,c
  1896  0018CE  EF6B  F00C         	goto	u1011
  1897  0018D2  EF6D  F00C         	goto	u1010
  1898  0018D6                     u1011:
  1899  0018D6  EF59  F00C         	goto	l2387
  1900  0018DA                     u1010:
  1901  0018DA                     
  1902                           ;../lib/nrf24_lib.c: 66:     *buffer = (uint8_t) ((void*)0);
  1903  0018DA  C019  FFD9         	movff	nrf24_read_buff@buffer,fsr2l
  1904  0018DE  C01A  FFDA         	movff	nrf24_read_buff@buffer+1,fsr2h
  1905  0018E2  0E00               	movlw	0
  1906  0018E4  6EDF               	movwf	indf2,c
  1907  0018E6  828B               	bsf	139,1,c	;volatile
  1908  0018E8  0012               	return		;funcret
  1909  0018EA                     __end_of_nrf24_read_buff:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _nrf24_flush_tx_rx *****************
  1913 ;; Defined at:
  1914 ;;		line 99 in file "../lib/nrf24_lib.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 8
  1935 ;; This function calls:
  1936 ;;		_SPI1_ExchangeByte
  1937 ;;		_nrf24_write_register
  1938 ;; This function is called by:
  1939 ;;		_HandlePacketLoop
  1940 ;;		_nrf24_read_rf_data
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text16
  1945  001852                     __ptext16:
  1946                           	callstack 0
  1947  001852                     _nrf24_flush_tx_rx:
  1948                           	callstack 20
  1949  001852  928B               	bcf	139,1,c	;volatile
  1950  001854                     
  1951                           ;../lib/nrf24_lib.c: 101:     nrf24_write_register(0x07, 0x70);
  1952  001854  0E70               	movlw	112
  1953  001856  6E19               	movwf	nrf24_write_register@value^0,c
  1954  001858  0E07               	movlw	7
  1955  00185A  EC89  F00A         	call	_nrf24_write_register
  1956  00185E                     
  1957                           ;../lib/nrf24_lib.c: 102:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1958  00185E  0E04               	movlw	4
  1959  001860  6E1B               	movwf	??_nrf24_flush_tx_rx^0,c
  1960  001862  0E3E               	movlw	62
  1961  001864                     u1167:
  1962  001864  2EE8               	decfsz	wreg,f,c
  1963  001866  D7FE               	bra	u1167
  1964  001868  2E1B               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1965  00186A  D7FC               	bra	u1167
  1966  00186C  828B               	bsf	139,1,c	;volatile
  1967  00186E  928B               	bcf	139,1,c	;volatile
  1968  001870                     
  1969                           ;../lib/nrf24_lib.c: 106:     SPI1_ExchangeByte(0xE1);
  1970  001870  0EE1               	movlw	225
  1971  001872  EC82  F00D         	call	_SPI1_ExchangeByte
  1972  001876                     
  1973                           ;../lib/nrf24_lib.c: 107:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1974  001876  0E04               	movlw	4
  1975  001878  6E1B               	movwf	??_nrf24_flush_tx_rx^0,c
  1976  00187A  0E3E               	movlw	62
  1977  00187C                     u1177:
  1978  00187C  2EE8               	decfsz	wreg,f,c
  1979  00187E  D7FE               	bra	u1177
  1980  001880  2E1B               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1981  001882  D7FC               	bra	u1177
  1982  001884  828B               	bsf	139,1,c	;volatile
  1983  001886  928B               	bcf	139,1,c	;volatile
  1984  001888                     
  1985                           ;../lib/nrf24_lib.c: 111:     SPI1_ExchangeByte(0xE2);
  1986  001888  0EE2               	movlw	226
  1987  00188A  EC82  F00D         	call	_SPI1_ExchangeByte
  1988  00188E                     
  1989                           ;../lib/nrf24_lib.c: 112:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1990  00188E  0E04               	movlw	4
  1991  001890  6E1B               	movwf	??_nrf24_flush_tx_rx^0,c
  1992  001892  0E3E               	movlw	62
  1993  001894                     u1187:
  1994  001894  2EE8               	decfsz	wreg,f,c
  1995  001896  D7FE               	bra	u1187
  1996  001898  2E1B               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1997  00189A  D7FC               	bra	u1187
  1998  00189C  828B               	bsf	139,1,c	;volatile
  1999  00189E  0012               	return		;funcret
  2000  0018A0                     __end_of_nrf24_flush_tx_rx:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _nrf24_write_register *****************
  2004 ;; Defined at:
  2005 ;;		line 8 in file "../lib/nrf24_lib.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  mnemonic_add    1    wreg     unsigned char 
  2008 ;;  value           1   24[COMRAM] unsigned char 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  mnemonic_add    1   25[COMRAM] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        2 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 7
  2027 ;; This function calls:
  2028 ;;		_SPI1_ExchangeByte
  2029 ;; This function is called by:
  2030 ;;		_InitRadio
  2031 ;;		_HandlePacketLoop
  2032 ;;		_nrf24_read_rf_data
  2033 ;;		_nrf24_flush_tx_rx
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text17
  2038  001512                     __ptext17:
  2039                           	callstack 0
  2040  001512                     _nrf24_write_register:
  2041                           	callstack 22
  2042                           
  2043                           ;incstack = 0
  2044                           ;nrf24_write_register@mnemonic_addr stored from wreg
  2045  001512  6E1A               	movwf	nrf24_write_register@mnemonic_addr^0,c
  2046  001514  928B               	bcf	139,1,c	;volatile
  2047  001516                     
  2048                           ;../lib/nrf24_lib.c: 10:     if (mnemonic_addr < 0x20) {
  2049  001516  0E20               	movlw	32
  2050  001518  601A               	cpfslt	nrf24_write_register@mnemonic_addr^0,c
  2051  00151A  EF91  F00A         	goto	u941
  2052  00151E  EF93  F00A         	goto	u940
  2053  001522                     u941:
  2054  001522  EF9D  F00A         	goto	l2301
  2055  001526                     u940:
  2056  001526                     
  2057                           ;../lib/nrf24_lib.c: 12:         SPI1_ExchangeByte(0x20 | (mnemonic_addr & 0x1F));
  2058  001526  501A               	movf	nrf24_write_register@mnemonic_addr^0,w,c
  2059  001528  0B1F               	andlw	31
  2060  00152A  0920               	iorlw	32
  2061  00152C  EC82  F00D         	call	_SPI1_ExchangeByte
  2062  001530                     
  2063                           ;../lib/nrf24_lib.c: 13:         SPI1_ExchangeByte(value);
  2064  001530  5019               	movf	nrf24_write_register@value^0,w,c
  2065  001532  EC82  F00D         	call	_SPI1_ExchangeByte
  2066                           
  2067                           ;../lib/nrf24_lib.c: 14:     } else {
  2068  001536  EFC6  F00A         	goto	l2313
  2069  00153A                     l2301:
  2070                           
  2071                           ;../lib/nrf24_lib.c: 16:         SPI1_ExchangeByte(mnemonic_addr);
  2072  00153A  501A               	movf	nrf24_write_register@mnemonic_addr^0,w,c
  2073  00153C  EC82  F00D         	call	_SPI1_ExchangeByte
  2074  001540                     
  2075                           ;../lib/nrf24_lib.c: 17:         if ((mnemonic_addr != 0xE1) && (mnemonic_addr != 0xE2) 
      +                          && (mnemonic_addr != 0xE3) && (mnemonic_addr != 0xFF)) {
  2076  001540  0EE1               	movlw	225
  2077  001542  181A               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  2078  001544  B4D8               	btfsc	status,2,c
  2079  001546  EFA7  F00A         	goto	u951
  2080  00154A  EFA9  F00A         	goto	u950
  2081  00154E                     u951:
  2082  00154E  EFC6  F00A         	goto	l2313
  2083  001552                     u950:
  2084  001552  0EE2               	movlw	226
  2085  001554  181A               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  2086  001556  B4D8               	btfsc	status,2,c
  2087  001558  EFB0  F00A         	goto	u961
  2088  00155C  EFB2  F00A         	goto	u960
  2089  001560                     u961:
  2090  001560  EFC6  F00A         	goto	l2313
  2091  001564                     u960:
  2092  001564  0EE3               	movlw	227
  2093  001566  181A               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  2094  001568  B4D8               	btfsc	status,2,c
  2095  00156A  EFB9  F00A         	goto	u971
  2096  00156E  EFBB  F00A         	goto	u970
  2097  001572                     u971:
  2098  001572  EFC6  F00A         	goto	l2313
  2099  001576                     u970:
  2100  001576  281A               	incf	nrf24_write_register@mnemonic_addr^0,w,c
  2101  001578  B4D8               	btfsc	status,2,c
  2102  00157A  EFC1  F00A         	goto	u981
  2103  00157E  EFC3  F00A         	goto	u980
  2104  001582                     u981:
  2105  001582  EFC6  F00A         	goto	l2313
  2106  001586                     u980:
  2107  001586                     
  2108                           ;../lib/nrf24_lib.c: 18: ;../lib/nrf24_lib.c: 20:             SPI1_ExchangeByte(value);
  2109  001586  5019               	movf	nrf24_write_register@value^0,w,c
  2110  001588  EC82  F00D         	call	_SPI1_ExchangeByte
  2111  00158C                     l2313:
  2112                           
  2113                           ;../lib/nrf24_lib.c: 23:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2114  00158C  D000               	nop2		;2 cycle nop
  2115  00158E  828B               	bsf	139,1,c	;volatile
  2116  001590  0012               	return		;funcret
  2117  001592                     __end_of_nrf24_write_register:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _nrf24_read_register *****************
  2121 ;; Defined at:
  2122 ;;		line 27 in file "../lib/nrf24_lib.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  mnemonic_add    1    wreg     unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  mnemonic_add    1   24[COMRAM] unsigned char 
  2127 ;;  byte0           1   25[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      unsigned char 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        2 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 7
  2144 ;; This function calls:
  2145 ;;		_SPI1_ExchangeByte
  2146 ;; This function is called by:
  2147 ;;		_HandlePacketLoop
  2148 ;;		_nrf24_is_rf_data_available
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text18
  2153  001AEA                     __ptext18:
  2154                           	callstack 0
  2155  001AEA                     _nrf24_read_register:
  2156                           	callstack 22
  2157                           
  2158                           ;incstack = 0
  2159                           ;nrf24_read_register@mnemonic_addr stored from wreg
  2160  001AEA  6E19               	movwf	nrf24_read_register@mnemonic_addr^0,c
  2161  001AEC  928B               	bcf	139,1,c	;volatile
  2162  001AEE                     
  2163                           ;../lib/nrf24_lib.c: 30:     SPI1_ExchangeByte(0x00 | (mnemonic_addr & 0x1F));
  2164  001AEE  5019               	movf	nrf24_read_register@mnemonic_addr^0,w,c
  2165  001AF0  0B1F               	andlw	31
  2166  001AF2  EC82  F00D         	call	_SPI1_ExchangeByte
  2167  001AF6                     
  2168                           ;../lib/nrf24_lib.c: 31:     byte0 = SPI1_ExchangeByte(0xFF);
  2169  001AF6  0EFF               	movlw	255
  2170  001AF8  EC82  F00D         	call	_SPI1_ExchangeByte
  2171  001AFC  6E1A               	movwf	nrf24_read_register@byte0^0,c
  2172  001AFE  828B               	bsf	139,1,c	;volatile
  2173  001B00                     
  2174                           ;../lib/nrf24_lib.c: 33:     return byte0;
  2175  001B00  501A               	movf	nrf24_read_register@byte0^0,w,c
  2176  001B02  0012               	return		;funcret
  2177  001B04                     __end_of_nrf24_read_register:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _nrf24_read_dynamic_payload_length *****************
  2181 ;; Defined at:
  2182 ;;		line 36 in file "../lib/nrf24_lib.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  byte0           1   24[COMRAM] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      unsigned char 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;Total ram usage:        1 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 7
  2203 ;; This function calls:
  2204 ;;		_SPI1_ExchangeByte
  2205 ;; This function is called by:
  2206 ;;		_HandlePacketLoop
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text19
  2211  001ACC                     __ptext19:
  2212                           	callstack 0
  2213  001ACC                     _nrf24_read_dynamic_payload_length:
  2214                           	callstack 22
  2215  001ACC  928B               	bcf	139,1,c	;volatile
  2216  001ACE                     
  2217                           ;../lib/nrf24_lib.c: 39:     SPI1_ExchangeByte(0x60);
  2218  001ACE  0E60               	movlw	96
  2219  001AD0  EC82  F00D         	call	_SPI1_ExchangeByte
  2220                           
  2221                           ;../lib/nrf24_lib.c: 40:     byte0 = SPI1_ExchangeByte(0xFF);
  2222  001AD4  0EFF               	movlw	255
  2223  001AD6  EC82  F00D         	call	_SPI1_ExchangeByte
  2224  001ADA  6E19               	movwf	nrf24_read_dynamic_payload_length@byte0^0,c
  2225  001ADC                     
  2226                           ;../lib/nrf24_lib.c: 41:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2227  001ADC  0E53               	movlw	83
  2228  001ADE                     u1197:
  2229  001ADE  2EE8               	decfsz	wreg,f,c
  2230  001AE0  D7FE               	bra	u1197
  2231  001AE2  F000               	nop	
  2232  001AE4  828B               	bsf	139,1,c	;volatile
  2233  001AE6                     
  2234                           ;../lib/nrf24_lib.c: 43:     return byte0;
  2235  001AE6  5019               	movf	nrf24_read_dynamic_payload_length@byte0^0,w,c
  2236  001AE8  0012               	return		;funcret
  2237  001AEA                     __end_of_nrf24_read_dynamic_payload_length:
  2238                           	callstack 0
  2239                           
  2240 ;; *************** function _SPI1_ExchangeByte *****************
  2241 ;; Defined at:
  2242 ;;		line 92 in file "mcc_generated_files/spi1.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  data            1    wreg     unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  data            1   23[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      unsigned char 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;Total ram usage:        1 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 6
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_nrf24_write_register
  2267 ;;		_nrf24_read_register
  2268 ;;		_nrf24_read_dynamic_payload_length
  2269 ;;		_nrf24_write_buff
  2270 ;;		_nrf24_read_buff
  2271 ;;		_nrf24_flush_tx_rx
  2272 ;;		_SPI1_WriteBlock
  2273 ;;		_SPI1_ReadBlock
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text20
  2278  001B04                     __ptext20:
  2279                           	callstack 0
  2280  001B04                     _SPI1_ExchangeByte:
  2281                           	callstack 22
  2282                           
  2283                           ;incstack = 0
  2284                           ;SPI1_ExchangeByte@data stored from wreg
  2285  001B04  6E18               	movwf	SPI1_ExchangeByte@data^0,c
  2286  001B06                     
  2287                           ;mcc_generated_files/spi1.c: 92: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 93: {;mcc_generated_files/spi1.c: 94:     SSP1BUF = data;
  2288  001B06  C018  FFC9         	movff	SPI1_ExchangeByte@data,4041	;volatile
  2289  001B0A                     l61:
  2290  001B0A  A69E               	btfss	158,3,c	;volatile
  2291  001B0C  EF8A  F00D         	goto	u891
  2292  001B10  EF8C  F00D         	goto	u890
  2293  001B14                     u891:
  2294  001B14  EF85  F00D         	goto	l61
  2295  001B18                     u890:
  2296  001B18                     
  2297                           ;mcc_generated_files/spi1.c: 96:     PIR1bits.SSP1IF = 0;
  2298  001B18  969E               	bcf	158,3,c	;volatile
  2299                           
  2300                           ;mcc_generated_files/spi1.c: 97:     return SSP1BUF;
  2301  001B1A  50C9               	movf	201,w,c	;volatile
  2302  001B1C  0012               	return		;funcret
  2303  001B1E                     __end_of_SPI1_ExchangeByte:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _VerifyBoardAddress *****************
  2307 ;; Defined at:
  2308 ;;		line 142 in file "handler.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  bufferRX        2   23[COMRAM] PTR unsigned char 
  2311 ;;		 -> bufferRX(32), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  i               2   29[COMRAM] int 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      _Bool 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;Total ram usage:        8 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 6
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_HandlePacketLoop
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text21
  2338  001592                     __ptext21:
  2339                           	callstack 0
  2340  001592                     _VerifyBoardAddress:
  2341                           	callstack 23
  2342  001592                     
  2343                           ;handler.c: 143:     for (int i = 0; i < 3; i++) {
  2344  001592  0E00               	movlw	0
  2345  001594  6E1F               	movwf	(VerifyBoardAddress@i+1)^0,c
  2346  001596  0E00               	movlw	0
  2347  001598  6E1E               	movwf	VerifyBoardAddress@i^0,c
  2348  00159A                     l2439:
  2349                           
  2350                           ;handler.c: 144:         if (config.Address[i] != bufferRX[i + 1]) {
  2351  00159A  501E               	movf	VerifyBoardAddress@i^0,w,c
  2352  00159C  2418               	addwf	VerifyBoardAddress@bufferRX^0,w,c
  2353  00159E  6E1A               	movwf	??_VerifyBoardAddress^0,c
  2354  0015A0  501F               	movf	(VerifyBoardAddress@i+1)^0,w,c
  2355  0015A2  2019               	addwfc	(VerifyBoardAddress@bufferRX+1)^0,w,c
  2356  0015A4  6E1B               	movwf	(??_VerifyBoardAddress+1)^0,c
  2357  0015A6  0E01               	movlw	1
  2358  0015A8  241A               	addwf	??_VerifyBoardAddress^0,w,c
  2359  0015AA  6ED9               	movwf	fsr2l,c
  2360  0015AC  0E00               	movlw	0
  2361  0015AE  201B               	addwfc	(??_VerifyBoardAddress+1)^0,w,c
  2362  0015B0  6EDA               	movwf	fsr2h,c
  2363  0015B2  0E2E               	movlw	low (_config+1)
  2364  0015B4  241E               	addwf	VerifyBoardAddress@i^0,w,c
  2365  0015B6  6EE1               	movwf	fsr1l,c
  2366  0015B8  0E00               	movlw	high (_config+1)
  2367  0015BA  201F               	addwfc	(VerifyBoardAddress@i+1)^0,w,c
  2368  0015BC  6EE2               	movwf	fsr1h,c
  2369  0015BE  50DE               	movf	postinc2,w,c
  2370  0015C0  18E6               	xorwf	postinc1,w,c
  2371  0015C2  B4D8               	btfsc	status,2,c
  2372  0015C4  EFE6  F00A         	goto	u1021
  2373  0015C8  EFE8  F00A         	goto	u1020
  2374  0015CC                     u1021:
  2375  0015CC  EFEB  F00A         	goto	l2445
  2376  0015D0                     u1020:
  2377  0015D0                     
  2378                           ;handler.c: 145:             return 0;
  2379  0015D0  0E00               	movlw	0
  2380  0015D2  EFFC  F00A         	goto	l305
  2381  0015D6                     l2445:
  2382                           
  2383                           ;handler.c: 147:     }
  2384  0015D6  4A1E               	infsnz	VerifyBoardAddress@i^0,f,c
  2385  0015D8  2A1F               	incf	(VerifyBoardAddress@i+1)^0,f,c
  2386  0015DA  BE1F               	btfsc	(VerifyBoardAddress@i+1)^0,7,c
  2387  0015DC  EFF9  F00A         	goto	u1031
  2388  0015E0  501F               	movf	(VerifyBoardAddress@i+1)^0,w,c
  2389  0015E2  E109               	bnz	u1030
  2390  0015E4  0E03               	movlw	3
  2391  0015E6  5C1E               	subwf	VerifyBoardAddress@i^0,w,c
  2392  0015E8  A0D8               	btfss	status,0,c
  2393  0015EA  EFF9  F00A         	goto	u1031
  2394  0015EE  EFFB  F00A         	goto	u1030
  2395  0015F2                     u1031:
  2396  0015F2  EFCD  F00A         	goto	l2439
  2397  0015F6                     u1030:
  2398  0015F6                     
  2399                           ;handler.c: 148:     return 1;
  2400  0015F6  0E01               	movlw	1
  2401  0015F8                     l305:
  2402  0015F8  0012               	return		;funcret
  2403  0015FA                     __end_of_VerifyBoardAddress:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _ProcessAckPayload *****************
  2407 ;; Defined at:
  2408 ;;		line 151 in file "handler.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  buffer          2    5[BANK0 ] PTR unsigned char 
  2411 ;;		 -> bufferRX(32), 
  2412 ;;  sz              1    7[BANK0 ] unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  data           32   10[BANK0 ] unsigned char [32]
  2415 ;;  pktType         1   43[BANK0 ] unsigned char 
  2416 ;;  actionID        1   42[BANK0 ] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2426 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;Total ram usage:       39 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 10
  2433 ;; This function calls:
  2434 ;;		_ProcessActionRequest
  2435 ;;		_SendError
  2436 ;;		_SuperMemCpy
  2437 ;; This function is called by:
  2438 ;;		_HandlePacketLoop
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text22
  2443  0013FC                     __ptext22:
  2444                           	callstack 0
  2445  0013FC                     _ProcessAckPayload:
  2446                           	callstack 19
  2447  0013FC                     
  2448                           ;handler.c: 152:     uint8_t data[32];;handler.c: 153:     uint8_t actionID;;handler.c: 
      +                          155:     uint8_t pktType = buffer[0];
  2449  0013FC  C0A5  FFD9         	movff	ProcessAckPayload@buffer,fsr2l
  2450  001400  C0A6  FFDA         	movff	ProcessAckPayload@buffer+1,fsr2h
  2451  001404  50DF               	movf	indf2,w,c
  2452  001406  0100               	movlb	0	; () banked
  2453  001408  6FCB               	movwf	ProcessAckPayload@pktType& (0+255),b
  2454                           
  2455                           ;handler.c: 156:     switch (pktType) {
  2456  00140A  EF2F  F00A         	goto	l2463
  2457  00140E                     l2455:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;handler.c: 158:             actionID = buffer[4];
  2461  00140E  EE20 F004          	lfsr	2,4
  2462  001412  51A5               	movf	ProcessAckPayload@buffer& (0+255),w,b
  2463  001414  26D9               	addwf	fsr2l,f,c
  2464  001416  51A6               	movf	(ProcessAckPayload@buffer+1)& (0+255),w,b
  2465  001418  22DA               	addwfc	fsr2h,f,c
  2466  00141A  50DF               	movf	indf2,w,c
  2467  00141C  6FCA               	movwf	ProcessAckPayload@actionID& (0+255),b
  2468  00141E                     
  2469                           ; BSR set to: 0
  2470                           ;handler.c: 159:             SuperMemCpy(data,0,buffer,5,sz-5);
  2471  00141E  0EAA               	movlw	low ProcessAckPayload@data
  2472  001420  6E18               	movwf	SuperMemCpy@dest^0,c
  2473  001422  0E00               	movlw	high ProcessAckPayload@data
  2474  001424  6E19               	movwf	(SuperMemCpy@dest+1)^0,c
  2475  001426  0E00               	movlw	0
  2476  001428  6E1A               	movwf	SuperMemCpy@destStart^0,c
  2477  00142A  C0A5  F01B         	movff	ProcessAckPayload@buffer,SuperMemCpy@src
  2478  00142E  C0A6  F01C         	movff	ProcessAckPayload@buffer+1,SuperMemCpy@src+1
  2479  001432  0E05               	movlw	5
  2480  001434  6E1D               	movwf	SuperMemCpy@srcStart^0,c
  2481  001436  51A7               	movf	ProcessAckPayload@sz& (0+255),w,b
  2482  001438  0FFB               	addlw	251
  2483  00143A  6E1E               	movwf	SuperMemCpy@sz^0,c
  2484  00143C  EC87  F00B         	call	_SuperMemCpy	;wreg free
  2485  001440                     
  2486                           ;handler.c: 160:             ProcessActionRequest(actionID, data);
  2487  001440  0EAA               	movlw	low ProcessAckPayload@data
  2488  001442  0100               	movlb	0	; () banked
  2489  001444  6FA0               	movwf	ProcessActionRequest@data& (0+255),b
  2490  001446  0E00               	movlw	high ProcessAckPayload@data
  2491  001448  6FA1               	movwf	(ProcessActionRequest@data+1)& (0+255),b
  2492  00144A  51CA               	movf	ProcessAckPayload@actionID& (0+255),w,b
  2493  00144C  EC30  F00B         	call	_ProcessActionRequest
  2494                           
  2495                           ;handler.c: 161:             break;
  2496  001450  EF44  F00A         	goto	l313
  2497  001454                     l2461:
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;handler.c: 166:             SendError(0x04);
  2501  001454  0E04               	movlw	4
  2502  001456  ECFD  F00A         	call	_SendError
  2503                           
  2504                           ;handler.c: 167:     }
  2505  00145A  EF44  F00A         	goto	l313
  2506  00145E                     l2463:
  2507                           
  2508                           ; BSR set to: 0
  2509  00145E  51CB               	movf	ProcessAckPayload@pktType& (0+255),w,b
  2510  001460  6FA8               	movwf	??_ProcessAckPayload& (0+255),b
  2511  001462  6BA9               	clrf	(??_ProcessAckPayload+1)& (0+255),b
  2512                           
  2513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2514                           ; Switch size 1, requested type "simple"
  2515                           ; Number of cases is 1, Range of values is 0 to 0
  2516                           ; switch strategies available:
  2517                           ; Name         Instructions Cycles
  2518                           ; simple_byte            4     3 (average)
  2519                           ;	Chosen strategy is simple_byte
  2520  001464  51A9               	movf	(??_ProcessAckPayload+1)& (0+255),w,b
  2521  001466  0A00               	xorlw	0	; case 0
  2522  001468  B4D8               	btfsc	status,2,c
  2523  00146A  EF39  F00A         	goto	l2643
  2524  00146E  EF2A  F00A         	goto	l2461
  2525  001472                     l2643:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ; Switch size 1, requested type "simple"
  2529                           ; Number of cases is 2, Range of values is 3 to 16
  2530                           ; switch strategies available:
  2531                           ; Name         Instructions Cycles
  2532                           ; simple_byte            7     4 (average)
  2533                           ;	Chosen strategy is simple_byte
  2534  001472  51A8               	movf	??_ProcessAckPayload& (0+255),w,b
  2535  001474  0A03               	xorlw	3	; case 3
  2536  001476  B4D8               	btfsc	status,2,c
  2537  001478  EF44  F00A         	goto	l313
  2538  00147C  0A13               	xorlw	19	; case 16
  2539  00147E  B4D8               	btfsc	status,2,c
  2540  001480  EF07  F00A         	goto	l2455
  2541  001484  EF2A  F00A         	goto	l2461
  2542  001488                     l313:
  2543  001488  0012               	return		;funcret
  2544  00148A                     __end_of_ProcessAckPayload:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _ProcessActionRequest *****************
  2548 ;; Defined at:
  2549 ;;		line 171 in file "handler.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  actionID        1    wreg     unsigned char 
  2552 ;;  data            2    0[BANK0 ] PTR unsigned char 
  2553 ;;		 -> ProcessAckPayload@data(32), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  actionID        1    4[BANK0 ] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;Total ram usage:        5 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 9
  2572 ;; This function calls:
  2573 ;;		_SendError
  2574 ;; This function is called by:
  2575 ;;		_ProcessAckPayload
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text23
  2580  001660                     __ptext23:
  2581                           	callstack 0
  2582  001660                     _ProcessActionRequest:
  2583                           	callstack 19
  2584                           
  2585                           ;incstack = 0
  2586                           ;ProcessActionRequest@actionID stored from wreg
  2587  001660  0100               	movlb	0	; () banked
  2588  001662  6FA4               	movwf	ProcessActionRequest@actionID& (0+255),b
  2589  001664                     
  2590                           ;handler.c: 173:     switch (actionID) {
  2591  001664  EF49  F00B         	goto	l2375
  2592  001668                     l318:
  2593                           
  2594                           ; BSR set to: 0
  2595  001668  9289               	bcf	137,1,c	;volatile
  2596  00166A                     
  2597                           ; BSR set to: 0
  2598                           ;handler.c: 176:             if (data[0]) {
  2599  00166A  C0A0  FFD9         	movff	ProcessActionRequest@data,fsr2l
  2600  00166E  C0A1  FFDA         	movff	ProcessActionRequest@data+1,fsr2h
  2601  001672  50DF               	movf	indf2,w,c
  2602  001674  B4D8               	btfsc	status,2,c
  2603  001676  EF3F  F00B         	goto	u1001
  2604  00167A  EF41  F00B         	goto	u1000
  2605  00167E                     u1001:
  2606  00167E  EF5B  F00B         	goto	l325
  2607  001682                     u1000:
  2608  001682                     
  2609                           ; BSR set to: 0
  2610  001682  8289               	bsf	137,1,c	;volatile
  2611  001684  EF5B  F00B         	goto	l325
  2612  001688                     l2373:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;handler.c: 181:             SendError(0x04);
  2616  001688  0E04               	movlw	4
  2617  00168A  ECFD  F00A         	call	_SendError
  2618                           
  2619                           ;handler.c: 182:     }
  2620  00168E  EF5B  F00B         	goto	l325
  2621  001692                     l2375:
  2622  001692  0100               	movlb	0	; () banked
  2623  001694  51A4               	movf	ProcessActionRequest@actionID& (0+255),w,b
  2624  001696  6FA2               	movwf	??_ProcessActionRequest& (0+255),b
  2625  001698  6BA3               	clrf	(??_ProcessActionRequest+1)& (0+255),b
  2626                           
  2627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2628                           ; Switch size 1, requested type "simple"
  2629                           ; Number of cases is 1, Range of values is 0 to 0
  2630                           ; switch strategies available:
  2631                           ; Name         Instructions Cycles
  2632                           ; simple_byte            4     3 (average)
  2633                           ;	Chosen strategy is simple_byte
  2634  00169A  51A3               	movf	(??_ProcessActionRequest+1)& (0+255),w,b
  2635  00169C  0A00               	xorlw	0	; case 0
  2636  00169E  B4D8               	btfsc	status,2,c
  2637  0016A0  EF54  F00B         	goto	l2645
  2638  0016A4  EF44  F00B         	goto	l2373
  2639  0016A8                     l2645:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ; Switch size 1, requested type "simple"
  2643                           ; Number of cases is 1, Range of values is 19 to 19
  2644                           ; switch strategies available:
  2645                           ; Name         Instructions Cycles
  2646                           ; simple_byte            4     3 (average)
  2647                           ;	Chosen strategy is simple_byte
  2648  0016A8  51A2               	movf	??_ProcessActionRequest& (0+255),w,b
  2649  0016AA  0A13               	xorlw	19	; case 19
  2650  0016AC  B4D8               	btfsc	status,2,c
  2651  0016AE  EF34  F00B         	goto	l318
  2652  0016B2  EF44  F00B         	goto	l2373
  2653  0016B6                     l325:
  2654  0016B6  0012               	return		;funcret
  2655  0016B8                     __end_of_ProcessActionRequest:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _SendError *****************
  2659 ;; Defined at:
  2660 ;;		line 185 in file "handler.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  errorCode       1    wreg     unsigned char 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  errorCode       1   38[COMRAM] unsigned char 
  2665 ;;  i               1   39[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      unsigned char 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;Total ram usage:        2 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 8
  2682 ;; This function calls:
  2683 ;;		_QueueTXPacket
  2684 ;;		_SuperMemCpy
  2685 ;; This function is called by:
  2686 ;;		_ProcessAckPayload
  2687 ;;		_ProcessActionRequest
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text24
  2692  0015FA                     __ptext24:
  2693                           	callstack 0
  2694  0015FA                     _SendError:
  2695                           	callstack 20
  2696                           
  2697                           ;incstack = 0
  2698                           ;SendError@errorCode stored from wreg
  2699  0015FA  6E27               	movwf	SendError@errorCode^0,c
  2700  0015FC                     
  2701                           ;handler.c: 186:     uint8_t i = 0;
  2702  0015FC  0E00               	movlw	0
  2703  0015FE  6E28               	movwf	SendError@i^0,c
  2704  001600                     
  2705                           ;handler.c: 187:     bufferTX[i] = 0x01;
  2706  001600  0E01               	movlw	1
  2707  001602  0100               	movlb	0	; () banked
  2708  001604  6F80               	movwf	_bufferTX& (0+255),b
  2709  001606                     
  2710                           ; BSR set to: 0
  2711                           ;handler.c: 188:     SuperMemCpy(bufferTX,1,config.Address,0,3);
  2712  001606  0E80               	movlw	low _bufferTX
  2713  001608  6E18               	movwf	SuperMemCpy@dest^0,c
  2714  00160A  0E00               	movlw	high _bufferTX
  2715  00160C  6E19               	movwf	(SuperMemCpy@dest+1)^0,c
  2716  00160E  0E01               	movlw	1
  2717  001610  6E1A               	movwf	SuperMemCpy@destStart^0,c
  2718  001612  0E2E               	movlw	low (_config+1)
  2719  001614  6E1B               	movwf	SuperMemCpy@src^0,c
  2720  001616  0E00               	movlw	high (_config+1)
  2721  001618  6E1C               	movwf	(SuperMemCpy@src+1)^0,c
  2722  00161A  0E00               	movlw	0
  2723  00161C  6E1D               	movwf	SuperMemCpy@srcStart^0,c
  2724  00161E  0E03               	movlw	3
  2725  001620  6E1E               	movwf	SuperMemCpy@sz^0,c
  2726  001622  EC87  F00B         	call	_SuperMemCpy	;wreg free
  2727  001626                     
  2728                           ;handler.c: 189:     i+=3;
  2729  001626  0E03               	movlw	3
  2730  001628  2628               	addwf	SendError@i^0,f,c
  2731  00162A                     
  2732                           ;handler.c: 190:     bufferTX[++i] = 0;
  2733  00162A  2A28               	incf	SendError@i^0,f,c
  2734  00162C  0E80               	movlw	low _bufferTX
  2735  00162E  2428               	addwf	SendError@i^0,w,c
  2736  001630  6ED9               	movwf	fsr2l,c
  2737  001632  6ADA               	clrf	fsr2h,c
  2738  001634  0E00               	movlw	high _bufferTX
  2739  001636  22DA               	addwfc	fsr2h,f,c
  2740  001638  0E00               	movlw	0
  2741  00163A  6EDF               	movwf	indf2,c
  2742  00163C                     
  2743                           ;handler.c: 191:     bufferTX[++i] = errorCode;
  2744  00163C  2A28               	incf	SendError@i^0,f,c
  2745  00163E  0E80               	movlw	low _bufferTX
  2746  001640  2428               	addwf	SendError@i^0,w,c
  2747  001642  6ED9               	movwf	fsr2l,c
  2748  001644  6ADA               	clrf	fsr2h,c
  2749  001646  0E00               	movlw	high _bufferTX
  2750  001648  22DA               	addwfc	fsr2h,f,c
  2751  00164A  C027  FFDF         	movff	SendError@errorCode,indf2
  2752  00164E                     
  2753                           ;handler.c: 192:     return QueueTXPacket(bufferTX, (i+1));;	Return value of _SendError 
      +                          is never used
  2754  00164E  0E80               	movlw	low _bufferTX
  2755  001650  6E23               	movwf	QueueTXPacket@buffer^0,c
  2756  001652  0E00               	movlw	high _bufferTX
  2757  001654  6E24               	movwf	(QueueTXPacket@buffer+1)^0,c
  2758  001656  2828               	incf	SendError@i^0,w,c
  2759  001658  6E25               	movwf	QueueTXPacket@sz^0,c
  2760  00165A  EC5E  F009         	call	_QueueTXPacket	;wreg free
  2761  00165E  0012               	return		;funcret
  2762  001660                     __end_of_SendError:
  2763                           	callstack 0
  2764                           
  2765 ;; *************** function _SuperMemCpy *****************
  2766 ;; Defined at:
  2767 ;;		line 202 in file "handler.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  dest            2   23[COMRAM] PTR unsigned char 
  2770 ;;		 -> bufferTX(32), ProcessAckPayload@data(32), 
  2771 ;;  destStart       1   25[COMRAM] unsigned char 
  2772 ;;  src             2   26[COMRAM] PTR unsigned char 
  2773 ;;		 -> bufferRX(32), config(17), 
  2774 ;;  srcStart        1   28[COMRAM] unsigned char 
  2775 ;;  sz              1   29[COMRAM] unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  i               1   34[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2787 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;Total ram usage:       12 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 6
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_ProcessAckPayload
  2798 ;;		_SendError
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text25
  2803  00170E                     __ptext25:
  2804                           	callstack 0
  2805  00170E                     _SuperMemCpy:
  2806                           	callstack 22
  2807  00170E                     
  2808                           ;handler.c: 203:     for(uint8_t i=0; i< sz; i++) {
  2809  00170E  0E00               	movlw	0
  2810  001710  6E23               	movwf	SuperMemCpy@i^0,c
  2811  001712  EFA6  F00B         	goto	l2293
  2812  001716                     l2289:
  2813                           
  2814                           ;handler.c: 204:         dest[i+destStart] = src[i+srcStart];
  2815  001716  5023               	movf	SuperMemCpy@i^0,w,c
  2816  001718  241B               	addwf	SuperMemCpy@src^0,w,c
  2817  00171A  6E1F               	movwf	??_SuperMemCpy^0,c
  2818  00171C  0E00               	movlw	0
  2819  00171E  201C               	addwfc	(SuperMemCpy@src+1)^0,w,c
  2820  001720  6E20               	movwf	(??_SuperMemCpy+1)^0,c
  2821  001722  501D               	movf	SuperMemCpy@srcStart^0,w,c
  2822  001724  241F               	addwf	??_SuperMemCpy^0,w,c
  2823  001726  6ED9               	movwf	fsr2l,c
  2824  001728  0E00               	movlw	0
  2825  00172A  2020               	addwfc	(??_SuperMemCpy+1)^0,w,c
  2826  00172C  6EDA               	movwf	fsr2h,c
  2827  00172E  5023               	movf	SuperMemCpy@i^0,w,c
  2828  001730  2418               	addwf	SuperMemCpy@dest^0,w,c
  2829  001732  6E21               	movwf	(??_SuperMemCpy+2)^0,c
  2830  001734  0E00               	movlw	0
  2831  001736  2019               	addwfc	(SuperMemCpy@dest+1)^0,w,c
  2832  001738  6E22               	movwf	(??_SuperMemCpy+3)^0,c
  2833  00173A  501A               	movf	SuperMemCpy@destStart^0,w,c
  2834  00173C  2421               	addwf	(??_SuperMemCpy+2)^0,w,c
  2835  00173E  6EE1               	movwf	fsr1l,c
  2836  001740  0E00               	movlw	0
  2837  001742  2022               	addwfc	(??_SuperMemCpy+3)^0,w,c
  2838  001744  6EE2               	movwf	fsr1h,c
  2839  001746  CFDF FFE7          	movff	indf2,indf1
  2840  00174A                     
  2841                           ;handler.c: 205:     }
  2842  00174A  2A23               	incf	SuperMemCpy@i^0,f,c
  2843  00174C                     l2293:
  2844  00174C  501E               	movf	SuperMemCpy@sz^0,w,c
  2845  00174E  5C23               	subwf	SuperMemCpy@i^0,w,c
  2846  001750  A0D8               	btfss	status,0,c
  2847  001752  EFAD  F00B         	goto	u931
  2848  001756  EFAF  F00B         	goto	u930
  2849  00175A                     u931:
  2850  00175A  EF8B  F00B         	goto	l2289
  2851  00175E                     u930:
  2852  00175E  0012               	return		;funcret
  2853  001760                     __end_of_SuperMemCpy:
  2854                           	callstack 0
  2855                           
  2856 ;; *************** function _QueueTXPacket *****************
  2857 ;; Defined at:
  2858 ;;		line 65 in file "handler.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  buffer          2   34[COMRAM] PTR unsigned char 
  2861 ;;		 -> bufferTX(32), 
  2862 ;;  sz              1   36[COMRAM] unsigned char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  i               1   37[COMRAM] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      unsigned char 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2874 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;Total ram usage:        4 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; Hardware stack levels required when called: 7
  2881 ;; This function calls:
  2882 ;;		_memcpy
  2883 ;; This function is called by:
  2884 ;;		_SendError
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text26
  2889  0012BC                     __ptext26:
  2890                           	callstack 0
  2891  0012BC                     _QueueTXPacket:
  2892                           	callstack 20
  2893  0012BC                     
  2894                           ;handler.c: 66:     uint8_t i;;handler.c: 67:     for (i = 0; i < 8; i++) {
  2895  0012BC  0E00               	movlw	0
  2896  0012BE  6E26               	movwf	QueueTXPacket@i^0,c
  2897  0012C0                     l2265:
  2898                           
  2899                           ;handler.c: 68:         if (packetsTX[i].free) {
  2900  0012C0  5026               	movf	QueueTXPacket@i^0,w,c
  2901  0012C2  0D22               	mullw	34
  2902  0012C4  0EEF               	movlw	low (_packetsTX+32)
  2903  0012C6  24F3               	addwf	243,w,c
  2904  0012C8  6ED9               	movwf	fsr2l,c
  2905  0012CA  0E00               	movlw	high (_packetsTX+32)
  2906  0012CC  20F4               	addwfc	prodh,w,c
  2907  0012CE  6EDA               	movwf	fsr2h,c
  2908  0012D0  50DF               	movf	indf2,w,c
  2909  0012D2  B4D8               	btfsc	status,2,c
  2910  0012D4  EF6E  F009         	goto	u901
  2911  0012D8  EF70  F009         	goto	u900
  2912  0012DC                     u901:
  2913  0012DC  EF72  F009         	goto	l2269
  2914  0012E0                     u900:
  2915  0012E0  EF7B  F009         	goto	l2273
  2916  0012E4                     l2269:
  2917                           
  2918                           ;handler.c: 71:     }
  2919  0012E4  2A26               	incf	QueueTXPacket@i^0,f,c
  2920  0012E6  0E07               	movlw	7
  2921  0012E8  6426               	cpfsgt	QueueTXPacket@i^0,c
  2922  0012EA  EF79  F009         	goto	u911
  2923  0012EE  EF7B  F009         	goto	u910
  2924  0012F2                     u911:
  2925  0012F2  EF60  F009         	goto	l2265
  2926  0012F6                     u910:
  2927  0012F6                     l2273:
  2928                           
  2929                           ;handler.c: 72:     if (i == 8) {
  2930  0012F6  0E08               	movlw	8
  2931  0012F8  1826               	xorwf	QueueTXPacket@i^0,w,c
  2932  0012FA  A4D8               	btfss	status,2,c
  2933  0012FC  EF82  F009         	goto	u921
  2934  001300  EF84  F009         	goto	u920
  2935  001304                     u921:
  2936  001304  EF87  F009         	goto	l2279
  2937  001308                     u920:
  2938  001308                     
  2939                           ;handler.c: 73:         return 0;
  2940  001308  0E00               	movlw	0
  2941  00130A  EFAD  F009         	goto	l279
  2942  00130E                     l2279:
  2943                           
  2944                           ;handler.c: 75:     packetsTX[i].free = 0;
  2945  00130E  5026               	movf	QueueTXPacket@i^0,w,c
  2946  001310  0D22               	mullw	34
  2947  001312  0EEF               	movlw	low (_packetsTX+32)
  2948  001314  24F3               	addwf	243,w,c
  2949  001316  6ED9               	movwf	fsr2l,c
  2950  001318  0E00               	movlw	high (_packetsTX+32)
  2951  00131A  20F4               	addwfc	prodh,w,c
  2952  00131C  6EDA               	movwf	fsr2h,c
  2953  00131E  0E00               	movlw	0
  2954  001320  6EDF               	movwf	indf2,c
  2955                           
  2956                           ;handler.c: 76:     packetsTX[i].size = sz;
  2957  001322  5026               	movf	QueueTXPacket@i^0,w,c
  2958  001324  0D22               	mullw	34
  2959  001326  0EF0               	movlw	low (_packetsTX+33)
  2960  001328  24F3               	addwf	243,w,c
  2961  00132A  6ED9               	movwf	fsr2l,c
  2962  00132C  0E00               	movlw	high (_packetsTX+33)
  2963  00132E  20F4               	addwfc	prodh,w,c
  2964  001330  6EDA               	movwf	fsr2h,c
  2965  001332  C025  FFDF         	movff	QueueTXPacket@sz,indf2
  2966  001336                     
  2967                           ;handler.c: 77:     memcpy(packetsTX[i].packet, buffer,sz);
  2968  001336  5026               	movf	QueueTXPacket@i^0,w,c
  2969  001338  0D22               	mullw	34
  2970  00133A  0ECF               	movlw	low _packetsTX
  2971  00133C  24F3               	addwf	243,w,c
  2972  00133E  6E18               	movwf	memcpy@d1^0,c
  2973  001340  0E00               	movlw	high _packetsTX
  2974  001342  20F4               	addwfc	prodh,w,c
  2975  001344  6E19               	movwf	(memcpy@d1+1)^0,c
  2976  001346  C023  F01A         	movff	QueueTXPacket@buffer,memcpy@s1
  2977  00134A  C024  F01B         	movff	QueueTXPacket@buffer+1,memcpy@s1+1
  2978  00134E  C025  F01C         	movff	QueueTXPacket@sz,memcpy@n
  2979  001352  6A1D               	clrf	(memcpy@n+1)^0,c
  2980  001354  ECD9  F00B         	call	_memcpy	;wreg free
  2981  001358                     
  2982                           ;handler.c: 78:     return 1;
  2983  001358  0E01               	movlw	1
  2984  00135A                     l279:
  2985  00135A  0012               	return		;funcret
  2986  00135C                     __end_of_QueueTXPacket:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _memcpy *****************
  2990 ;; Defined at:
  2991 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  d1              2   23[COMRAM] PTR void 
  2994 ;;		 -> packetsTX(272), 
  2995 ;;  s1              2   25[COMRAM] PTR const void 
  2996 ;;		 -> bufferTX(32), 
  2997 ;;  n               2   27[COMRAM] unsigned int 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  s               2   32[COMRAM] PTR const unsigned char 
  3000 ;;		 -> bufferTX(32), 
  3001 ;;  d               2   30[COMRAM] PTR unsigned char 
  3002 ;;		 -> packetsTX(272), 
  3003 ;;  tmp             1   29[COMRAM] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  2   23[COMRAM] PTR void 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:       11 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 6
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_QueueTXPacket
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text27
  3028  0017B2                     __ptext27:
  3029                           	callstack 0
  3030  0017B2                     _memcpy:
  3031                           	callstack 20
  3032  0017B2  C01A  F021         	movff	memcpy@s1,memcpy@s
  3033  0017B6  C01B  F022         	movff	memcpy@s1+1,memcpy@s+1
  3034  0017BA  C018  F01F         	movff	memcpy@d1,memcpy@d
  3035  0017BE  C019  F020         	movff	memcpy@d1+1,memcpy@d+1
  3036  0017C2  EFF3  F00B         	goto	l2255
  3037  0017C6                     l2247:
  3038  0017C6  C021  FFD9         	movff	memcpy@s,fsr2l
  3039  0017CA  C022  FFDA         	movff	memcpy@s+1,fsr2h
  3040  0017CE  50DF               	movf	indf2,w,c
  3041  0017D0  6E1E               	movwf	memcpy@tmp^0,c
  3042  0017D2  4A21               	infsnz	memcpy@s^0,f,c
  3043  0017D4  2A22               	incf	(memcpy@s+1)^0,f,c
  3044  0017D6  C01F  FFD9         	movff	memcpy@d,fsr2l
  3045  0017DA  C020  FFDA         	movff	memcpy@d+1,fsr2h
  3046  0017DE  C01E  FFDF         	movff	memcpy@tmp,indf2
  3047  0017E2  4A1F               	infsnz	memcpy@d^0,f,c
  3048  0017E4  2A20               	incf	(memcpy@d+1)^0,f,c
  3049  0017E6                     l2255:
  3050  0017E6  061C               	decf	memcpy@n^0,f,c
  3051  0017E8  A0D8               	btfss	status,0,c
  3052  0017EA  061D               	decf	(memcpy@n+1)^0,f,c
  3053  0017EC  281C               	incf	memcpy@n^0,w,c
  3054  0017EE  E106               	bnz	u881
  3055  0017F0  281D               	incf	(memcpy@n+1)^0,w,c
  3056  0017F2  A4D8               	btfss	status,2,c
  3057  0017F4  EFFE  F00B         	goto	u881
  3058  0017F8  EF00  F00C         	goto	u880
  3059  0017FC                     u881:
  3060  0017FC  EFE3  F00B         	goto	l2247
  3061  001800                     u880:
  3062  001800  0012               	return		;funcret
  3063  001802                     __end_of_memcpy:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _INTERRUPT_InterruptManager *****************
  3067 ;; Defined at:
  3068 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        8 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 5
  3089 ;; This function calls:
  3090 ;;		_TMR1_ISR
  3091 ;; This function is called by:
  3092 ;;		Interrupt level 2
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	intcode
  3097  000008                     __pintcode:
  3098                           	callstack 0
  3099  000008                     _INTERRUPT_InterruptManager:
  3100                           	callstack 19
  3101                           
  3102                           ;incstack = 0
  3103  000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3104  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
  3105  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3106  000012  CFE1 F012          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  3107  000016  CFE2 F013          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  3108  00001A  CFD9 F014          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  3109  00001E  CFDA F015          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  3110  000022  CFF3 F016          	movff	prodl,??_INTERRUPT_InterruptManager+6
  3111  000026  CFF4 F017          	movff	prodh,??_INTERRUPT_InterruptManager+7
  3112  00002A                     
  3113                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  3114  00002A  ACF2               	btfss	242,6,c	;volatile
  3115  00002C  EF1A  F000         	goto	i2u85_41
  3116  000030  EF1C  F000         	goto	i2u85_40
  3117  000034                     i2u85_41:
  3118  000034  EF2C  F000         	goto	i2l197
  3119  000038                     i2u85_40:
  3120  000038                     
  3121                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3122  000038  A09D               	btfss	157,0,c	;volatile
  3123  00003A  EF21  F000         	goto	i2u86_41
  3124  00003E  EF23  F000         	goto	i2u86_40
  3125  000042                     i2u86_41:
  3126  000042  EF2C  F000         	goto	i2l197
  3127  000046                     i2u86_40:
  3128  000046  A09E               	btfss	158,0,c	;volatile
  3129  000048  EF28  F000         	goto	i2u87_41
  3130  00004C  EF2A  F000         	goto	i2u87_40
  3131  000050                     i2u87_41:
  3132  000050  EF2C  F000         	goto	i2l197
  3133  000054                     i2u87_40:
  3134  000054                     
  3135                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  3136  000054  ECBA  F00C         	call	_TMR1_ISR	;wreg free
  3137  000058                     i2l197:
  3138  000058  C017  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  3139  00005C  C016  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  3140  000060  C015  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  3141  000064  C014  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  3142  000068  C013  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  3143  00006C  C012  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  3144  000070  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3145  000074  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3146  000078  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3147  00007A  0011               	retfie		f
  3148  00007C                     __end_of_INTERRUPT_InterruptManager:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _TMR1_ISR *****************
  3152 ;; Defined at:
  3153 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 4
  3174 ;; This function calls:
  3175 ;;		Absolute function
  3176 ;;		_TMR1_DefaultInterruptHandler
  3177 ;;		_TMR1_WriteTimer
  3178 ;;		_TimerInterruptHandler
  3179 ;; This function is called by:
  3180 ;;		_INTERRUPT_InterruptManager
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text29
  3185  001974                     __ptext29:
  3186                           	callstack 0
  3187  001974                     _TMR1_ISR:
  3188                           	callstack 19
  3189  001974                     
  3190                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  3191  001974  909E               	bcf	158,0,c	;volatile
  3192  001976                     
  3193                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  3194  001976  C046  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  3195  00197A  C047  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  3196  00197E  EC1E  F00D         	call	_TMR1_WriteTimer	;wreg free
  3197  001982                     
  3198                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  3199  001982  5044               	movf	_TMR1_InterruptHandler^0,w,c
  3200  001984  1045               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  3201  001986  B4D8               	btfsc	status,2,c
  3202  001988  EFC8  F00C         	goto	i2u72_41
  3203  00198C  EFCA  F00C         	goto	i2u72_40
  3204  001990                     i2u72_41:
  3205  001990  EFD6  F00C         	goto	i2l169
  3206  001994                     i2u72_40:
  3207  001994                     
  3208                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  3209  001994  D802               	call	i2u73_48
  3210  001996  EFD6  F00C         	goto	i2u73_49
  3211  00199A                     i2u73_48:
  3212  00199A  0005               	push	
  3213  00199C  6EFA               	movwf	pclath,c
  3214  00199E  5044               	movf	_TMR1_InterruptHandler^0,w,c
  3215  0019A0  6EFD               	movwf	tosl,c
  3216  0019A2  5045               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  3217  0019A4  6EFE               	movwf	tosh,c
  3218  0019A6  6AFF               	clrf	tosu,c
  3219  0019A8  50FA               	movf	pclath,w,c
  3220  0019AA  0012               	return		;indir
  3221  0019AC                     i2u73_49:
  3222  0019AC                     i2l169:
  3223  0019AC  0012               	return		;funcret
  3224  0019AE                     __end_of_TMR1_ISR:
  3225                           	callstack 0
  3226                           
  3227 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3228 ;; Defined at:
  3229 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		None
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_TMR1_Initialize
  3253 ;;		_TMR1_ISR
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text30
  3258  001B78                     __ptext30:
  3259                           	callstack 0
  3260  001B78                     _TMR1_DefaultInterruptHandler:
  3261                           	callstack 22
  3262  001B78  0012               	return		;funcret
  3263  001B7A                     __end_of_TMR1_DefaultInterruptHandler:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _TimerInterruptHandler *****************
  3267 ;; Defined at:
  3268 ;;		line 132 in file "handler.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 3
  3289 ;; This function calls:
  3290 ;;		_SendPing
  3291 ;;		___llmod
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;;		_TMR1_ISR
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text31
  3299  0018EA                     __ptext31:
  3300                           	callstack 0
  3301  0018EA                     _TimerInterruptHandler:
  3302                           	callstack 19
  3303  0018EA                     
  3304                           ;handler.c: 133:     Ticks++;
  3305  0018EA  0E01               	movlw	1
  3306  0018EC  2629               	addwf	_Ticks^0,f,c
  3307  0018EE  0E00               	movlw	0
  3308  0018F0  222A               	addwfc	(_Ticks+1)^0,f,c
  3309  0018F2  222B               	addwfc	(_Ticks+2)^0,f,c
  3310  0018F4  222C               	addwfc	(_Ticks+3)^0,f,c
  3311  0018F6                     
  3312                           ;handler.c: 136:     if (Ticks % config.PingInterval != 0) {
  3313  0018F6  C029  F001         	movff	_Ticks,___llmod@dividend
  3314  0018FA  C02A  F002         	movff	_Ticks+1,___llmod@dividend+1
  3315  0018FE  C02B  F003         	movff	_Ticks+2,___llmod@dividend+2
  3316  001902  C02C  F004         	movff	_Ticks+3,___llmod@dividend+3
  3317  001906  5031               	movf	(_config+4)^0,w,c
  3318  001908  6E05               	movwf	___llmod@divisor^0,c
  3319  00190A  6A06               	clrf	(___llmod@divisor+1)^0,c
  3320  00190C  6A07               	clrf	(___llmod@divisor+2)^0,c
  3321  00190E  6A08               	clrf	(___llmod@divisor+3)^0,c
  3322  001910  EC45  F00A         	call	___llmod	;wreg free
  3323  001914  5001               	movf	?___llmod^0,w,c
  3324  001916  1002               	iorwf	(?___llmod+1)^0,w,c
  3325  001918  1003               	iorwf	(?___llmod+2)^0,w,c
  3326  00191A  1004               	iorwf	(?___llmod+3)^0,w,c
  3327  00191C  B4D8               	btfsc	status,2,c
  3328  00191E  EF93  F00C         	goto	i2u71_41
  3329  001922  EF95  F00C         	goto	i2u71_40
  3330  001926                     i2u71_41:
  3331  001926  EF97  F00C         	goto	i2l2051
  3332  00192A                     i2u71_40:
  3333  00192A  EF99  F00C         	goto	i2l299
  3334  00192E                     i2l2051:
  3335                           
  3336                           ;handler.c: 139:     SendPing();
  3337  00192E  ECD7  F00C         	call	_SendPing	;wreg free
  3338  001932                     i2l299:
  3339  001932  0012               	return		;funcret
  3340  001934                     __end_of_TimerInterruptHandler:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function ___llmod *****************
  3344 ;; Defined at:
  3345 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/llmod.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  dividend        4    0[COMRAM] unsigned long 
  3348 ;;  divisor         4    4[COMRAM] unsigned long 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  counter         1    8[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  4    0[COMRAM] unsigned long 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:        9 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_TimerInterruptHandler
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text32
  3374  00148A                     __ptext32:
  3375                           	callstack 0
  3376  00148A                     ___llmod:
  3377                           	callstack 21
  3378  00148A  5005               	movf	___llmod@divisor^0,w,c
  3379  00148C  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  3380  00148E  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  3381  001490  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  3382  001492  B4D8               	btfsc	status,2,c
  3383  001494  EF4E  F00A         	goto	i2u65_41
  3384  001498  EF50  F00A         	goto	i2u65_40
  3385  00149C                     i2u65_41:
  3386  00149C  EF80  F00A         	goto	i2l862
  3387  0014A0                     i2u65_40:
  3388  0014A0  0E01               	movlw	1
  3389  0014A2  6E09               	movwf	___llmod@counter^0,c
  3390  0014A4  EF5A  F00A         	goto	i2l1939
  3391  0014A8                     i2l1937:
  3392  0014A8  90D8               	bcf	status,0,c
  3393  0014AA  3605               	rlcf	___llmod@divisor^0,f,c
  3394  0014AC  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  3395  0014AE  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  3396  0014B0  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  3397  0014B2  2A09               	incf	___llmod@counter^0,f,c
  3398  0014B4                     i2l1939:
  3399  0014B4  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  3400  0014B6  EF5F  F00A         	goto	i2u66_41
  3401  0014BA  EF61  F00A         	goto	i2u66_40
  3402  0014BE                     i2u66_41:
  3403  0014BE  EF54  F00A         	goto	i2l1937
  3404  0014C2                     i2u66_40:
  3405  0014C2                     i2l1941:
  3406  0014C2  5005               	movf	___llmod@divisor^0,w,c
  3407  0014C4  5C01               	subwf	___llmod@dividend^0,w,c
  3408  0014C6  5006               	movf	(___llmod@divisor+1)^0,w,c
  3409  0014C8  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  3410  0014CA  5007               	movf	(___llmod@divisor+2)^0,w,c
  3411  0014CC  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  3412  0014CE  5008               	movf	(___llmod@divisor+3)^0,w,c
  3413  0014D0  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  3414  0014D2  A0D8               	btfss	status,0,c
  3415  0014D4  EF6E  F00A         	goto	i2u67_41
  3416  0014D8  EF70  F00A         	goto	i2u67_40
  3417  0014DC                     i2u67_41:
  3418  0014DC  EF78  F00A         	goto	i2l1945
  3419  0014E0                     i2u67_40:
  3420  0014E0  5005               	movf	___llmod@divisor^0,w,c
  3421  0014E2  5E01               	subwf	___llmod@dividend^0,f,c
  3422  0014E4  5006               	movf	(___llmod@divisor+1)^0,w,c
  3423  0014E6  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  3424  0014E8  5007               	movf	(___llmod@divisor+2)^0,w,c
  3425  0014EA  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  3426  0014EC  5008               	movf	(___llmod@divisor+3)^0,w,c
  3427  0014EE  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  3428  0014F0                     i2l1945:
  3429  0014F0  90D8               	bcf	status,0,c
  3430  0014F2  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  3431  0014F4  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  3432  0014F6  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  3433  0014F8  3205               	rrcf	___llmod@divisor^0,f,c
  3434  0014FA  2E09               	decfsz	___llmod@counter^0,f,c
  3435  0014FC  EF61  F00A         	goto	i2l1941
  3436  001500                     i2l862:
  3437  001500  C001  F001         	movff	___llmod@dividend,?___llmod
  3438  001504  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3439  001508  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3440  00150C  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3441  001510  0012               	return		;funcret
  3442  001512                     __end_of___llmod:
  3443                           	callstack 0
  3444                           
  3445 ;; *************** function _SendPing *****************
  3446 ;; Defined at:
  3447 ;;		line 195 in file "handler.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      unsigned char 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 2
  3468 ;; This function calls:
  3469 ;;		i2_QueueTXPacket
  3470 ;;		i2_SuperMemCpy
  3471 ;; This function is called by:
  3472 ;;		_TimerInterruptHandler
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text33
  3477  0019AE                     __ptext33:
  3478                           	callstack 0
  3479  0019AE                     _SendPing:
  3480                           	callstack 19
  3481  0019AE                     
  3482                           ;handler.c: 196:     bufferTX[0] = 0x02;
  3483  0019AE  0E02               	movlw	2
  3484  0019B0  0100               	movlb	0	; () banked
  3485  0019B2  6F80               	movwf	_bufferTX& (0+255),b
  3486  0019B4                     
  3487                           ; BSR set to: 0
  3488                           ;handler.c: 197:     SuperMemCpy(bufferTX,1,config.Address,0,3);
  3489  0019B4  0E80               	movlw	low _bufferTX
  3490  0019B6  6E01               	movwf	i2SuperMemCpy@dest^0,c
  3491  0019B8  0E00               	movlw	high _bufferTX
  3492  0019BA  6E02               	movwf	(i2SuperMemCpy@dest+1)^0,c
  3493  0019BC  0E01               	movlw	1
  3494  0019BE  6E03               	movwf	i2SuperMemCpy@destStart^0,c
  3495  0019C0  0E2E               	movlw	low (_config+1)
  3496  0019C2  6E04               	movwf	i2SuperMemCpy@src^0,c
  3497  0019C4  0E00               	movlw	high (_config+1)
  3498  0019C6  6E05               	movwf	(i2SuperMemCpy@src+1)^0,c
  3499  0019C8  0E00               	movlw	0
  3500  0019CA  6E06               	movwf	i2SuperMemCpy@srcStart^0,c
  3501  0019CC  0E03               	movlw	3
  3502  0019CE  6E07               	movwf	i2SuperMemCpy@sz^0,c
  3503  0019D0  ECB0  F00B         	call	i2_SuperMemCpy	;wreg free
  3504  0019D4                     
  3505                           ;handler.c: 198:     return QueueTXPacket(bufferTX, (3 + 1));;	Return value of _SendPing
      +                           is never used
  3506  0019D4  0E80               	movlw	low _bufferTX
  3507  0019D6  6E0C               	movwf	i2QueueTXPacket@buffer^0,c
  3508  0019D8  0E00               	movlw	high _bufferTX
  3509  0019DA  6E0D               	movwf	(i2QueueTXPacket@buffer+1)^0,c
  3510  0019DC  0E04               	movlw	4
  3511  0019DE  6E0E               	movwf	i2QueueTXPacket@sz^0,c
  3512  0019E0  ECAE  F009         	call	i2_QueueTXPacket	;wreg free
  3513  0019E4  0012               	return		;funcret
  3514  0019E6                     __end_of_SendPing:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function i2_SuperMemCpy *****************
  3518 ;; Defined at:
  3519 ;;		line 202 in file "handler.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3522 ;;		 -> bufferTX(32), ProcessAckPayload@data(32), 
  3523 ;;  destStart       1    2[COMRAM] unsigned char 
  3524 ;;  src             2    3[COMRAM] PTR unsigned char 
  3525 ;;		 -> bufferRX(32), config(17), 
  3526 ;;  srcStart        1    5[COMRAM] unsigned char 
  3527 ;;  sz              1    6[COMRAM] unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  i               1   11[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3539 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;Total ram usage:       12 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_SendPing
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text34
  3553  001760                     __ptext34:
  3554                           	callstack 0
  3555  001760                     i2_SuperMemCpy:
  3556                           	callstack 20
  3557  001760                     
  3558                           ;handler.c: 203:     for(uint8_t i=0; i< sz; i++) {
  3559  001760  0E00               	movlw	0
  3560  001762  6E0C               	movwf	i2SuperMemCpy@i^0,c
  3561  001764  EFCF  F00B         	goto	i2l1857
  3562  001768                     i2l1853:
  3563                           
  3564                           ;handler.c: 204:         dest[i+destStart] = src[i+srcStart];
  3565  001768  500C               	movf	i2SuperMemCpy@i^0,w,c
  3566  00176A  2404               	addwf	i2SuperMemCpy@src^0,w,c
  3567  00176C  6E08               	movwf	??i2_SuperMemCpy^0,c
  3568  00176E  0E00               	movlw	0
  3569  001770  2005               	addwfc	(i2SuperMemCpy@src+1)^0,w,c
  3570  001772  6E09               	movwf	(??i2_SuperMemCpy+1)^0,c
  3571  001774  5006               	movf	i2SuperMemCpy@srcStart^0,w,c
  3572  001776  2408               	addwf	??i2_SuperMemCpy^0,w,c
  3573  001778  6ED9               	movwf	fsr2l,c
  3574  00177A  0E00               	movlw	0
  3575  00177C  2009               	addwfc	(??i2_SuperMemCpy+1)^0,w,c
  3576  00177E  6EDA               	movwf	fsr2h,c
  3577  001780  500C               	movf	i2SuperMemCpy@i^0,w,c
  3578  001782  2401               	addwf	i2SuperMemCpy@dest^0,w,c
  3579  001784  6E0A               	movwf	(??i2_SuperMemCpy+2)^0,c
  3580  001786  0E00               	movlw	0
  3581  001788  2002               	addwfc	(i2SuperMemCpy@dest+1)^0,w,c
  3582  00178A  6E0B               	movwf	(??i2_SuperMemCpy+3)^0,c
  3583  00178C  5003               	movf	i2SuperMemCpy@destStart^0,w,c
  3584  00178E  240A               	addwf	(??i2_SuperMemCpy+2)^0,w,c
  3585  001790  6EE1               	movwf	fsr1l,c
  3586  001792  0E00               	movlw	0
  3587  001794  200B               	addwfc	(??i2_SuperMemCpy+3)^0,w,c
  3588  001796  6EE2               	movwf	fsr1h,c
  3589  001798  CFDF FFE7          	movff	indf2,indf1
  3590  00179C                     
  3591                           ;handler.c: 205:     }
  3592  00179C  2A0C               	incf	i2SuperMemCpy@i^0,f,c
  3593  00179E                     i2l1857:
  3594  00179E  5007               	movf	i2SuperMemCpy@sz^0,w,c
  3595  0017A0  5C0C               	subwf	i2SuperMemCpy@i^0,w,c
  3596  0017A2  A0D8               	btfss	status,0,c
  3597  0017A4  EFD6  F00B         	goto	i2u61_41
  3598  0017A8  EFD8  F00B         	goto	i2u61_40
  3599  0017AC                     i2u61_41:
  3600  0017AC  EFB4  F00B         	goto	i2l1853
  3601  0017B0                     i2u61_40:
  3602  0017B0  0012               	return		;funcret
  3603  0017B2                     __end_ofi2_SuperMemCpy:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function i2_QueueTXPacket *****************
  3607 ;; Defined at:
  3608 ;;		line 65 in file "handler.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  buffer          2   11[COMRAM] PTR unsigned char 
  3611 ;;		 -> bufferTX(32), 
  3612 ;;  sz              1   13[COMRAM] unsigned char 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  i               1   14[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3624 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;Total ram usage:        4 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 1
  3631 ;; This function calls:
  3632 ;;		i2_memcpy
  3633 ;; This function is called by:
  3634 ;;		_SendPing
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text35
  3639  00135C                     __ptext35:
  3640                           	callstack 0
  3641  00135C                     i2_QueueTXPacket:
  3642                           	callstack 19
  3643  00135C                     
  3644                           ;handler.c: 66:     uint8_t i;;handler.c: 67:     for (i = 0; i < 8; i++) {
  3645  00135C  0E00               	movlw	0
  3646  00135E  6E0F               	movwf	i2QueueTXPacket@i^0,c
  3647  001360                     i2l1829:
  3648                           
  3649                           ;handler.c: 68:         if (packetsTX[i].free) {
  3650  001360  500F               	movf	i2QueueTXPacket@i^0,w,c
  3651  001362  0D22               	mullw	34
  3652  001364  0EEF               	movlw	low (_packetsTX+32)
  3653  001366  24F3               	addwf	243,w,c
  3654  001368  6ED9               	movwf	fsr2l,c
  3655  00136A  0E00               	movlw	high (_packetsTX+32)
  3656  00136C  20F4               	addwfc	prodh,w,c
  3657  00136E  6EDA               	movwf	fsr2h,c
  3658  001370  50DF               	movf	indf2,w,c
  3659  001372  B4D8               	btfsc	status,2,c
  3660  001374  EFBE  F009         	goto	i2u58_41
  3661  001378  EFC0  F009         	goto	i2u58_40
  3662  00137C                     i2u58_41:
  3663  00137C  EFC2  F009         	goto	i2l1833
  3664  001380                     i2u58_40:
  3665  001380  EFCB  F009         	goto	i2l1837
  3666  001384                     i2l1833:
  3667                           
  3668                           ;handler.c: 71:     }
  3669  001384  2A0F               	incf	i2QueueTXPacket@i^0,f,c
  3670  001386  0E07               	movlw	7
  3671  001388  640F               	cpfsgt	i2QueueTXPacket@i^0,c
  3672  00138A  EFC9  F009         	goto	i2u59_41
  3673  00138E  EFCB  F009         	goto	i2u59_40
  3674  001392                     i2u59_41:
  3675  001392  EFB0  F009         	goto	i2l1829
  3676  001396                     i2u59_40:
  3677  001396                     i2l1837:
  3678                           
  3679                           ;handler.c: 72:     if (i == 8) {
  3680  001396  0E08               	movlw	8
  3681  001398  180F               	xorwf	i2QueueTXPacket@i^0,w,c
  3682  00139A  A4D8               	btfss	status,2,c
  3683  00139C  EFD2  F009         	goto	i2u60_41
  3684  0013A0  EFD4  F009         	goto	i2u60_40
  3685  0013A4                     i2u60_41:
  3686  0013A4  EFD7  F009         	goto	i2l1843
  3687  0013A8                     i2u60_40:
  3688  0013A8                     
  3689                           ;handler.c: 73:         return 0;
  3690  0013A8  0E00               	movlw	0
  3691  0013AA  EFFD  F009         	goto	i2l279
  3692  0013AE                     i2l1843:
  3693                           
  3694                           ;handler.c: 75:     packetsTX[i].free = 0;
  3695  0013AE  500F               	movf	i2QueueTXPacket@i^0,w,c
  3696  0013B0  0D22               	mullw	34
  3697  0013B2  0EEF               	movlw	low (_packetsTX+32)
  3698  0013B4  24F3               	addwf	243,w,c
  3699  0013B6  6ED9               	movwf	fsr2l,c
  3700  0013B8  0E00               	movlw	high (_packetsTX+32)
  3701  0013BA  20F4               	addwfc	prodh,w,c
  3702  0013BC  6EDA               	movwf	fsr2h,c
  3703  0013BE  0E00               	movlw	0
  3704  0013C0  6EDF               	movwf	indf2,c
  3705                           
  3706                           ;handler.c: 76:     packetsTX[i].size = sz;
  3707  0013C2  500F               	movf	i2QueueTXPacket@i^0,w,c
  3708  0013C4  0D22               	mullw	34
  3709  0013C6  0EF0               	movlw	low (_packetsTX+33)
  3710  0013C8  24F3               	addwf	243,w,c
  3711  0013CA  6ED9               	movwf	fsr2l,c
  3712  0013CC  0E00               	movlw	high (_packetsTX+33)
  3713  0013CE  20F4               	addwfc	prodh,w,c
  3714  0013D0  6EDA               	movwf	fsr2h,c
  3715  0013D2  C00E  FFDF         	movff	i2QueueTXPacket@sz,indf2
  3716  0013D6                     
  3717                           ;handler.c: 77:     memcpy(packetsTX[i].packet, buffer,sz);
  3718  0013D6  500F               	movf	i2QueueTXPacket@i^0,w,c
  3719  0013D8  0D22               	mullw	34
  3720  0013DA  0ECF               	movlw	low _packetsTX
  3721  0013DC  24F3               	addwf	243,w,c
  3722  0013DE  6E01               	movwf	i2memcpy@d1^0,c
  3723  0013E0  0E00               	movlw	high _packetsTX
  3724  0013E2  20F4               	addwfc	prodh,w,c
  3725  0013E4  6E02               	movwf	(i2memcpy@d1+1)^0,c
  3726  0013E6  C00C  F003         	movff	i2QueueTXPacket@buffer,i2memcpy@s1
  3727  0013EA  C00D  F004         	movff	i2QueueTXPacket@buffer+1,i2memcpy@s1+1
  3728  0013EE  C00E  F005         	movff	i2QueueTXPacket@sz,i2memcpy@n
  3729  0013F2  6A06               	clrf	(i2memcpy@n+1)^0,c
  3730  0013F4  EC01  F00C         	call	i2_memcpy	;wreg free
  3731  0013F8                     
  3732                           ;handler.c: 78:     return 1;
  3733  0013F8  0E01               	movlw	1
  3734  0013FA                     i2l279:
  3735  0013FA  0012               	return		;funcret
  3736  0013FC                     __end_ofi2_QueueTXPacket:
  3737                           	callstack 0
  3738                           
  3739 ;; *************** function i2_memcpy *****************
  3740 ;; Defined at:
  3741 ;;		line 4 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  d1              2    0[COMRAM] PTR void 
  3744 ;;		 -> packetsTX(272), 
  3745 ;;  s1              2    2[COMRAM] PTR const void 
  3746 ;;		 -> bufferTX(32), 
  3747 ;;  n               2    4[COMRAM] unsigned int 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3750 ;;		 -> bufferTX(32), 
  3751 ;;  d               2    6[COMRAM] PTR unsigned char 
  3752 ;;		 -> packetsTX(272), 
  3753 ;;  tmp             1   10[COMRAM] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2    0[COMRAM] PTR void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3763 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;Total ram usage:       11 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		i2_QueueTXPacket
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text36
  3777  001802                     __ptext36:
  3778                           	callstack 0
  3779  001802                     i2_memcpy:
  3780                           	callstack 19
  3781  001802  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
  3782  001806  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
  3783  00180A  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
  3784  00180E  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
  3785  001812  EF1B  F00C         	goto	i2l1783
  3786  001816                     i2l1775:
  3787  001816  C009  FFD9         	movff	i2memcpy@s,fsr2l
  3788  00181A  C00A  FFDA         	movff	i2memcpy@s+1,fsr2h
  3789  00181E  50DF               	movf	indf2,w,c
  3790  001820  6E0B               	movwf	i2memcpy@tmp^0,c
  3791  001822  4A09               	infsnz	i2memcpy@s^0,f,c
  3792  001824  2A0A               	incf	(i2memcpy@s+1)^0,f,c
  3793  001826  C007  FFD9         	movff	i2memcpy@d,fsr2l
  3794  00182A  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
  3795  00182E  C00B  FFDF         	movff	i2memcpy@tmp,indf2
  3796  001832  4A07               	infsnz	i2memcpy@d^0,f,c
  3797  001834  2A08               	incf	(i2memcpy@d+1)^0,f,c
  3798  001836                     i2l1783:
  3799  001836  0605               	decf	i2memcpy@n^0,f,c
  3800  001838  A0D8               	btfss	status,0,c
  3801  00183A  0606               	decf	(i2memcpy@n+1)^0,f,c
  3802  00183C  2805               	incf	i2memcpy@n^0,w,c
  3803  00183E  E106               	bnz	i2u52_41
  3804  001840  2806               	incf	(i2memcpy@n+1)^0,w,c
  3805  001842  A4D8               	btfss	status,2,c
  3806  001844  EF26  F00C         	goto	i2u52_41
  3807  001848  EF28  F00C         	goto	i2u52_40
  3808  00184C                     i2u52_41:
  3809  00184C  EF0B  F00C         	goto	i2l1775
  3810  001850                     i2u52_40:
  3811  001850  0012               	return		;funcret
  3812  001852                     __end_ofi2_memcpy:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function _TMR1_WriteTimer *****************
  3816 ;; Defined at:
  3817 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  timerVal        2    0[COMRAM] unsigned short 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_TMR1_ISR
  3841 ;;		_TMR1_Reload
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text37
  3846  001A3C                     __ptext37:
  3847                           	callstack 0
  3848  001A3C                     _TMR1_WriteTimer:
  3849                           	callstack 22
  3850  001A3C                     
  3851                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  3852  001A3C  A4CD               	btfss	205,2,c	;volatile
  3853  001A3E  EF23  F00D         	goto	i2u68_41
  3854  001A42  EF25  F00D         	goto	i2u68_40
  3855  001A46                     i2u68_41:
  3856  001A46  EF2D  F00D         	goto	i2l1971
  3857  001A4A                     i2u68_40:
  3858  001A4A                     
  3859                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  3860  001A4A  90CD               	bcf	205,0,c	;volatile
  3861  001A4C                     
  3862                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  3863  001A4C  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3864  001A4E  6ECF               	movwf	207,c	;volatile
  3865  001A50                     
  3866                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  3867  001A50  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3868  001A54                     
  3869                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  3870  001A54  80CD               	bsf	205,0,c	;volatile
  3871                           
  3872                           ;mcc_generated_files/tmr1.c: 134:     }
  3873  001A56  EF31  F00D         	goto	i2l156
  3874  001A5A                     i2l1971:
  3875                           
  3876                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  3877  001A5A  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3878  001A5C  6ECF               	movwf	207,c	;volatile
  3879  001A5E                     
  3880                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  3881  001A5E  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3882  001A62                     i2l156:
  3883  001A62  0012               	return		;funcret
  3884  001A64                     __end_of_TMR1_WriteTimer:
  3885                           	callstack 0
  3886                           
  3887                           	psect	text38
  3888  000000                     __ptext38:
  3889                           	callstack 0
  3890  000000                     
  3891                           	psect	rparam
  3892  0000                     
  3893                           	psect	temp
  3894  000048                     btemp:
  3895                           	callstack 0
  3896  000048                     	ds	1
  3897  0000                     int$flags	set	btemp
  3898  0000                     wtemp8	set	btemp+1
  3899  0000                     ttemp5	set	btemp+1
  3900  0000                     ttemp6	set	btemp+4
  3901  0000                     ttemp7	set	btemp+8
  3902                           
  3903                           	psect	idloc
  3904                           
  3905                           ;Config register IDLOC0 @ 0x200000
  3906                           ;	unspecified, using default values
  3907  200000                     	org	2097152
  3908  200000  FF                 	db	255
  3909                           
  3910                           ;Config register IDLOC1 @ 0x200001
  3911                           ;	unspecified, using default values
  3912  200001                     	org	2097153
  3913  200001  FF                 	db	255
  3914                           
  3915                           ;Config register IDLOC2 @ 0x200002
  3916                           ;	unspecified, using default values
  3917  200002                     	org	2097154
  3918  200002  FF                 	db	255
  3919                           
  3920                           ;Config register IDLOC3 @ 0x200003
  3921                           ;	unspecified, using default values
  3922  200003                     	org	2097155
  3923  200003  FF                 	db	255
  3924                           
  3925                           ;Config register IDLOC4 @ 0x200004
  3926                           ;	unspecified, using default values
  3927  200004                     	org	2097156
  3928  200004  FF                 	db	255
  3929                           
  3930                           ;Config register IDLOC5 @ 0x200005
  3931                           ;	unspecified, using default values
  3932  200005                     	org	2097157
  3933  200005  FF                 	db	255
  3934                           
  3935                           ;Config register IDLOC6 @ 0x200006
  3936                           ;	unspecified, using default values
  3937  200006                     	org	2097158
  3938  200006  FF                 	db	255
  3939                           
  3940                           ;Config register IDLOC7 @ 0x200007
  3941                           ;	unspecified, using default values
  3942  200007                     	org	2097159
  3943  200007  FF                 	db	255
  3944                           
  3945                           	psect	config
  3946                           
  3947                           ; Padding undefined space
  3948  300000                     	org	3145728
  3949  300000  FF                 	db	255
  3950                           
  3951                           ;Config register CONFIG1H @ 0x300001
  3952                           ;	Oscillator Selection bits
  3953                           ;	FOSC = INTIO67, Internal oscillator block
  3954                           ;	4X PLL Enable
  3955                           ;	PLLCFG = OFF, Oscillator used directly
  3956                           ;	Primary clock enable bit
  3957                           ;	PRICLKEN = ON, Primary clock enabled
  3958                           ;	Fail-Safe Clock Monitor Enable bit
  3959                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3960                           ;	Internal/External Oscillator Switchover bit
  3961                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3962  300001                     	org	3145729
  3963  300001  28                 	db	40
  3964                           
  3965                           ;Config register CONFIG2L @ 0x300002
  3966                           ;	Power-up Timer Enable bit
  3967                           ;	PWRTEN = OFF, Power up timer disabled
  3968                           ;	Brown-out Reset Enable bits
  3969                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3970                           ;	Brown Out Reset Voltage bits
  3971                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3972  300002                     	org	3145730
  3973  300002  1F                 	db	31
  3974                           
  3975                           ;Config register CONFIG2H @ 0x300003
  3976                           ;	Watchdog Timer Enable bits
  3977                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3978                           ;	Watchdog Timer Postscale Select bits
  3979                           ;	WDTPS = 32768, 1:32768
  3980  300003                     	org	3145731
  3981  300003  3C                 	db	60
  3982                           
  3983                           ; Padding undefined space
  3984  300004                     	org	3145732
  3985  300004  FF                 	db	255
  3986                           
  3987                           ;Config register CONFIG3H @ 0x300005
  3988                           ;	CCP2 MUX bit
  3989                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3990                           ;	PORTB A/D Enable bit
  3991                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  3992                           ;	P3A/CCP3 Mux bit
  3993                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3994                           ;	HFINTOSC Fast Start-up
  3995                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3996                           ;	Timer3 Clock input mux bit
  3997                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3998                           ;	ECCP2 B output mux bit
  3999                           ;	P2BMX = PORTB5, P2B is on RB5
  4000                           ;	MCLR Pin Enable bit
  4001                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4002  300005                     	org	3145733
  4003  300005  BF                 	db	191
  4004                           
  4005                           ;Config register CONFIG4L @ 0x300006
  4006                           ;	Stack Full/Underflow Reset Enable bit
  4007                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4008                           ;	Single-Supply ICSP Enable bit
  4009                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4010                           ;	Extended Instruction Set Enable bit
  4011                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4012                           ;	Background Debug
  4013                           ;	DEBUG = OFF, Disabled
  4014  300006                     	org	3145734
  4015  300006  85                 	db	133
  4016                           
  4017                           ; Padding undefined space
  4018  300007                     	org	3145735
  4019  300007  FF                 	db	255
  4020                           
  4021                           ;Config register CONFIG5L @ 0x300008
  4022                           ;	Code Protection Block 0
  4023                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4024                           ;	Code Protection Block 1
  4025                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4026                           ;	Code Protection Block 2
  4027                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4028                           ;	Code Protection Block 3
  4029                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4030  300008                     	org	3145736
  4031  300008  0F                 	db	15
  4032                           
  4033                           ;Config register CONFIG5H @ 0x300009
  4034                           ;	Boot Block Code Protection bit
  4035                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4036                           ;	Data EEPROM Code Protection bit
  4037                           ;	CPD = OFF, Data EEPROM not code-protected
  4038  300009                     	org	3145737
  4039  300009  C0                 	db	192
  4040                           
  4041                           ;Config register CONFIG6L @ 0x30000A
  4042                           ;	Write Protection Block 0
  4043                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4044                           ;	Write Protection Block 1
  4045                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4046                           ;	Write Protection Block 2
  4047                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4048                           ;	Write Protection Block 3
  4049                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4050  30000A                     	org	3145738
  4051  30000A  0F                 	db	15
  4052                           
  4053                           ;Config register CONFIG6H @ 0x30000B
  4054                           ;	Configuration Register Write Protection bit
  4055                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4056                           ;	Boot Block Write Protection bit
  4057                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4058                           ;	Data EEPROM Write Protection bit
  4059                           ;	WRTD = OFF, Data EEPROM not write-protected
  4060  30000B                     	org	3145739
  4061  30000B  E0                 	db	224
  4062                           
  4063                           ;Config register CONFIG7L @ 0x30000C
  4064                           ;	Table Read Protection Block 0
  4065                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4066                           ;	Table Read Protection Block 1
  4067                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4068                           ;	Table Read Protection Block 2
  4069                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4070                           ;	Table Read Protection Block 3
  4071                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4072  30000C                     	org	3145740
  4073  30000C  0F                 	db	15
  4074                           
  4075                           ;Config register CONFIG7H @ 0x30000D
  4076                           ;	Boot Block Table Read Protection bit
  4077                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4078  30000D                     	org	3145741
  4079  30000D  40                 	db	64
  4080                           tosu	equ	0xFFF
  4081                           tosh	equ	0xFFE
  4082                           tosl	equ	0xFFD
  4083                           stkptr	equ	0xFFC
  4084                           pclatu	equ	0xFFB
  4085                           pclath	equ	0xFFA
  4086                           pcl	equ	0xFF9
  4087                           tblptru	equ	0xFF8
  4088                           tblptrh	equ	0xFF7
  4089                           tblptrl	equ	0xFF6
  4090                           tablat	equ	0xFF5
  4091                           prodh	equ	0xFF4
  4092                           prodl	equ	0xFF3
  4093                           indf0	equ	0xFEF
  4094                           postinc0	equ	0xFEE
  4095                           postdec0	equ	0xFED
  4096                           preinc0	equ	0xFEC
  4097                           plusw0	equ	0xFEB
  4098                           fsr0h	equ	0xFEA
  4099                           fsr0l	equ	0xFE9
  4100                           wreg	equ	0xFE8
  4101                           indf1	equ	0xFE7
  4102                           postinc1	equ	0xFE6
  4103                           postdec1	equ	0xFE5
  4104                           preinc1	equ	0xFE4
  4105                           plusw1	equ	0xFE3
  4106                           fsr1h	equ	0xFE2
  4107                           fsr1l	equ	0xFE1
  4108                           bsr	equ	0xFE0
  4109                           indf2	equ	0xFDF
  4110                           postinc2	equ	0xFDE
  4111                           postdec2	equ	0xFDD
  4112                           preinc2	equ	0xFDC
  4113                           plusw2	equ	0xFDB
  4114                           fsr2h	equ	0xFDA
  4115                           fsr2l	equ	0xFD9
  4116                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    4
    Data        6
    BSS         357
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      71
    BANK0           160     47     111
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), 

    memcpy@s1	PTR const void  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), 

    nrf24_read_rf_data@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    nrf24_send_rf_data@buffer	PTR unsigned char  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), 

    nrf24_read_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    nrf24_write_buff@buffer	PTR unsigned char  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), DEFAULT_PIPE_ADDR(COMRAM[6]), 

    SuperMemCpy@src	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), config(COMRAM[17]), 

    SuperMemCpy@dest	PTR unsigned char  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), ProcessAckPayload@data(BANK0[32]), 

    ProcessActionRequest@data	PTR unsigned char  size(2) Largest target is 32
		 -> ProcessAckPayload@data(BANK0[32]), 

    ProcessAckPayload@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    VerifyBoardAddress@bufferRX	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    sp__memcpy	PTR void  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), 

    QueueTXPacket@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInterruptHandler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInterruptHandler(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _InitRadio->_nrf24_write_buff
    _nrf24_rf_init->_SPI1_Open
    _nrf24_send_rf_data->_nrf24_write_buff
    _nrf24_write_buff->_SPI1_ExchangeByte
    _nrf24_read_rf_data->_nrf24_read_buff
    _nrf24_read_buff->_SPI1_ExchangeByte
    _nrf24_flush_tx_rx->_nrf24_write_register
    _nrf24_write_register->_SPI1_ExchangeByte
    _nrf24_read_register->_SPI1_ExchangeByte
    _nrf24_read_dynamic_payload_length->_SPI1_ExchangeByte
    _ProcessAckPayload->_SendError
    _ProcessActionRequest->_SendError
    _SendError->_QueueTXPacket
    _QueueTXPacket->_memcpy

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _SendPing->i2_QueueTXPacket
    i2_QueueTXPacket->i2_memcpy

Critical Paths under _main in BANK0

    _main->_HandlePacketLoop
    _HandlePacketLoop->_ProcessAckPayload
    _ProcessAckPayload->_ProcessActionRequest

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18025
                   _HandlePacketLoop
                          _InitRadio
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitRadio                                            1     1      0    2284
                                             29 COMRAM     1     1      0
                      _nrf24_rf_init
                   _nrf24_write_buff
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_rf_init                                        0     0      0      60
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0      60
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _HandlePacketLoop                                     3     3      0   15393
                                             44 BANK0      3     3      0
                  _ProcessAckPayload
                 _VerifyBoardAddress
                  _nrf24_flush_tx_rx
  _nrf24_read_dynamic_payload_length
                _nrf24_read_register
                 _nrf24_read_rf_data
                 _nrf24_send_rf_data
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_send_rf_data                                   3     0      3     946
                                             29 COMRAM     3     0      3
                   _nrf24_write_buff
 ---------------------------------------------------------------------------------
 (2) _nrf24_write_buff                                     5     2      3     704
                                             24 COMRAM     5     2      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_rf_data                                   3     0      3    3428
                                             29 COMRAM     3     0      3
                  _nrf24_flush_tx_rx
                    _nrf24_read_buff
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (3) _nrf24_read_buff                                      5     2      3     375
                                             24 COMRAM     5     2      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _nrf24_flush_tx_rx                                    1     1      0    1421
                                             26 COMRAM     1     1      0
                  _SPI1_ExchangeByte
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_write_register                                 2     1      1    1390
                                             24 COMRAM     2     1      1
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_register                                  2     2      0      96
                                             24 COMRAM     2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_dynamic_payload_length                    1     1      0      65
                                             24 COMRAM     1     1      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      31
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _VerifyBoardAddress                                   8     6      2     251
                                             23 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _ProcessAckPayload                                   39    36      3    7378
                                              5 BANK0     39    36      3
               _ProcessActionRequest
                          _SendError
                        _SuperMemCpy
 ---------------------------------------------------------------------------------
 (3) _ProcessActionRequest                                 5     3      2    2826
                                              0 BANK0      5     3      2
                          _SendError
 ---------------------------------------------------------------------------------
 (3) _SendError                                            2     2      0    2674
                                             38 COMRAM     2     2      0
                      _QueueTXPacket
                        _SuperMemCpy
 ---------------------------------------------------------------------------------
 (3) _SuperMemCpy                                         12     5      7    1429
                                             23 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (4) _QueueTXPacket                                        4     1      3    1084
                                             34 COMRAM     4     1      3
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                             23 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           8     8      0    1354
                                             15 COMRAM     8     8      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0    1354
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
              _TimerInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TimerInterruptHandler                                0     0      0    1114
                           _SendPing
                            ___llmod
 ---------------------------------------------------------------------------------
 (10) ___llmod                                             9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (10) _SendPing                                            0     0      0     803
                    i2_QueueTXPacket
                      i2_SuperMemCpy
 ---------------------------------------------------------------------------------
 (11) i2_SuperMemCpy                                      12     5      7     308
                                              0 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (11) i2_QueueTXPacket                                     4     1      3     495
                                             11 COMRAM     4     1      3
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HandlePacketLoop
     _ProcessAckPayload
       _ProcessActionRequest
         _SendError
           _QueueTXPacket
             _memcpy
           _SuperMemCpy
       _SendError
       _SuperMemCpy
     _VerifyBoardAddress
     _nrf24_flush_tx_rx
       _SPI1_ExchangeByte
       _nrf24_write_register
         _SPI1_ExchangeByte
     _nrf24_read_dynamic_payload_length
       _SPI1_ExchangeByte
     _nrf24_read_register
       _SPI1_ExchangeByte
     _nrf24_read_rf_data
       _nrf24_flush_tx_rx
       _nrf24_read_buff
         _SPI1_ExchangeByte
       _nrf24_write_register
     _nrf24_send_rf_data
       _nrf24_write_buff
         _SPI1_ExchangeByte
     _nrf24_write_register
   _InitRadio
     _nrf24_rf_init
       _SPI1_Open
     _nrf24_write_buff
     _nrf24_write_register
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _TimerInterruptHandler *
       _SendPing
         i2_QueueTXPacket
           i2_memcpy
         i2_SuperMemCpy
       ___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     110      47        7.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      6F       5       69.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      47       1       75.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlhh        27      0       0      45        0.0%
BITBIGSFRhhllh      26      0       0      41        0.0%
BITBIGSFRlhl        26      0       0      46        0.0%
BITBIGSFRhhlhh      1D      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhllll      6      0       0      43        0.0%
BITBIGSFRhl          6      0       0      44        0.0%
BITBIGSFRhhlhll      2      0       0      40        0.0%
BITBIGSFRhhlhlh      1      0       0      39        0.0%
BITBIGSFRhhlllh      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B6      32        0.0%
DATA                 0      0     1C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jul 15 18:08:58 2022

                        _SPI1_ExchangeByte 1B04                                         l27 1A10  
                                       l51 1B44                                         l61 1B0A  
                                       l63 1B18                                         l55 12BA  
                                       l64 1B1C                         ?_SPI1_ExchangeByte 0001  
                                      l110 1B32                                        l113 1B62  
                                      l142 1A3A                                        l321 1682  
                                      l313 1488                                        l305 15F8  
                                      l411 1ACA                                        l404 1B54  
                                      l172 1B6C                                        l325 16B6  
                                      l421 1852                                        l318 1668  
                                      l328 165E                                        l352 1514  
                                      l272 120A                                        l337 175E  
                                      l433 189E                                        l362 1AEC  
                                      l418 1AAA                                        l188 1B76  
                                      l373 1AE8                                        l381 1970  
                                      l366 1B02                                        l286 113E  
                                      l279 135A                                        l359 1590  
                                      l383 1972                                        l376 1936  
                                      l288 10AA                                        l369 1ACC  
                                      l393 18E8                                        l386 18A2  
                                      u170 121C                                        u171 1218  
                  ProcessAckPayload@buffer 00A5                                        u900 12E0  
                                      u901 12DC                                        u910 12F6  
                                      u911 12F2                                        u920 1308  
                                      u921 1304                                        u930 175E  
                                      u931 175A                                        u940 1526  
                                      u941 1522                                        u950 1552  
                                      u951 154E                                        u880 1800  
                                      u960 1564                                        u881 17FC  
                                      u961 1560                                        u890 1B18  
                                      u970 1576                                        u891 1B14  
                                      u971 1572                                        u980 1586  
                                      u981 1582                                        u990 1970  
                                      u991 196C                            _timer1ReloadVal 0046  
                      ??_SPI1_ExchangeByte 0018                                        prod 000FF3  
                                      tosl 000FFD                                        wreg 000FE8  
                       _nrf24_read_rf_data 1A8A                             ?_nrf24_rf_init 0001  
                      VerifyBoardAddress@i 001E                                       l1119 1800  
                                     l1411 1B52                                       l1403 1B46  
                                     l2301 153A                                       l1261 125C  
                                     l1405 1B4C                                       l2061 1B2E  
                                     l2053 1B1E                                       l2311 1586  
                                     l2303 1540                                       l1263 1260  
                                     l1407 1B4E                                       l2055 1B22  
                                     l2321 1606                                       l2305 1552  
                                     l2313 158C                                       l2401 1ABE  
                                     l1265 1284                                       l1257 120E  
                                     l1409 1B50                                       l1361 19E6  
                                     l2057 1B26                                       l2251 17D6  
                                     l2323 1626                                       l2411 1AFE  
                                     l2315 158E                                       l2307 1564  
                                     l2403 1AC0                                       l1267 12B8  
                                     l1259 121C                                       l1363 19F6  
                                     l1371 1B42                                       l2059 1B2A  
                                     l2253 17E2                                       l2245 17B2  
                                     l2325 162A                                       l2317 15FC  
                                     l2421 1AE4                                       l2413 1B00  
                                     l2309 1576                                       l2341 195A  
                                     l2333 1938                                       l2405 1AC8  
                                     l1373 1B74                                       l1365 1A0E  
                                     l2247 17C6                                       l2255 17E6  
                                     l2271 12E6                                       l2327 163C  
                                     l2319 1600                                       l2423 1AE6  
                                     l2407 1AEE                                       l2351 186C  
                                     l2431 1AA6                                       l2343 195C  
                                     l2335 1940                                       l2511 1006  
                                     l1375 1B56                                       l1367 1B34  
                                     l2249 17D2                                       l2281 1336  
                                     l2273 12F6                                       l2265 12C0  
                                     l2329 164E                                       l2441 15D0  
                                     l2433 1592                                       l2257 1B06  
                                     l2417 1ACE                                       l2409 1AF6  
                                     l2361 1886                                       l2353 186E  
                                     l2337 1948                                       l2345 195E  
                                     l2521 1030                                       l2505 11D0  
                                     l1369 1B40                                       l2283 1358  
                                     l2275 1308                                       l2259 12BC  
                                     l2291 174A                                       l2371 166A  
                                     l2419 1ADC                                       l2363 1888  
                                     l2355 1870                                       l2347 1854  
                                     l2427 1A8A                                       l2339 1956  
                                     l2531 1080                                       l2523 1032  
                                     l2507 11F8                                       l2269 12E4  
                                     l2293 174C                                       l2373 1688  
                                     l2461 1454                                       l2453 13FC  
                                     l2445 15D6                                       l2365 188E  
                                     l2357 1876                                       l2349 185E  
                                     l2429 1A9C                                       l2541 10BA  
                                     l2533 1080                                       l2525 1042  
                                     l2517 100C                                       l2509 11FA  
                                     l2279 130E                                       l2287 170E  
                                     l2375 1692                                       l2455 140E  
                                     l2463 145E                                       l2447 15DA  
                                     l2439 159A                                       l2295 1516  
                                     l2367 189C                                       l2359 1884  
                                     l2391 18C6                                       l2383 18A4  
                                     l2551 10F4                                       l2543 10CA  
                                     l2535 108A                                       l2471 1144  
                                     l2289 1716                                       l2369 1664  
                                     l2457 141E                                       l2449 15F6  
                                     l2297 1526                                       l2393 18C8  
                                     l2385 18AA                                       l2553 10FC  
                                     l2537 1098                                       l2529 1058  
                                     l2481 1186                                       l2473 1156  
                                     l2643 1472                                       l2459 1440  
                                     l2299 1530                                       l2395 18DA  
                                     l2387 18B2                                       l2555 110C  
                                     l2547 10D2                                       l2539 10B0  
                                     l2491 11B8                                       l2483 1190  
                                     l2475 1168                                       l2645 16A8  
                                     l2397 18E6                                       l2389 18C2  
                                     l2549 10E6                                       l2493 11C2  
                                     l2485 119A                                       l2477 1172  
                                     l2469 1140                                       l2581 1A6A  
                                     l2399 1AAC                                       l2559 112C  
                                     l2495 11C4                                       l2487 11A4  
                                     l2479 117C                                       l1951 1A1E  
                                     l2583 1A78                                       l2497 11C8  
                                     l2489 11AE                                       l1953 1A26  
                                     l2585 1A7C                                       l2577 1A64  
                                     l2499 11CC                                       l1859 1B64  
                                     l1955 1A28                                       l2587 1A80  
                                     l2579 1A68                                       l1957 1A2A  
                                     l1949 1A12                                       l1959 1A36  
                     SuperMemCpy@destStart 001A                                       u1000 1682  
                                     u1001 167E                                       u1010 18DA  
                                     u1011 18D6                                       u1020 15D0  
                                     u1100 10CA                                       u1021 15CC  
                                     u1101 10C6                                       u1030 15F6  
                                     u1110 10F4                                       u1031 15F2  
                                     u1111 10F0                                       u1120 1128  
                                     u1040 120A                                       u1121 1124  
                                     u1041 1206                                       u1050 102C  
                                     u1051 1028                                       u1060 1042  
                                     u1061 103E                                       u1070 1054  
                                     u1071 1050                                       u1080 1098  
                                     u1081 1094                                       u1090 10A6  
                                     u1091 10A2                                       u1157 1AC2  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     u1167 1864                                       _LATC 000F8B  
                                     u1177 187C                                       u1187 1894  
                                     u1197 1ADE                                       _TMR1 000FCE  
                      ?_nrf24_read_rf_data 001E                                       _WPUB 000F61  
                               InitRadio@i 001E           nrf24_read_register@mnemonic_addr 0019  
                                     _main 1A64                        SuperMemCpy@srcStart 001D  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0048                   ProcessAckPayload@pktType 00CB  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 007C               __end_of_nrf24_write_register 1592  
                __end_of_SPI1_ExchangeByte 1B1E                 ??_TMR1_SetInterruptHandler 001A  
                             ___param_bank 000000                        _nrf24_read_register 1AEA  
                     ??_nrf24_read_rf_data 0021              __end_of_OSCILLATOR_Initialize 1B64  
                                    ?_main 0001                   ProcessActionRequest@data 00A0  
         SPI1_Open@spi1UniqueConfiguration 0019              nrf24_write_buff@mnemonic_addr 001C  
                                    _T1CON 000FCD                            __end_of___llmod 1512  
                                    i2l331 19E4                                      i2l156 1A62  
                                    i2l175 1B78                                      i2l337 17B0  
                                    i2l169 19AC                                      i2l197 0058  
                                    i2l279 13FA                                      i2l299 1932  
                                    i2l862 1500                                      i2l869 1510  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                 i2memcpy@d1 0001  
                               i2memcpy@s1 0003                                      _Ticks 0029  
                         __end_of_TMR1_ISR 19AE                       ?_nrf24_read_register 0001  
                  __end_of_TMR1_Initialize 1A3C                                      pclath 000FFA  
                                    pclatu 000FFB                                      tablat 000FF5  
                 nrf24_read_rf_data@buffer 001E                              i2_SuperMemCpy 1760  
                                    ttemp5 0049                                      ttemp6 004C  
                                    ttemp7 0050                                      status 000FD8  
                                    wtemp8 0049                   __end_of_nrf24_write_buff 1974  
                         __end_ofi2_memcpy 1852                            _TMR1_WriteTimer 1A3C  
                               SendError@i 0028                           ?_nrf24_read_buff 0019  
                          __initialization 16B8                               __end_of_main 1A8A  
                  ??_TimerInterruptHandler 0010                        QueueTXPacket@buffer 0023  
               __end_of_VerifyBoardAddress 15FA                ?_INTERRUPT_InterruptManager 0001  
                                   ??_main 0029                           __end_of_SendPing 19E6  
                            __activetblptr 000003                            ??_nrf24_rf_init 001A  
                    ??_nrf24_read_register 0019                           ___llmod@dividend 0001  
                       _nrf24_send_rf_data 1AAC                                     _ANSELA 000F38  
                                   _ANSELB 000F39                          i2SuperMemCpy@dest 0001  
                                   _ANSELC 000F3A                                     _T1GCON 000FCC  
                  TMR1_WriteTimer@timerVal 0001                                     i2l1119 1850  
                                   i2l2051 192E                                     i2l2045 18EA  
                                   i2l2047 18F6                                     i2l2063 1974  
                                   i2l2065 1976                                     i2l2067 1982  
                                   i2l2069 1994                                     i2l2181 002A  
                                   i2l2183 0038                                     i2l2185 0046  
                                   i2l2187 0054                                     i2l1901 19D4  
                                   i2l1823 135C                                     i2l1833 1384  
                                   i2l1843 13AE                                     i2l1835 1386  
                                   i2l1851 1760                                     i2l1781 1832  
                                   i2l1773 1802                                     i2l1845 13D6  
                                   i2l1837 1396                                     i2l1829 1360  
                                   i2l1853 1768                                     i2l1941 14C2  
                                   i2l1933 148A                                     i2l1775 1816  
                                   i2l1783 1836                                     i2l1847 13F8  
                                   i2l1839 13A8                                     i2l1855 179C  
                                   i2l1943 14E0                                     i2l1935 14A0  
                                   i2l1961 1A3C                                     i2l1777 1822  
                                   i2l1857 179E                                     i2l1945 14F0  
                                   i2l1937 14A8                                     i2l1963 1A4A  
                                   i2l1971 1A5A                                     i2l1779 1826  
                                   i2l1947 14FA                                     i2l1939 14B4  
                                   i2l1973 1A5E                                     i2l1965 1A4C  
                                   i2l1967 1A50                                     i2l1969 1A54  
                                   i2l1897 19AE                                     i2l1899 19B4  
                           ?i2_SuperMemCpy 0001                                     _OSCCON 000FD3  
                        i2QueueTXPacket@sz 000E                               SuperMemCpy@i 0023  
                      ?_nrf24_send_rf_data 001E                          __end_of_SPI1_Open 12BC  
     __end_of_TMR1_DefaultInterruptHandler 1B7A               _TMR1_DefaultInterruptHandler 1B78  
                              i2memcpy@tmp 000B                                  ??___llmod 0009  
                                   _config 002D                                     _memcpy 17B2  
                                   clear_0 16E0                                     clear_1 16F2  
                                   clear_2 16FE                                     isa$std 000001  
                          i2_QueueTXPacket 135C                       ??_nrf24_send_rf_data 0021  
                             __pdataCOMRAM 003E                               __mediumconst 0000  
                     _nrf24_write_register 1512                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
 TMR1_SetInterruptHandler@InterruptHandler 0018                    __end_of_TMR1_WriteTimer 1A64  
                         ?_TMR1_Initialize 0001                          _SYSTEM_Initialize 1B1E  
                        ?_HandlePacketLoop 0001                                 __accesstop 0060  
                  __end_of__initialization 1704                         ?_SYSTEM_Initialize 0001  
                       ??_HandlePacketLoop 0029                              ___rparam_used 000001  
                           __pcstackCOMRAM 0001                        ??_SYSTEM_Initialize 001A  
                                ?_TMR1_ISR 0001            fp__TMR1_DefaultInterruptHandler 0000  
            ?_TMR1_DefaultInterruptHandler 0001                          ??_SPI1_Initialize 0018  
                    SPI1_ExchangeByte@data 0018                          __end_of_InitRadio 120C  
                       _spi1_configuration 1001                      ?_nrf24_write_register 0019  
                                ?i2_memcpy 0001                          HandlePacketLoop@i 00CE  
                        __end_of_SendError 1660                  __end_of_SYSTEM_Initialize 1B34  
                          ??i2_SuperMemCpy 0008                 VerifyBoardAddress@bufferRX 0018  
                            ??_SuperMemCpy 001F                                 __pbssBANK0 0060  
                               __pnvCOMRAM 0044                                  ?_SendPing 0001  
                    __end_of_QueueTXPacket 135C                    __end_ofi2_QueueTXPacket 13FC  
                               ??_TMR1_ISR 0010                                    ?_memcpy 0018  
__end_of_nrf24_read_dynamic_payload_length 1AEA        ??_nrf24_read_dynamic_payload_length 0019  
       ?_nrf24_read_dynamic_payload_length 0001          _nrf24_read_dynamic_payload_length 1ACC  
                               ??i2_memcpy 0007                                    _OSCCON2 000FD2  
                                  i2u52_40 1850                                    i2u60_40 13A8  
                                  i2u52_41 184C                                    i2u60_41 13A4  
                                  i2u61_40 17B0                                    i2u61_41 17AC  
                                  _OSCTUNE 000F9B                                    i2u71_40 192A  
                                  i2u71_41 1926                                    i2u72_40 1994  
                                  i2u72_41 1990                                    i2u65_40 14A0  
                                  i2u65_41 149C                                    i2u58_40 1380  
                                  i2u66_40 14C2                                    i2u73_48 199A  
                                  i2u58_41 137C                                    i2u66_41 14BE  
                                  i2u73_49 19AC                                    i2u59_40 1396  
                                  i2u67_40 14E0                                    i2u59_41 1392  
                                  i2u67_41 14DC                                    i2u68_40 1A4A  
                                  i2u68_41 1A46                                    i2u85_40 0038  
                                  i2u85_41 0034                                    i2u86_40 0046  
                                  i2u86_41 0042                                    i2u87_40 0054  
                                  i2u87_41 0050                                    _SSP1ADD 000FC8  
                                  _SSP1BUF 000FC9                              SuperMemCpy@sz 001E  
                         ?_TMR1_WriteTimer 0001                          ?_nrf24_write_buff 0019  
                               ??_SendPing 0010                        __end_of_SuperMemCpy 1760  
                                  __Hparam 0000                             i2SuperMemCpy@i 000C  
                                  __Lparam 0000                         ??_nrf24_write_buff 001C  
                                  ___llmod 148A                               __psmallconst 1000  
            __end_of_TimerInterruptHandler 1934                                    __pcinit 16B8  
                                  __ramtop 1000                                    __ptext0 1A64  
                                  __ptext1 1B1E                                    __ptext2 1A12  
                                  __ptext3 1B64                                    __ptext4 1B34  
                                  __ptext5 19E6                                    __ptext6 1B56  
                                  __ptext7 1B74                                    __ptext8 1140  
                                  __ptext9 1B46             ??_TMR1_DefaultInterruptHandler 0001  
                   ??_nrf24_write_register 001A                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 1B56                   ??_PIN_MANAGER_Initialize 0018  
                ?_TMR1_SetInterruptHandler 0018                         _VerifyBoardAddress 1592  
                     end_of_initialization 1704                                    memcpy@d 001F  
                                  memcpy@n 001C                                    memcpy@s 0021  
                      ?_VerifyBoardAddress 0018                                    postdec1 000FE5  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                           ?i2_QueueTXPacket 000C  
                                _SPI1_Open 120C                __end_of_nrf24_read_register 1B04  
                     ??_VerifyBoardAddress 001A     nrf24_read_dynamic_payload_length@byte0 0019  
                        _nrf24_flush_tx_rx 1852                      nrf24_read_buff@buffer 0019  
                                _TRISCbits 000F94                      __end_of_nrf24_rf_init 1B56  
                          SuperMemCpy@dest 0018                         ?_nrf24_flush_tx_rx 0001  
                          QueueTXPacket@sz 0025                                _SuperMemCpy 170E  
                      ??_nrf24_flush_tx_rx 001B                            _SPI1_Initialize 1B34  
                 nrf24_send_rf_data@buffer 001E               __end_of_INTERRUPT_Initialize 1B78  
                               ?_SPI1_Open 0001                              __pidataCOMRAM 1B6E  
                                i2memcpy@d 0007                                  i2memcpy@n 0005  
                                i2memcpy@s 0009                             __end_of_memcpy 1802  
                   ?_OSCILLATOR_Initialize 0001                  __end_of_nrf24_flush_tx_rx 18A0  
                 fp__TimerInterruptHandler 0000                        start_initialization 16B8  
                                _InitRadio 1140                     HandlePacketLoop@status 00CD  
                                _SendError 15FA                            ___llmod@divisor 0005  
                         i2SuperMemCpy@src 0004                            ___llmod@counter 0009  
                         i2QueueTXPacket@i 000F                   nrf24_read_register@byte0 001A  
                       HandlePacketLoop@sz 00CC               __end_of_ProcessActionRequest 16B8  
                                 ??_memcpy 001E          nrf24_write_register@mnemonic_addr 001A  
                              __pbssBIGRAM 00CF                                __pbssCOMRAM 0029  
                            __pcstackBANK0 00A0                                 ?_InitRadio 0001  
                        ??_nrf24_read_buff 001C                    __end_of_SPI1_Initialize 1B46  
                   i2SuperMemCpy@destStart 0003                      __end_ofi2_SuperMemCpy 17B2  
             nrf24_read_buff@mnemonic_addr 001C                                 ?_SendError 0001  
                   _PIN_MANAGER_Initialize 19E6                  ProcessAckPayload@actionID 00CA  
                                __pintcode 0008           __end_of_TMR1_SetInterruptHandler 1B6E  
                         nrf24_read_buff@i 001D                  nrf24_write_register@value 0019  
                                 ?___llmod 0001                                ??_SPI1_Open 0018  
             ??_INTERRUPT_InterruptManager 0010                        ProcessAckPayload@sz 00A7  
                              __smallconst 1000                                  _packetsTX 00CF  
                     _INTERRUPT_Initialize 1B74                                   _LATAbits 000F89  
                                 _LATCbits 000F8B                                   _PIE1bits 000F9D  
                                 _PIR1bits 000F9E                                   _RCONbits 000FD0  
               __end_of_nrf24_read_rf_data 1AAC                                   _SSP1CON1 000FC6  
                                 _SSP1CON2 000FC5                                   _TMR1_ISR 1974  
                                 _SSP1STAT 000FC7                           _HandlePacketLoop 1006  
                     nrf24_read_buff@bytes 001B                          ??_TMR1_Initialize 001A  
                           SuperMemCpy@src 001B                             QueueTXPacket@i 0026  
                    _TimerInterruptHandler 18EA                      ProcessAckPayload@data 00AA  
                                 i2_memcpy 1802                                ??_InitRadio 001E  
                         ?_SPI1_Initialize 0001                                _INTCON2bits 000FF1  
                                copy_data0 16CC                      ?_INTERRUPT_Initialize 0001  
                             ?_SuperMemCpy 0018                       _ProcessActionRequest 1660  
                              ??_SendError 0027                                   _SendPing 19AE  
                          i2SuperMemCpy@sz 0007                                   __Hrparam 0000  
                                memcpy@tmp 001E                                   __Lrparam 0000  
                        _ProcessAckPayload 13FC                              _QueueTXPacket 12BC  
                       ?_ProcessAckPayload 00A5                    ??_OSCILLATOR_Initialize 0018  
                 _TMR1_SetInterruptHandler 1B64                       nrf24_read_rf_data@sz 0020  
                    _TMR1_InterruptHandler 0044                        ??_ProcessAckPayload 00A8  
                       SendError@errorCode 0027                                   __ptext10 120C  
                                 __ptext11 1006                                   __ptext20 1B04  
                                 __ptext12 1AAC                                   __ptext21 1592  
                                 __ptext13 1934                                 _T1GCONbits 000FCC  
                                 __ptext30 1B78                                   __ptext22 13FC  
                                 __ptext14 1A8A                                   __ptext31 18EA  
                                 __ptext23 1660                                   __ptext15 18A0  
                                 __ptext32 148A                                   __ptext24 15FA  
                                 __ptext16 1852                                   __ptext33 19AE  
                                 __ptext25 170E                                   __ptext17 1512  
                                 __ptext34 1760                                   __ptext26 12BC  
                                 __ptext18 1AEA                                   __ptext35 135C  
                                 __ptext27 17B2                                   __ptext19 1ACC  
                                 __ptext36 1802                                   __ptext37 1A3C  
                                 __ptext29 1974                                   __ptext38 0000  
                             _SSP1CON1bits 000FC6                                   _bufferRX 0060  
                                 _bufferTX 0080                      ?_ProcessActionRequest 00A0  
                    i2SuperMemCpy@srcStart 0006                          _DEFAULT_PIPE_ADDR 003E  
                __end_of_ProcessAckPayload 148A                             ?_QueueTXPacket 0023  
                                 isa$xinst 000000                          nrf24_write_buff@i 001D  
                                 int$flags 0048               ProcessActionRequest@actionID 00A4  
                          _nrf24_read_buff 18A0         __end_of_INTERRUPT_InterruptManager 007C  
               _INTERRUPT_InterruptManager 0008                          ??_TMR1_WriteTimer 0003  
               __end_of_nrf24_send_rf_data 1ACC                     ?_TimerInterruptHandler 0001  
                         _nrf24_write_buff 1934                                 _INTCONbits 000FF2  
                                 memcpy@d1 0018                                   memcpy@s1 001A  
                   ??_INTERRUPT_Initialize 0018                                   intlevel2 0000  
                  ?_PIN_MANAGER_Initialize 0001                     nrf24_write_buff@buffer 0019  
                    i2QueueTXPacket@buffer 000C                      nrf24_write_buff@bytes 001B  
                            _nrf24_rf_init 1B46                       nrf24_send_rf_data@sz 0020  
                   ??_ProcessActionRequest 00A2                          ??i2_QueueTXPacket 000F  
                 __end_of_HandlePacketLoop 1140             __end_of_PIN_MANAGER_Initialize 1A12  
                          ??_QueueTXPacket 0026                    __end_of_nrf24_read_buff 18EA  
                          _TMR1_Initialize 1A12                 __end_of_spi1_configuration 1005  



Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jul 15 17:27:41 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.35
    57                           ; Generated 05/05/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F26K22 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataBANK0
    93  001AD8                     __pidataBANK0:
    94                           	callstack 0
    95                           
    96                           ;initializer for _DEFAULT_PIPE_ADDR
    97  001AD8  68                 	db	104
    98  001AD9  65                 	db	101
    99  001ADA  6C                 	db	108
   100  001ADB  6C                 	db	108
   101  001ADC  6F                 	db	111
   102  001ADD  00                 	db	0
   103                           
   104                           	psect	smallconst
   105  001000                     __psmallconst:
   106                           	callstack 0
   107  001000  00                 	db	0
   108  001001                     _spi1_configuration:
   109                           	callstack 0
   110  001001  00                 	db	0
   111  001002  40                 	db	64
   112  001003  01                 	db	1
   113  001004  00                 	db	0
   114  001005                     __end_of_spi1_configuration:
   115                           	callstack 0
   116  0000                     _T1CON	set	4045
   117  0000                     _TMR1L	set	4046
   118  0000                     _TMR1H	set	4047
   119  0000                     _ANSELA	set	3896
   120  0000                     _ANSELB	set	3897
   121  0000                     _ANSELC	set	3898
   122  0000                     _LATA	set	3977
   123  001005  00                 	db	0	; dummy byte at the end
   124  0000                     
   125                           	psect	nvCOMRAM
   126  000035                     __pnvCOMRAM:
   127                           	callstack 0
   128  000035                     _TMR1_InterruptHandler:
   129                           	callstack 0
   130  000035                     	ds	2
   131  000037                     _timer1ReloadVal:
   132                           	callstack 0
   133  000037                     	ds	2
   134  0000                     _TMR1	set	4046
   135  0000                     _LATCbits	set	3979
   136  0000                     _LATAbits	set	3977
   137  0000                     _T1GCONbits	set	4044
   138  0000                     _T1CONbits	set	4045
   139  0000                     _SSP1CON1bits	set	4038
   140  0000                     _TRISCbits	set	3988
   141  0000                     _TRISA	set	3986
   142  0000                     _LATC	set	3979
   143  0000                     _LATB	set	3978
   144  0000                     _OSCTUNE	set	3995
   145  0000                     _PIR1bits	set	3998
   146  0000                     _SSP1CON2	set	4037
   147  0000                     _SSP1CON1	set	4038
   148  0000                     _SSP1STAT	set	4039
   149  0000                     _INTCON2bits	set	4081
   150  0000                     _TRISC	set	3988
   151  0000                     _TRISB	set	3987
   152  0000                     _WPUB	set	3937
   153  0000                     _INTCONbits	set	4082
   154  0000                     _T1GCON	set	4044
   155  0000                     _OSCCON2	set	4050
   156  0000                     _OSCCON	set	4051
   157  0000                     _SSP1BUF	set	4041
   158  0000                     _SSP1ADD	set	4040
   159  0000                     _PIE1bits	set	3997
   160  0000                     _RCONbits	set	4048
   161                           
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165  0016FE                     __pcinit:
   166                           	callstack 0
   167  0016FE                     start_initialization:
   168                           	callstack 0
   169  0016FE                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Initialize objects allocated to BANK0 (6 bytes)
   173                           ; load TBLPTR registers with __pidataBANK0
   174  0016FE  0ED8               	movlw	low __pidataBANK0
   175  001700  6EF6               	movwf	tblptrl,c
   176  001702  0E1A               	movlw	high __pidataBANK0
   177  001704  6EF7               	movwf	tblptrh,c
   178  001706  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   179  001708  6EF8               	movwf	tblptru,c
   180  00170A  EE00  F0C4         	lfsr	0,__pdataBANK0
   181  00170E  EE10 F006          	lfsr	1,6
   182  001712                     copy_data0:
   183  001712  0009               	tblrd		*+
   184  001714  CFF5 FFEE          	movff	tablat,postinc0
   185  001718  50E5               	movf	postdec1,w,c
   186  00171A  50E1               	movf	fsr1l,w,c
   187  00171C  E1FA               	bnz	copy_data0
   188                           
   189                           ; Clear objects allocated to BIGRAM (272 bytes)
   190  00171E  EE00  F0CA         	lfsr	0,__pbssBIGRAM
   191  001722  EE11 F010          	lfsr	1,272
   192  001726                     clear_0:
   193  001726  6AEE               	clrf	postinc0,c
   194  001728  50E5               	movf	postdec1,w,c
   195  00172A  50E1               	movf	fsr1l,w,c
   196  00172C  E1FC               	bnz	clear_0
   197  00172E  50E2               	movf	fsr1h,w,c
   198  001730  E1FA               	bnz	clear_0
   199                           
   200                           ; Clear objects allocated to BANK0 (64 bytes)
   201  001732  EE00  F060         	lfsr	0,__pbssBANK0
   202  001736  0E40               	movlw	64
   203  001738                     clear_1:
   204  001738  6AEE               	clrf	postinc0,c
   205  00173A  06E8               	decf	wreg,f,c
   206  00173C  E1FD               	bnz	clear_1
   207                           
   208                           ; Clear objects allocated to COMRAM (10 bytes)
   209  00173E  EE00  F02B         	lfsr	0,__pbssCOMRAM
   210  001742  0E0A               	movlw	10
   211  001744                     clear_2:
   212  001744  6AEE               	clrf	postinc0,c
   213  001746  06E8               	decf	wreg,f,c
   214  001748  E1FD               	bnz	clear_2
   215  00174A                     end_of_initialization:
   216                           	callstack 0
   217  00174A                     __end_of__initialization:
   218                           	callstack 0
   219  00174A  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220  00174C  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221  00174E  0100               	movlb	0
   222  001750  EFE7  F00C         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  00002B                     __pbssCOMRAM:
   226                           	callstack 0
   227  00002B                     _config:
   228                           	callstack 0
   229  00002B                     	ds	6
   230  000031                     _Ticks:
   231                           	callstack 0
   232  000031                     	ds	4
   233                           
   234                           	psect	bssBANK0
   235  000060                     __pbssBANK0:
   236                           	callstack 0
   237  000060                     _bufferRX:
   238                           	callstack 0
   239  000060                     	ds	32
   240  000080                     _bufferTX:
   241                           	callstack 0
   242  000080                     	ds	32
   243                           
   244                           	psect	dataBANK0
   245  0000C4                     __pdataBANK0:
   246                           	callstack 0
   247  0000C4                     _DEFAULT_PIPE_ADDR:
   248                           	callstack 0
   249  0000C4                     	ds	6
   250                           
   251                           	psect	bssBIGRAM
   252  0000CA                     __pbssBIGRAM:
   253                           	callstack 0
   254  0000CA                     _packetsTX:
   255                           	callstack 0
   256  0000CA                     	ds	272
   257                           
   258                           	psect	cstackBANK0
   259  0000A0                     __pcstackBANK0:
   260                           	callstack 0
   261  0000A0                     ProcessAckPayload@data:
   262                           	callstack 0
   263                           
   264                           ; 32 bytes @ 0x0
   265  0000A0                     	ds	32
   266  0000C0                     ProcessAckPayload@actionID:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x20
   270  0000C0                     	ds	1
   271  0000C1                     ProcessAckPayload@pktType:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x21
   275  0000C1                     	ds	1
   276  0000C2                     ProcessAckPayload@i:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x22
   280  0000C2                     	ds	2
   281                           
   282                           	psect	cstackCOMRAM
   283  000001                     __pcstackCOMRAM:
   284                           	callstack 0
   285  000001                     ?___llmod:
   286                           	callstack 0
   287  000001                     TMR1_WriteTimer@timerVal:
   288                           	callstack 0
   289  000001                     i2QueueTXPacket@buffer:
   290                           	callstack 0
   291  000001                     ___llmod@dividend:
   292                           	callstack 0
   293                           
   294                           ; 4 bytes @ 0x0
   295  000001                     	ds	2
   296  000003                     i2QueueTXPacket@sz:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x2
   300  000003                     	ds	1
   301  000004                     ??i2_QueueTXPacket:
   302                           
   303                           ; 1 bytes @ 0x3
   304  000004                     	ds	1
   305  000005                     ___llmod@divisor:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x4
   309  000005                     	ds	1
   310  000006                     i2QueueTXPacket@j:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x5
   314  000006                     	ds	1
   315  000007                     i2QueueTXPacket@i:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x6
   319  000007                     	ds	1
   320  000008                     SendPing@i:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x7
   324  000008                     	ds	1
   325  000009                     ___llmod@counter:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x8
   329  000009                     	ds	1
   330  00000A                     ??_INTERRUPT_InterruptManager:
   331                           
   332                           ; 1 bytes @ 0x9
   333  00000A                     	ds	8
   334  000012                     ??_SPI1_Open:
   335  000012                     SPI1_ExchangeByte@data:
   336                           	callstack 0
   337  000012                     TMR1_SetInterruptHandler@InterruptHandler:
   338                           	callstack 0
   339  000012                     QueueTXPacket@buffer:
   340                           	callstack 0
   341  000012                     VerifyBoardAddress@bufferRX:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x11
   345  000012                     	ds	1
   346  000013                     SPI1_Open@spi1UniqueConfiguration:
   347                           	callstack 0
   348  000013                     nrf24_write_register@value:
   349                           	callstack 0
   350  000013                     nrf24_read_register@mnemonic_addr:
   351                           	callstack 0
   352  000013                     nrf24_read_dynamic_payload_length@byte0:
   353                           	callstack 0
   354  000013                     nrf24_write_buff@buffer:
   355                           	callstack 0
   356  000013                     nrf24_read_buff@buffer:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x12
   360  000013                     	ds	1
   361  000014                     ??_VerifyBoardAddress:
   362  000014                     QueueTXPacket@sz:
   363                           	callstack 0
   364  000014                     nrf24_write_register@mnemonic_addr:
   365                           	callstack 0
   366  000014                     nrf24_read_register@byte0:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x13
   370  000014                     	ds	1
   371  000015                     ??_nrf24_flush_tx_rx:
   372  000015                     ??_QueueTXPacket:
   373  000015                     nrf24_write_buff@bytes:
   374                           	callstack 0
   375  000015                     nrf24_read_buff@bytes:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x14
   379  000015                     	ds	1
   380  000016                     nrf24_write_buff@mnemonic_addr:
   381                           	callstack 0
   382  000016                     nrf24_read_buff@mnemonic_addr:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x15
   386  000016                     	ds	1
   387  000017                     QueueTXPacket@j:
   388                           	callstack 0
   389  000017                     nrf24_write_buff@i:
   390                           	callstack 0
   391  000017                     nrf24_read_buff@i:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x16
   395  000017                     	ds	1
   396  000018                     InitRadio@i:
   397                           	callstack 0
   398  000018                     QueueTXPacket@i:
   399                           	callstack 0
   400  000018                     VerifyBoardAddress@i:
   401                           	callstack 0
   402  000018                     nrf24_send_rf_data@buffer:
   403                           	callstack 0
   404  000018                     nrf24_read_rf_data@buffer:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x17
   408  000018                     	ds	1
   409  000019                     SendError@errorCode:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x18
   413  000019                     	ds	1
   414  00001A                     SendError@i:
   415                           	callstack 0
   416  00001A                     nrf24_send_rf_data@sz:
   417                           	callstack 0
   418  00001A                     nrf24_read_rf_data@sz:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x19
   422  00001A                     	ds	1
   423  00001B                     ProcessActionRequest@data:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x1A
   427  00001B                     	ds	2
   428  00001D                     ??_ProcessActionRequest:
   429                           
   430                           ; 1 bytes @ 0x1C
   431  00001D                     	ds	2
   432  00001F                     ProcessActionRequest@actionID:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x1E
   436  00001F                     	ds	1
   437  000020                     ProcessAckPayload@buffer:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x1F
   441  000020                     	ds	2
   442  000022                     ProcessAckPayload@sz:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x21
   446  000022                     	ds	1
   447  000023                     ??_ProcessAckPayload:
   448                           
   449                           ; 1 bytes @ 0x22
   450  000023                     	ds	5
   451  000028                     HandlePacketLoop@sz:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x27
   455  000028                     	ds	1
   456  000029                     HandlePacketLoop@status:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x28
   460  000029                     	ds	1
   461  00002A                     HandlePacketLoop@i:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x29
   465  00002A                     	ds	1
   466  00002B                     
   467                           ; 1 bytes @ 0x2A
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 11 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels required when called: 10
   493 ;; This function calls:
   494 ;;		_HandlePacketLoop
   495 ;;		_InitRadio
   496 ;;		_SYSTEM_Initialize
   497 ;;		_TMR1_SetInterruptHandler
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text0
   504  0019CE                     __ptext0:
   505                           	callstack 0
   506  0019CE                     _main:
   507                           	callstack 21
   508  0019CE                     
   509                           ;main.c: 13:     SYSTEM_Initialize();
   510  0019CE  EC44  F00D         	call	_SYSTEM_Initialize	;wreg free
   511  0019D2                     
   512                           ;main.c: 20:     (INTCONbits.GIE = 1);
   513  0019D2  8EF2               	bsf	242,7,c	;volatile
   514  0019D4                     
   515                           ;main.c: 26:     (INTCONbits.PEIE = 1);
   516  0019D4  8CF2               	bsf	242,6,c	;volatile
   517                           
   518                           ;main.c: 30:     TMR1_SetInterruptHandler(TimerInterruptHandler);
   519  0019D6  0EF6               	movlw	low _TimerInterruptHandler
   520  0019D8  6E12               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   521  0019DA  0E17               	movlw	high _TimerInterruptHandler
   522  0019DC  6E13               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   523  0019DE  EC67  F00D         	call	_TMR1_SetInterruptHandler	;wreg free
   524  0019E2                     
   525                           ;main.c: 32:     InitRadio();
   526  0019E2  EC06  F009         	call	_InitRadio	;wreg free
   527  0019E6                     l2583:
   528                           
   529                           ;main.c: 35:         HandlePacketLoop();
   530  0019E6  EC03  F008         	call	_HandlePacketLoop	;wreg free
   531  0019EA                     
   532                           ;main.c: 36:         __nop();
   533  0019EA  F000               	nop	
   534  0019EC  EFF3  F00C         	goto	l2583
   535  0019F0  EF3E  F000         	goto	start
   536  0019F4                     __end_of_main:
   537                           	callstack 0
   538                           
   539 ;; *************** function _SYSTEM_Initialize *****************
   540 ;; Defined at:
   541 ;;		line 50 in file "mcc_generated_files/mcc.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; Hardware stack levels required when called: 7
   562 ;; This function calls:
   563 ;;		_INTERRUPT_Initialize
   564 ;;		_OSCILLATOR_Initialize
   565 ;;		_PIN_MANAGER_Initialize
   566 ;;		_SPI1_Initialize
   567 ;;		_TMR1_Initialize
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text1
   574  001A88                     __ptext1:
   575                           	callstack 0
   576  001A88                     _SYSTEM_Initialize:
   577                           	callstack 23
   578  001A88                     
   579                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   580  001A88  EC6F  F00D         	call	_INTERRUPT_Initialize	;wreg free
   581  001A8C                     
   582                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
   583  001A8C  EC4F  F00D         	call	_SPI1_Initialize	;wreg free
   584  001A90                     
   585                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
   586  001A90  ECA8  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
   587  001A94                     
   588                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
   589  001A94  EC60  F00D         	call	_OSCILLATOR_Initialize	;wreg free
   590  001A98                     
   591                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
   592  001A98  ECBE  F00C         	call	_TMR1_Initialize	;wreg free
   593  001A9C  0012               	return		;funcret
   594  001A9E                     __end_of_SYSTEM_Initialize:
   595                           	callstack 0
   596                           
   597 ;; *************** function _TMR1_Initialize *****************
   598 ;; Defined at:
   599 ;;		line 64 in file "mcc_generated_files/tmr1.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used: 1
   619 ;; Hardware stack levels required when called: 6
   620 ;; This function calls:
   621 ;;		_TMR1_SetInterruptHandler
   622 ;; This function is called by:
   623 ;;		_SYSTEM_Initialize
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text2
   628  00197C                     __ptext2:
   629                           	callstack 0
   630  00197C                     _TMR1_Initialize:
   631                           	callstack 23
   632  00197C                     
   633                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
   634  00197C  0E00               	movlw	0
   635  00197E  6ECC               	movwf	204,c	;volatile
   636                           
   637                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x0B;
   638  001980  0E0B               	movlw	11
   639  001982  6ECF               	movwf	207,c	;volatile
   640                           
   641                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xDC;
   642  001984  0EDC               	movlw	220
   643  001986  6ECE               	movwf	206,c	;volatile
   644  001988                     
   645                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
   646  001988  CFCE F037          	movff	4046,_timer1ReloadVal	;volatile
   647  00198C  CFCF F038          	movff	4047,_timer1ReloadVal+1	;volatile
   648  001990                     
   649                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
   650  001990  909E               	bcf	158,0,c	;volatile
   651  001992                     
   652                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
   653  001992  809D               	bsf	157,0,c	;volatile
   654  001994                     
   655                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
   656  001994  0EE2               	movlw	low _TMR1_DefaultInterruptHandler
   657  001996  6E12               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   658  001998  0E1A               	movlw	high _TMR1_DefaultInterruptHandler
   659  00199A  6E13               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   660  00199C  EC67  F00D         	call	_TMR1_SetInterruptHandler	;wreg free
   661  0019A0                     
   662                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x21;
   663  0019A0  0E21               	movlw	33
   664  0019A2  6ECD               	movwf	205,c	;volatile
   665  0019A4  0012               	return		;funcret
   666  0019A6                     __end_of_TMR1_Initialize:
   667                           	callstack 0
   668                           
   669 ;; *************** function _TMR1_SetInterruptHandler *****************
   670 ;; Defined at:
   671 ;;		line 172 in file "mcc_generated_files/tmr1.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;  InterruptHan    2   17[COMRAM] PTR FTN()void 
   674 ;;		 -> TimerInterruptHandler(1), TMR1_DefaultInterruptHandler(1), 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:        2 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 5
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_TMR1_Initialize
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text3
   702  001ACE                     __ptext3:
   703                           	callstack 0
   704  001ACE                     _TMR1_SetInterruptHandler:
   705                           	callstack 25
   706  001ACE                     
   707                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
   708  001ACE  C012  F035         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
   709  001AD2  C013  F036         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
   710  001AD6  0012               	return		;funcret
   711  001AD8                     __end_of_TMR1_SetInterruptHandler:
   712                           	callstack 0
   713                           
   714 ;; *************** function _SPI1_Initialize *****************
   715 ;; Defined at:
   716 ;;		line 62 in file "mcc_generated_files/spi1.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, status,2
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;Total ram usage:        0 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 5
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_SYSTEM_Initialize
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text4
   745  001A9E                     __ptext4:
   746                           	callstack 0
   747  001A9E                     _SPI1_Initialize:
   748                           	callstack 24
   749  001A9E                     
   750                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
   751  001A9E  0E40               	movlw	64
   752  001AA0  6EC7               	movwf	199,c	;volatile
   753                           
   754                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
   755  001AA2  0E00               	movlw	0
   756  001AA4  6EC6               	movwf	198,c	;volatile
   757                           
   758                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
   759  001AA6  0E01               	movlw	1
   760  001AA8  6EC8               	movwf	200,c	;volatile
   761  001AAA                     
   762                           ;mcc_generated_files/spi1.c: 68:     TRISCbits.TRISC3 = 0;
   763  001AAA  9694               	bcf	148,3,c	;volatile
   764  001AAC                     
   765                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
   766  001AAC  9AC6               	bcf	198,5,c	;volatile
   767  001AAE  0012               	return		;funcret
   768  001AB0                     __end_of_SPI1_Initialize:
   769                           	callstack 0
   770                           
   771 ;; *************** function _PIN_MANAGER_Initialize *****************
   772 ;; Defined at:
   773 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; Hardware stack levels required when called: 5
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_SYSTEM_Initialize
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text5
   802  001950                     __ptext5:
   803                           	callstack 0
   804  001950                     _PIN_MANAGER_Initialize:
   805                           	callstack 24
   806  001950                     
   807                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   808  001950  0E00               	movlw	0
   809  001952  6E89               	movwf	137,c	;volatile
   810                           
   811                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   812  001954  0E00               	movlw	0
   813  001956  6E8A               	movwf	138,c	;volatile
   814                           
   815                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   816  001958  0E00               	movlw	0
   817  00195A  6E8B               	movwf	139,c	;volatile
   818                           
   819                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFD;
   820  00195C  0EFD               	movlw	253
   821  00195E  6E92               	movwf	146,c	;volatile
   822  001960                     
   823                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   824  001960  6893               	setf	147,c	;volatile
   825                           
   826                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD1;
   827  001962  0ED1               	movlw	209
   828  001964  6E94               	movwf	148,c	;volatile
   829                           
   830                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC4;
   831  001966  0EC4               	movlw	196
   832  001968  010F               	movlb	15	; () banked
   833  00196A  6F3A               	movwf	58,b	;volatile
   834                           
   835                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
   836  00196C  0E3F               	movlw	63
   837  00196E  6F39               	movwf	57,b	;volatile
   838                           
   839                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2D;
   840  001970  0E2D               	movlw	45
   841  001972  6F38               	movwf	56,b	;volatile
   842                           
   843                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   844  001974  0E00               	movlw	0
   845  001976  6E61               	movwf	97,c	;volatile
   846  001978                     
   847                           ; BSR set to: 15
   848                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   849  001978  8EF1               	bsf	241,7,c	;volatile
   850  00197A                     
   851                           ; BSR set to: 15
   852  00197A  0012               	return		;funcret
   853  00197C                     __end_of_PIN_MANAGER_Initialize:
   854                           	callstack 0
   855                           
   856 ;; *************** function _OSCILLATOR_Initialize *****************
   857 ;; Defined at:
   858 ;;		line 60 in file "mcc_generated_files/mcc.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; Hardware stack levels required when called: 5
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_SYSTEM_Initialize
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text6
   887  001AC0                     __ptext6:
   888                           	callstack 0
   889  001AC0                     _OSCILLATOR_Initialize:
   890                           	callstack 24
   891  001AC0                     
   892                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x30;
   893  001AC0  0E30               	movlw	48
   894  001AC2  6ED3               	movwf	211,c	;volatile
   895                           
   896                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
   897  001AC4  0E04               	movlw	4
   898  001AC6  6ED2               	movwf	210,c	;volatile
   899                           
   900                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
   901  001AC8  0E00               	movlw	0
   902  001ACA  6E9B               	movwf	155,c	;volatile
   903  001ACC  0012               	return		;funcret
   904  001ACE                     __end_of_OSCILLATOR_Initialize:
   905                           	callstack 0
   906                           
   907 ;; *************** function _INTERRUPT_Initialize *****************
   908 ;; Defined at:
   909 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		None
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used: 1
   929 ;; Hardware stack levels required when called: 5
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_SYSTEM_Initialize
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text7
   938  001ADE                     __ptext7:
   939                           	callstack 0
   940  001ADE                     _INTERRUPT_Initialize:
   941                           	callstack 24
   942  001ADE                     
   943                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   944  001ADE  9ED0               	bcf	208,7,c	;volatile
   945  001AE0  0012               	return		;funcret
   946  001AE2                     __end_of_INTERRUPT_Initialize:
   947                           	callstack 0
   948                           
   949 ;; *************** function _InitRadio *****************
   950 ;; Defined at:
   951 ;;		line 25 in file "handler.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  i               1   23[COMRAM] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;Total ram usage:        1 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 7
   972 ;; This function calls:
   973 ;;		_nrf24_rf_init
   974 ;;		_nrf24_write_buff
   975 ;;		_nrf24_write_register
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text8
   982  00120C                     __ptext8:
   983                           	callstack 0
   984  00120C                     _InitRadio:
   985                           	callstack 23
   986  00120C                     
   987                           ;handler.c: 26:     nrf24_rf_init();
   988  00120C  EC58  F00D         	call	_nrf24_rf_init	;wreg free
   989  001210                     
   990                           ;handler.c: 28:     nrf24_write_buff(0x10, DEFAULT_PIPE_ADDR, 5);
   991  001210  0EC4               	movlw	low _DEFAULT_PIPE_ADDR
   992  001212  6E13               	movwf	nrf24_write_buff@buffer^0,c
   993  001214  0E00               	movlw	high _DEFAULT_PIPE_ADDR
   994  001216  6E14               	movwf	(nrf24_write_buff@buffer+1)^0,c
   995  001218  0E05               	movlw	5
   996  00121A  6E15               	movwf	nrf24_write_buff@bytes^0,c
   997  00121C  0E10               	movlw	16
   998  00121E  EC6B  F00C         	call	_nrf24_write_buff
   999  001222                     
  1000                           ;handler.c: 29:     nrf24_write_buff(0x0A, DEFAULT_PIPE_ADDR, 5);
  1001  001222  0EC4               	movlw	low _DEFAULT_PIPE_ADDR
  1002  001224  6E13               	movwf	nrf24_write_buff@buffer^0,c
  1003  001226  0E00               	movlw	high _DEFAULT_PIPE_ADDR
  1004  001228  6E14               	movwf	(nrf24_write_buff@buffer+1)^0,c
  1005  00122A  0E05               	movlw	5
  1006  00122C  6E15               	movwf	nrf24_write_buff@bytes^0,c
  1007  00122E  0E0A               	movlw	10
  1008  001230  EC6B  F00C         	call	_nrf24_write_buff
  1009  001234                     
  1010                           ;handler.c: 31:     nrf24_write_register(0x00, 0b1111010);
  1011  001234  0E7A               	movlw	122
  1012  001236  6E13               	movwf	nrf24_write_register@value^0,c
  1013  001238  0E00               	movlw	0
  1014  00123A  ECD4  F00A         	call	_nrf24_write_register
  1015  00123E                     
  1016                           ;handler.c: 33:     nrf24_write_register(0x01, 0b1);
  1017  00123E  0E01               	movlw	1
  1018  001240  6E13               	movwf	nrf24_write_register@value^0,c
  1019  001242  0E01               	movlw	1
  1020  001244  ECD4  F00A         	call	_nrf24_write_register
  1021  001248                     
  1022                           ;handler.c: 35:     nrf24_write_register(0x02, 0b1);
  1023  001248  0E01               	movlw	1
  1024  00124A  6E13               	movwf	nrf24_write_register@value^0,c
  1025  00124C  0E02               	movlw	2
  1026  00124E  ECD4  F00A         	call	_nrf24_write_register
  1027  001252                     
  1028                           ;handler.c: 37:     nrf24_write_register(0x03, 0b11);
  1029  001252  0E03               	movlw	3
  1030  001254  6E13               	movwf	nrf24_write_register@value^0,c
  1031  001256  0E03               	movlw	3
  1032  001258  ECD4  F00A         	call	_nrf24_write_register
  1033  00125C                     
  1034                           ;handler.c: 39:     nrf24_write_register(0x04, 0b11011111);
  1035  00125C  0EDF               	movlw	223
  1036  00125E  6E13               	movwf	nrf24_write_register@value^0,c
  1037  001260  0E04               	movlw	4
  1038  001262  ECD4  F00A         	call	_nrf24_write_register
  1039  001266                     
  1040                           ;handler.c: 41:     nrf24_write_register(0x05, 115);
  1041  001266  0E73               	movlw	115
  1042  001268  6E13               	movwf	nrf24_write_register@value^0,c
  1043  00126A  0E05               	movlw	5
  1044  00126C  ECD4  F00A         	call	_nrf24_write_register
  1045  001270                     
  1046                           ;handler.c: 43:     nrf24_write_register(0x06, 0b1110);
  1047  001270  0E0E               	movlw	14
  1048  001272  6E13               	movwf	nrf24_write_register@value^0,c
  1049  001274  0E06               	movlw	6
  1050  001276  ECD4  F00A         	call	_nrf24_write_register
  1051  00127A                     
  1052                           ;handler.c: 45:     nrf24_write_register(0x1D, 0b110);
  1053  00127A  0E06               	movlw	6
  1054  00127C  6E13               	movwf	nrf24_write_register@value^0,c
  1055  00127E  0E1D               	movlw	29
  1056  001280  ECD4  F00A         	call	_nrf24_write_register
  1057  001284                     
  1058                           ;handler.c: 47:     nrf24_write_register(0x1C, 0b1);
  1059  001284  0E01               	movlw	1
  1060  001286  6E13               	movwf	nrf24_write_register@value^0,c
  1061  001288  0E1C               	movlw	28
  1062  00128A  ECD4  F00A         	call	_nrf24_write_register
  1063  00128E                     
  1064                           ;handler.c: 48:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1065  00128E  D000               	nop2		;2 cycle nop
  1066  001290                     
  1067                           ;handler.c: 51:     config.IsConfigured = 0;
  1068  001290  0E00               	movlw	0
  1069  001292  6E2B               	movwf	_config^0,c
  1070  001294                     
  1071                           ;handler.c: 52:     config.PingInterval = 2;
  1072  001294  0E00               	movlw	0
  1073  001296  6E30               	movwf	(_config+5)^0,c
  1074  001298  0E02               	movlw	2
  1075  00129A  6E2F               	movwf	(_config+4)^0,c
  1076  00129C                     
  1077                           ;handler.c: 55:     for (uint8_t i = 0; i < 8; i++) {
  1078  00129C  0E00               	movlw	0
  1079  00129E  6E18               	movwf	InitRadio@i^0,c
  1080  0012A0                     l2503:
  1081                           
  1082                           ;handler.c: 56:         packetsTX[i].free = 1;
  1083  0012A0  5018               	movf	InitRadio@i^0,w,c
  1084  0012A2  0D22               	mullw	34
  1085  0012A4  0EEA               	movlw	low (_packetsTX+32)
  1086  0012A6  24F3               	addwf	243,w,c
  1087  0012A8  6ED9               	movwf	fsr2l,c
  1088  0012AA  0E00               	movlw	high (_packetsTX+32)
  1089  0012AC  20F4               	addwfc	prodh,w,c
  1090  0012AE  6EDA               	movwf	fsr2h,c
  1091  0012B0  0E01               	movlw	1
  1092  0012B2  6EDF               	movwf	indf2,c
  1093                           
  1094                           ;handler.c: 57:         packetsTX[i].size = 0;
  1095  0012B4  5018               	movf	InitRadio@i^0,w,c
  1096  0012B6  0D22               	mullw	34
  1097  0012B8  0EEB               	movlw	low (_packetsTX+33)
  1098  0012BA  24F3               	addwf	243,w,c
  1099  0012BC  6ED9               	movwf	fsr2l,c
  1100  0012BE  0E00               	movlw	high (_packetsTX+33)
  1101  0012C0  20F4               	addwfc	prodh,w,c
  1102  0012C2  6EDA               	movwf	fsr2h,c
  1103  0012C4  0E00               	movlw	0
  1104  0012C6  6EDF               	movwf	indf2,c
  1105  0012C8                     
  1106                           ;handler.c: 58:     }
  1107  0012C8  2A18               	incf	InitRadio@i^0,f,c
  1108  0012CA  0E07               	movlw	7
  1109  0012CC  6418               	cpfsgt	InitRadio@i^0,c
  1110  0012CE  EF6B  F009         	goto	u1081
  1111  0012D2  EF6D  F009         	goto	u1080
  1112  0012D6                     u1081:
  1113  0012D6  EF50  F009         	goto	l2503
  1114  0012DA                     u1080:
  1115  0012DA  0012               	return		;funcret
  1116  0012DC                     __end_of_InitRadio:
  1117                           	callstack 0
  1118                           
  1119 ;; *************** function _nrf24_rf_init *****************
  1120 ;; Defined at:
  1121 ;;		line 70 in file "../lib/nrf24_lib.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 6
  1142 ;; This function calls:
  1143 ;;		_SPI1_Open
  1144 ;; This function is called by:
  1145 ;;		_InitRadio
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text9
  1150  001AB0                     __ptext9:
  1151                           	callstack 0
  1152  001AB0                     _nrf24_rf_init:
  1153                           	callstack 23
  1154  001AB0                     
  1155                           ;../lib/nrf24_lib.c: 71:     SPI1_Open(SPI1_DEFAULT);
  1156  001AB0  0E00               	movlw	0
  1157  001AB2  EC38  F00A         	call	_SPI1_Open
  1158  001AB6  9294               	bcf	148,1,c	;volatile
  1159  001AB8  9494               	bcf	148,2,c	;volatile
  1160  001ABA  828B               	bsf	139,1,c	;volatile
  1161  001ABC  948B               	bcf	139,2,c	;volatile
  1162  001ABE  0012               	return		;funcret
  1163  001AC0                     __end_of_nrf24_rf_init:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _SPI1_Open *****************
  1167 ;; Defined at:
  1168 ;;		line 72 in file "mcc_generated_files/spi1.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  spi1UniqueCo    1    wreg     enum E355
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  spi1UniqueCo    1   18[COMRAM] enum E355
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      _Bool 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 5
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_nrf24_rf_init
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text10
  1197  001470                     __ptext10:
  1198                           	callstack 0
  1199  001470                     _SPI1_Open:
  1200                           	callstack 23
  1201                           
  1202                           ;incstack = 0
  1203                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  1204  001470  6E13               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
  1205  001472                     
  1206                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  1207  001472  BAC6               	btfsc	198,5,c	;volatile
  1208  001474  EF3E  F00A         	goto	u621
  1209  001478  EF40  F00A         	goto	u620
  1210  00147C                     u621:
  1211  00147C  EF8F  F00A         	goto	l55
  1212  001480                     u620:
  1213  001480                     
  1214                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  1215  001480  5013               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1216  001482  0D04               	mullw	4
  1217  001484  0E01               	movlw	1
  1218  001486  26F3               	addwf	243,f,c
  1219  001488  0E00               	movlw	0
  1220  00148A  22F4               	addwfc	244,f,c
  1221  00148C  0E01               	movlw	low _spi1_configuration
  1222  00148E  24F3               	addwf	243,w,c
  1223  001490  6EF6               	movwf	tblptrl,c
  1224  001492  0E10               	movlw	high _spi1_configuration
  1225  001494  20F4               	addwfc	244,w,c
  1226  001496  6EF7               	movwf	tblptrh,c
  1227  001498                     	if	1	;There are 3 active tblptr bytes
  1228  001498  6AF8               	clrf	tblptru,c
  1229  00149A  0E00               	movlw	low (__mediumconst shr (0+16))
  1230  00149C  22F8               	addwfc	tblptru,f,c
  1231  00149E                     	endif
  1232  00149E  0008               	tblrd		*
  1233  0014A0  CFF5 FFC7          	movff	tablat,4039	;volatile
  1234                           
  1235                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  1236  0014A4  5013               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1237  0014A6  0D04               	mullw	4
  1238  0014A8  0E01               	movlw	low _spi1_configuration
  1239  0014AA  24F3               	addwf	243,w,c
  1240  0014AC  6EF6               	movwf	tblptrl,c
  1241  0014AE  0E10               	movlw	high _spi1_configuration
  1242  0014B0  20F4               	addwfc	244,w,c
  1243  0014B2  6EF7               	movwf	tblptrh,c
  1244  0014B4                     	if	1	;There are 3 active tblptr bytes
  1245  0014B4  6AF8               	clrf	tblptru,c
  1246  0014B6  0E00               	movlw	low (__mediumconst shr (0+16))
  1247  0014B8  22F8               	addwfc	tblptru,f,c
  1248  0014BA                     	endif
  1249  0014BA  0008               	tblrd		*
  1250  0014BC  CFF5 FFC6          	movff	tablat,4038	;volatile
  1251  0014C0                     
  1252                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  1253  0014C0  0E00               	movlw	0
  1254  0014C2  6EC5               	movwf	197,c	;volatile
  1255  0014C4                     
  1256                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  1257  0014C4  5013               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1258  0014C6  0D04               	mullw	4
  1259  0014C8  0E02               	movlw	2
  1260  0014CA  26F3               	addwf	243,f,c
  1261  0014CC  0E00               	movlw	0
  1262  0014CE  22F4               	addwfc	244,f,c
  1263  0014D0  0E01               	movlw	low _spi1_configuration
  1264  0014D2  24F3               	addwf	243,w,c
  1265  0014D4  6EF6               	movwf	tblptrl,c
  1266  0014D6  0E10               	movlw	high _spi1_configuration
  1267  0014D8  20F4               	addwfc	244,w,c
  1268  0014DA  6EF7               	movwf	tblptrh,c
  1269  0014DC                     	if	1	;There are 3 active tblptr bytes
  1270  0014DC  6AF8               	clrf	tblptru,c
  1271  0014DE  0E00               	movlw	low (__mediumconst shr (0+16))
  1272  0014E0  22F8               	addwfc	tblptru,f,c
  1273  0014E2                     	endif
  1274  0014E2  0008               	tblrd		*
  1275  0014E4  CFF5 FFC8          	movff	tablat,4040	;volatile
  1276  0014E8                     
  1277                           ;mcc_generated_files/spi1.c: 80:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  1278  0014E8  5013               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  1279  0014EA  0D04               	mullw	4
  1280  0014EC  0E03               	movlw	3
  1281  0014EE  26F3               	addwf	243,f,c
  1282  0014F0  0E00               	movlw	0
  1283  0014F2  22F4               	addwfc	244,f,c
  1284  0014F4  0E01               	movlw	low _spi1_configuration
  1285  0014F6  24F3               	addwf	243,w,c
  1286  0014F8  6EF6               	movwf	tblptrl,c
  1287  0014FA  0E10               	movlw	high _spi1_configuration
  1288  0014FC  20F4               	addwfc	244,w,c
  1289  0014FE  6EF7               	movwf	tblptrh,c
  1290  001500                     	if	1	;There are 3 active tblptr bytes
  1291  001500  6AF8               	clrf	tblptru,c
  1292  001502  0E00               	movlw	low (__mediumconst shr (0+16))
  1293  001504  22F8               	addwfc	tblptru,f,c
  1294  001506                     	endif
  1295  001506  0008               	tblrd		*
  1296  001508  CFF5 F012          	movff	tablat,??_SPI1_Open
  1297  00150C  4612               	rlncf	??_SPI1_Open^0,f,c
  1298  00150E  4612               	rlncf	??_SPI1_Open^0,f,c
  1299  001510  4612               	rlncf	??_SPI1_Open^0,f,c
  1300  001512  5094               	movf	148,w,c	;volatile
  1301  001514  1812               	xorwf	??_SPI1_Open^0,w,c
  1302  001516  0BF7               	andlw	-9
  1303  001518  1812               	xorwf	??_SPI1_Open^0,w,c
  1304  00151A  6E94               	movwf	148,c	;volatile
  1305  00151C                     
  1306                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  1307  00151C  8AC6               	bsf	198,5,c	;volatile
  1308  00151E                     l55:
  1309  00151E  0012               	return		;funcret
  1310  001520                     __end_of_SPI1_Open:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _HandlePacketLoop *****************
  1314 ;; Defined at:
  1315 ;;		line 84 in file "handler.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  sz              1   39[COMRAM] unsigned char 
  1320 ;;  i               1   41[COMRAM] unsigned char 
  1321 ;;  status          1   40[COMRAM] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;Total ram usage:        3 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 9
  1338 ;; This function calls:
  1339 ;;		_ProcessAckPayload
  1340 ;;		_VerifyBoardAddress
  1341 ;;		_nrf24_flush_tx_rx
  1342 ;;		_nrf24_read_dynamic_payload_length
  1343 ;;		_nrf24_read_register
  1344 ;;		_nrf24_read_rf_data
  1345 ;;		_nrf24_send_rf_data
  1346 ;;		_nrf24_write_register
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text11
  1353  001006                     __ptext11:
  1354                           	callstack 0
  1355  001006                     _HandlePacketLoop:
  1356                           	callstack 21
  1357  001006                     
  1358                           ;handler.c: 85:     uint8_t i;;handler.c: 88:     for (i = 0; i < 8; i++) {
  1359  001006  0E00               	movlw	0
  1360  001008  6E2A               	movwf	HandlePacketLoop@i^0,c
  1361  00100A                     l2515:
  1362                           
  1363                           ;handler.c: 89:         if (!packetsTX[i].free) {
  1364  00100A  502A               	movf	HandlePacketLoop@i^0,w,c
  1365  00100C  0D22               	mullw	34
  1366  00100E  0EEA               	movlw	low (_packetsTX+32)
  1367  001010  24F3               	addwf	243,w,c
  1368  001012  6ED9               	movwf	fsr2l,c
  1369  001014  0E00               	movlw	high (_packetsTX+32)
  1370  001016  20F4               	addwfc	prodh,w,c
  1371  001018  6EDA               	movwf	fsr2h,c
  1372  00101A  50DF               	movf	indf2,w,c
  1373  00101C  A4D8               	btfss	status,2,c
  1374  00101E  EF13  F008         	goto	u1091
  1375  001022  EF15  F008         	goto	u1090
  1376  001026                     u1091:
  1377  001026  EF17  F008         	goto	l2519
  1378  00102A                     u1090:
  1379  00102A  EF20  F008         	goto	l2523
  1380  00102E                     l2519:
  1381                           
  1382                           ;handler.c: 92:     }
  1383  00102E  2A2A               	incf	HandlePacketLoop@i^0,f,c
  1384  001030  0E07               	movlw	7
  1385  001032  642A               	cpfsgt	HandlePacketLoop@i^0,c
  1386  001034  EF1E  F008         	goto	u1101
  1387  001038  EF20  F008         	goto	u1100
  1388  00103C                     u1101:
  1389  00103C  EF05  F008         	goto	l2515
  1390  001040                     u1100:
  1391  001040                     l2523:
  1392                           
  1393                           ;handler.c: 93:     if (i == 8) {
  1394  001040  0E08               	movlw	8
  1395  001042  182A               	xorwf	HandlePacketLoop@i^0,w,c
  1396  001044  A4D8               	btfss	status,2,c
  1397  001046  EF27  F008         	goto	u1111
  1398  00104A  EF29  F008         	goto	u1110
  1399  00104E                     u1111:
  1400  00104E  EF2B  F008         	goto	l2527
  1401  001052                     u1110:
  1402  001052  EF9A  F008         	goto	l285
  1403  001056                     l2527:
  1404                           
  1405                           ;handler.c: 97:     nrf24_send_rf_data(packetsTX[i].packet, packetsTX[i].size);
  1406  001056  502A               	movf	HandlePacketLoop@i^0,w,c
  1407  001058  0D22               	mullw	34
  1408  00105A  0ECA               	movlw	low _packetsTX
  1409  00105C  24F3               	addwf	243,w,c
  1410  00105E  6E18               	movwf	nrf24_send_rf_data@buffer^0,c
  1411  001060  0E00               	movlw	high _packetsTX
  1412  001062  20F4               	addwfc	prodh,w,c
  1413  001064  6E19               	movwf	(nrf24_send_rf_data@buffer+1)^0,c
  1414  001066  502A               	movf	HandlePacketLoop@i^0,w,c
  1415  001068  0D22               	mullw	34
  1416  00106A  0EEB               	movlw	low (_packetsTX+33)
  1417  00106C  24F3               	addwf	243,w,c
  1418  00106E  6ED9               	movwf	fsr2l,c
  1419  001070  0E00               	movlw	high (_packetsTX+33)
  1420  001072  20F4               	addwfc	prodh,w,c
  1421  001074  6EDA               	movwf	fsr2h,c
  1422  001076  50DF               	movf	indf2,w,c
  1423  001078  6E1A               	movwf	nrf24_send_rf_data@sz^0,c
  1424  00107A  EC0B  F00D         	call	_nrf24_send_rf_data	;wreg free
  1425  00107E                     l2531:
  1426                           
  1427                           ;handler.c: 102:         status = nrf24_read_register(0x07);
  1428  00107E  0E07               	movlw	7
  1429  001080  EC2A  F00D         	call	_nrf24_read_register
  1430  001084  6E29               	movwf	HandlePacketLoop@status^0,c
  1431  001086                     
  1432                           ;handler.c: 103:         if ((status & 0x20) || (status & 0x10)) {
  1433  001086  BA29               	btfsc	HandlePacketLoop@status^0,5,c
  1434  001088  EF48  F008         	goto	u1121
  1435  00108C  EF4A  F008         	goto	u1120
  1436  001090                     u1121:
  1437  001090  EF56  F008         	goto	l2537
  1438  001094                     u1120:
  1439  001094  A829               	btfss	HandlePacketLoop@status^0,4,c
  1440  001096  EF4F  F008         	goto	u1131
  1441  00109A  EF51  F008         	goto	u1130
  1442  00109E                     u1131:
  1443  00109E  EF53  F008         	goto	l287
  1444  0010A2                     u1130:
  1445  0010A2  EF56  F008         	goto	l2537
  1446  0010A6                     l287:
  1447                           
  1448                           ;handler.c: 106:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  1449  0010A6  D000               	nop2		;2 cycle nop
  1450  0010A8  EF3F  F008         	goto	l2531
  1451  0010AC                     l2537:
  1452                           
  1453                           ;handler.c: 109:     nrf24_write_register(0x07, 0x70);
  1454  0010AC  0E70               	movlw	112
  1455  0010AE  6E13               	movwf	nrf24_write_register@value^0,c
  1456  0010B0  0E07               	movlw	7
  1457  0010B2  ECD4  F00A         	call	_nrf24_write_register
  1458  0010B6                     
  1459                           ;handler.c: 112:     if (status & 0x10) {
  1460  0010B6  A829               	btfss	HandlePacketLoop@status^0,4,c
  1461  0010B8  EF60  F008         	goto	u1141
  1462  0010BC  EF62  F008         	goto	u1140
  1463  0010C0                     u1141:
  1464  0010C0  EF66  F008         	goto	l2545
  1465  0010C4                     u1140:
  1466  0010C4                     
  1467                           ;handler.c: 113:         nrf24_flush_tx_rx();
  1468  0010C4  ECD4  F00B         	call	_nrf24_flush_tx_rx	;wreg free
  1469  0010C8  EF9A  F008         	goto	l285
  1470  0010CC                     l2545:
  1471                           
  1472                           ;handler.c: 119:     packetsTX[i].free = 1;
  1473  0010CC  502A               	movf	HandlePacketLoop@i^0,w,c
  1474  0010CE  0D22               	mullw	34
  1475  0010D0  0EEA               	movlw	low (_packetsTX+32)
  1476  0010D2  24F3               	addwf	243,w,c
  1477  0010D4  6ED9               	movwf	fsr2l,c
  1478  0010D6  0E00               	movlw	high (_packetsTX+32)
  1479  0010D8  20F4               	addwfc	prodh,w,c
  1480  0010DA  6EDA               	movwf	fsr2h,c
  1481  0010DC  0E01               	movlw	1
  1482  0010DE  6EDF               	movwf	indf2,c
  1483  0010E0                     
  1484                           ;handler.c: 122:     if (status & 0x40) {
  1485  0010E0  AC29               	btfss	HandlePacketLoop@status^0,6,c
  1486  0010E2  EF75  F008         	goto	u1151
  1487  0010E6  EF77  F008         	goto	u1150
  1488  0010EA                     u1151:
  1489  0010EA  EF9A  F008         	goto	l285
  1490  0010EE                     u1150:
  1491  0010EE                     
  1492                           ;handler.c: 123:         uint8_t sz = nrf24_read_dynamic_payload_length();
  1493  0010EE  EC1B  F00D         	call	_nrf24_read_dynamic_payload_length	;wreg free
  1494  0010F2  6E28               	movwf	HandlePacketLoop@sz^0,c
  1495  0010F4                     
  1496                           ;handler.c: 124:         nrf24_read_rf_data(bufferRX, sz);
  1497  0010F4  0E60               	movlw	low _bufferRX
  1498  0010F6  6E18               	movwf	nrf24_read_rf_data@buffer^0,c
  1499  0010F8  0E00               	movlw	high _bufferRX
  1500  0010FA  6E19               	movwf	(nrf24_read_rf_data@buffer+1)^0,c
  1501  0010FC  C028  F01A         	movff	HandlePacketLoop@sz,nrf24_read_rf_data@sz
  1502  001100  ECFA  F00C         	call	_nrf24_read_rf_data	;wreg free
  1503  001104                     
  1504                           ;handler.c: 125:         if (!VerifyBoardAddress(bufferRX)) {
  1505  001104  0E60               	movlw	low _bufferRX
  1506  001106  6E12               	movwf	VerifyBoardAddress@bufferRX^0,c
  1507  001108  0E00               	movlw	high _bufferRX
  1508  00110A  6E13               	movwf	(VerifyBoardAddress@bufferRX+1)^0,c
  1509  00110C  EC4B  F00B         	call	_VerifyBoardAddress	;wreg free
  1510  001110  0900               	iorlw	0
  1511  001112  A4D8               	btfss	status,2,c
  1512  001114  EF8E  F008         	goto	u1161
  1513  001118  EF90  F008         	goto	u1160
  1514  00111C                     u1161:
  1515  00111C  EF92  F008         	goto	l2557
  1516  001120                     u1160:
  1517  001120  EF9A  F008         	goto	l285
  1518  001124                     l2557:
  1519                           
  1520                           ;handler.c: 128:         ProcessAckPayload(bufferRX, sz);
  1521  001124  0E60               	movlw	low _bufferRX
  1522  001126  6E20               	movwf	ProcessAckPayload@buffer^0,c
  1523  001128  0E00               	movlw	high _bufferRX
  1524  00112A  6E21               	movwf	(ProcessAckPayload@buffer+1)^0,c
  1525  00112C  C028  F022         	movff	HandlePacketLoop@sz,ProcessAckPayload@sz
  1526  001130  EC9B  F008         	call	_ProcessAckPayload	;wreg free
  1527  001134                     l285:
  1528  001134  0012               	return		;funcret
  1529  001136                     __end_of_HandlePacketLoop:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _nrf24_send_rf_data *****************
  1533 ;; Defined at:
  1534 ;;		line 79 in file "../lib/nrf24_lib.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  buffer          2   23[COMRAM] PTR unsigned char 
  1537 ;;		 -> packetsTX(272), 
  1538 ;;  sz              1   25[COMRAM] unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1550 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;Total ram usage:        3 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 7
  1557 ;; This function calls:
  1558 ;;		_nrf24_write_buff
  1559 ;; This function is called by:
  1560 ;;		_HandlePacketLoop
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text12
  1565  001A16                     __ptext12:
  1566                           	callstack 0
  1567  001A16                     _nrf24_send_rf_data:
  1568                           	callstack 22
  1569  001A16                     
  1570                           ;../lib/nrf24_lib.c: 80:     nrf24_write_buff(0xA0, buffer, sz);
  1571  001A16  C018  F013         	movff	nrf24_send_rf_data@buffer,nrf24_write_buff@buffer
  1572  001A1A  C019  F014         	movff	nrf24_send_rf_data@buffer+1,nrf24_write_buff@buffer+1
  1573  001A1E  C01A  F015         	movff	nrf24_send_rf_data@sz,nrf24_write_buff@bytes
  1574  001A22  0EA0               	movlw	160
  1575  001A24  EC6B  F00C         	call	_nrf24_write_buff
  1576  001A28  848B               	bsf	139,2,c	;volatile
  1577  001A2A                     
  1578                           ;../lib/nrf24_lib.c: 82:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1579  001A2A  0E53               	movlw	83
  1580  001A2C                     u1197:
  1581  001A2C  2EE8               	decfsz	wreg,f,c
  1582  001A2E  D7FE               	bra	u1197
  1583  001A30  F000               	nop	
  1584  001A32  948B               	bcf	139,2,c	;volatile
  1585  001A34  0012               	return		;funcret
  1586  001A36                     __end_of_nrf24_send_rf_data:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _nrf24_write_buff *****************
  1590 ;; Defined at:
  1591 ;;		line 46 in file "../lib/nrf24_lib.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  mnemonic_add    1    wreg     unsigned char 
  1594 ;;  buffer          2   18[COMRAM] PTR unsigned char 
  1595 ;;		 -> packetsTX(272), DEFAULT_PIPE_ADDR(6), 
  1596 ;;  bytes           1   20[COMRAM] unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  mnemonic_add    1   21[COMRAM] unsigned char 
  1599 ;;  i               1   22[COMRAM] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1609 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;Total ram usage:        5 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 6
  1616 ;; This function calls:
  1617 ;;		_SPI1_ExchangeByte
  1618 ;; This function is called by:
  1619 ;;		_InitRadio
  1620 ;;		_nrf24_send_rf_data
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text13
  1625  0018D6                     __ptext13:
  1626                           	callstack 0
  1627  0018D6                     _nrf24_write_buff:
  1628                           	callstack 23
  1629                           
  1630                           ;incstack = 0
  1631                           ;nrf24_write_buff@mnemonic_addr stored from wreg
  1632  0018D6  6E16               	movwf	nrf24_write_buff@mnemonic_addr^0,c
  1633  0018D8  928B               	bcf	139,1,c	;volatile
  1634  0018DA                     
  1635                           ;../lib/nrf24_lib.c: 49:     SPI1_ExchangeByte(0x20 | mnemonic_addr);
  1636  0018DA  5016               	movf	nrf24_write_buff@mnemonic_addr^0,w,c
  1637  0018DC  0920               	iorlw	32
  1638  0018DE  EC37  F00D         	call	_SPI1_ExchangeByte
  1639  0018E2                     
  1640                           ;../lib/nrf24_lib.c: 50:     for (i = 0; i < bytes; i++) {
  1641  0018E2  0E00               	movlw	0
  1642  0018E4  6E17               	movwf	nrf24_write_buff@i^0,c
  1643  0018E6  EF80  F00C         	goto	l2339
  1644  0018EA                     l2331:
  1645                           
  1646                           ;../lib/nrf24_lib.c: 51:         SPI1_ExchangeByte(*buffer);
  1647  0018EA  C013  FFD9         	movff	nrf24_write_buff@buffer,fsr2l
  1648  0018EE  C014  FFDA         	movff	nrf24_write_buff@buffer+1,fsr2h
  1649  0018F2  50DF               	movf	indf2,w,c
  1650  0018F4  EC37  F00D         	call	_SPI1_ExchangeByte
  1651  0018F8                     
  1652                           ;../lib/nrf24_lib.c: 52:         buffer++;
  1653  0018F8  4A13               	infsnz	nrf24_write_buff@buffer^0,f,c
  1654  0018FA  2A14               	incf	(nrf24_write_buff@buffer+1)^0,f,c
  1655  0018FC                     
  1656                           ;../lib/nrf24_lib.c: 53:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  1657  0018FC  D000               	nop2		;2 cycle nop
  1658  0018FE                     
  1659                           ;../lib/nrf24_lib.c: 54:     }
  1660  0018FE  2A17               	incf	nrf24_write_buff@i^0,f,c
  1661  001900                     l2339:
  1662  001900  5015               	movf	nrf24_write_buff@bytes^0,w,c
  1663  001902  5C17               	subwf	nrf24_write_buff@i^0,w,c
  1664  001904  A0D8               	btfss	status,0,c
  1665  001906  EF87  F00C         	goto	u1021
  1666  00190A  EF89  F00C         	goto	u1020
  1667  00190E                     u1021:
  1668  00190E  EF75  F00C         	goto	l2331
  1669  001912                     u1020:
  1670  001912  828B               	bsf	139,1,c	;volatile
  1671  001914  0012               	return		;funcret
  1672  001916                     __end_of_nrf24_write_buff:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _nrf24_read_rf_data *****************
  1676 ;; Defined at:
  1677 ;;		line 93 in file "../lib/nrf24_lib.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  buffer          2   23[COMRAM] PTR unsigned char 
  1680 ;;		 -> bufferRX(32), 
  1681 ;;  sz              1   25[COMRAM] unsigned char 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1693 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;Total ram usage:        3 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 8
  1700 ;; This function calls:
  1701 ;;		_nrf24_flush_tx_rx
  1702 ;;		_nrf24_read_buff
  1703 ;;		_nrf24_write_register
  1704 ;; This function is called by:
  1705 ;;		_HandlePacketLoop
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text14
  1710  0019F4                     __ptext14:
  1711                           	callstack 0
  1712  0019F4                     _nrf24_read_rf_data:
  1713                           	callstack 21
  1714  0019F4                     
  1715                           ;../lib/nrf24_lib.c: 94:     nrf24_read_buff(0x61, buffer, sz);
  1716  0019F4  C018  F013         	movff	nrf24_read_rf_data@buffer,nrf24_read_buff@buffer
  1717  0019F8  C019  F014         	movff	nrf24_read_rf_data@buffer+1,nrf24_read_buff@buffer+1
  1718  0019FC  C01A  F015         	movff	nrf24_read_rf_data@sz,nrf24_read_buff@bytes
  1719  001A00  0E61               	movlw	97
  1720  001A02  EC21  F00C         	call	_nrf24_read_buff
  1721  001A06                     
  1722                           ;../lib/nrf24_lib.c: 95:     nrf24_write_register(0x07, 0x70);
  1723  001A06  0E70               	movlw	112
  1724  001A08  6E13               	movwf	nrf24_write_register@value^0,c
  1725  001A0A  0E07               	movlw	7
  1726  001A0C  ECD4  F00A         	call	_nrf24_write_register
  1727  001A10                     
  1728                           ;../lib/nrf24_lib.c: 96:     nrf24_flush_tx_rx();
  1729  001A10  ECD4  F00B         	call	_nrf24_flush_tx_rx	;wreg free
  1730  001A14  0012               	return		;funcret
  1731  001A16                     __end_of_nrf24_read_rf_data:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _nrf24_read_buff *****************
  1735 ;; Defined at:
  1736 ;;		line 58 in file "../lib/nrf24_lib.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  mnemonic_add    1    wreg     unsigned char 
  1739 ;;  buffer          2   18[COMRAM] PTR unsigned char 
  1740 ;;		 -> bufferRX(32), 
  1741 ;;  bytes           1   20[COMRAM] unsigned char 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  mnemonic_add    1   21[COMRAM] unsigned char 
  1744 ;;  i               1   22[COMRAM] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1754 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;Total ram usage:        5 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 6
  1761 ;; This function calls:
  1762 ;;		_SPI1_ExchangeByte
  1763 ;; This function is called by:
  1764 ;;		_nrf24_read_rf_data
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text15
  1769  001842                     __ptext15:
  1770                           	callstack 0
  1771  001842                     _nrf24_read_buff:
  1772                           	callstack 22
  1773                           
  1774                           ;incstack = 0
  1775                           ;nrf24_read_buff@mnemonic_addr stored from wreg
  1776  001842  6E16               	movwf	nrf24_read_buff@mnemonic_addr^0,c
  1777  001844  928B               	bcf	139,1,c	;volatile
  1778  001846                     
  1779                           ;../lib/nrf24_lib.c: 61:     SPI1_ExchangeByte(0x00 | mnemonic_addr);
  1780  001846  5016               	movf	nrf24_read_buff@mnemonic_addr^0,w,c
  1781  001848  EC37  F00D         	call	_SPI1_ExchangeByte
  1782  00184C                     
  1783                           ;../lib/nrf24_lib.c: 62:     for (i = 0; i < bytes; i++) {
  1784  00184C  0E00               	movlw	0
  1785  00184E  6E17               	movwf	nrf24_read_buff@i^0,c
  1786  001850  EF35  F00C         	goto	l2385
  1787  001854                     l2379:
  1788                           
  1789                           ;../lib/nrf24_lib.c: 63:         *buffer = SPI1_ExchangeByte(0xFF);
  1790  001854  0EFF               	movlw	255
  1791  001856  EC37  F00D         	call	_SPI1_ExchangeByte
  1792  00185A  C013  FFD9         	movff	nrf24_read_buff@buffer,fsr2l
  1793  00185E  C014  FFDA         	movff	nrf24_read_buff@buffer+1,fsr2h
  1794  001862  6EDF               	movwf	indf2,c
  1795  001864                     
  1796                           ;../lib/nrf24_lib.c: 64:         buffer++;
  1797  001864  4A13               	infsnz	nrf24_read_buff@buffer^0,f,c
  1798  001866  2A14               	incf	(nrf24_read_buff@buffer+1)^0,f,c
  1799  001868                     
  1800                           ;../lib/nrf24_lib.c: 65:     }
  1801  001868  2A17               	incf	nrf24_read_buff@i^0,f,c
  1802  00186A                     l2385:
  1803  00186A  5015               	movf	nrf24_read_buff@bytes^0,w,c
  1804  00186C  5C17               	subwf	nrf24_read_buff@i^0,w,c
  1805  00186E  A0D8               	btfss	status,0,c
  1806  001870  EF3C  F00C         	goto	u1041
  1807  001874  EF3E  F00C         	goto	u1040
  1808  001878                     u1041:
  1809  001878  EF2A  F00C         	goto	l2379
  1810  00187C                     u1040:
  1811  00187C                     
  1812                           ;../lib/nrf24_lib.c: 66:     *buffer = (uint8_t) ((void*)0);
  1813  00187C  C013  FFD9         	movff	nrf24_read_buff@buffer,fsr2l
  1814  001880  C014  FFDA         	movff	nrf24_read_buff@buffer+1,fsr2h
  1815  001884  0E00               	movlw	0
  1816  001886  6EDF               	movwf	indf2,c
  1817  001888  828B               	bsf	139,1,c	;volatile
  1818  00188A  0012               	return		;funcret
  1819  00188C                     __end_of_nrf24_read_buff:
  1820                           	callstack 0
  1821                           
  1822 ;; *************** function _nrf24_flush_tx_rx *****************
  1823 ;; Defined at:
  1824 ;;		line 99 in file "../lib/nrf24_lib.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;Total ram usage:        1 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; Hardware stack levels required when called: 7
  1845 ;; This function calls:
  1846 ;;		_SPI1_ExchangeByte
  1847 ;;		_nrf24_write_register
  1848 ;; This function is called by:
  1849 ;;		_HandlePacketLoop
  1850 ;;		_nrf24_read_rf_data
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text16
  1855  0017A8                     __ptext16:
  1856                           	callstack 0
  1857  0017A8                     _nrf24_flush_tx_rx:
  1858                           	callstack 21
  1859  0017A8  928B               	bcf	139,1,c	;volatile
  1860  0017AA                     
  1861                           ;../lib/nrf24_lib.c: 101:     nrf24_write_register(0x07, 0x70);
  1862  0017AA  0E70               	movlw	112
  1863  0017AC  6E13               	movwf	nrf24_write_register@value^0,c
  1864  0017AE  0E07               	movlw	7
  1865  0017B0  ECD4  F00A         	call	_nrf24_write_register
  1866  0017B4                     
  1867                           ;../lib/nrf24_lib.c: 102:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1868  0017B4  0E04               	movlw	4
  1869  0017B6  6E15               	movwf	??_nrf24_flush_tx_rx^0,c
  1870  0017B8  0E3E               	movlw	62
  1871  0017BA                     u1207:
  1872  0017BA  2EE8               	decfsz	wreg,f,c
  1873  0017BC  D7FE               	bra	u1207
  1874  0017BE  2E15               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1875  0017C0  D7FC               	bra	u1207
  1876  0017C2  828B               	bsf	139,1,c	;volatile
  1877  0017C4  928B               	bcf	139,1,c	;volatile
  1878  0017C6                     
  1879                           ;../lib/nrf24_lib.c: 106:     SPI1_ExchangeByte(0xE1);
  1880  0017C6  0EE1               	movlw	225
  1881  0017C8  EC37  F00D         	call	_SPI1_ExchangeByte
  1882  0017CC                     
  1883                           ;../lib/nrf24_lib.c: 107:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1884  0017CC  0E04               	movlw	4
  1885  0017CE  6E15               	movwf	??_nrf24_flush_tx_rx^0,c
  1886  0017D0  0E3E               	movlw	62
  1887  0017D2                     u1217:
  1888  0017D2  2EE8               	decfsz	wreg,f,c
  1889  0017D4  D7FE               	bra	u1217
  1890  0017D6  2E15               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1891  0017D8  D7FC               	bra	u1217
  1892  0017DA  828B               	bsf	139,1,c	;volatile
  1893  0017DC  928B               	bcf	139,1,c	;volatile
  1894  0017DE                     
  1895                           ;../lib/nrf24_lib.c: 111:     SPI1_ExchangeByte(0xE2);
  1896  0017DE  0EE2               	movlw	226
  1897  0017E0  EC37  F00D         	call	_SPI1_ExchangeByte
  1898  0017E4                     
  1899                           ;../lib/nrf24_lib.c: 112:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1900  0017E4  0E04               	movlw	4
  1901  0017E6  6E15               	movwf	??_nrf24_flush_tx_rx^0,c
  1902  0017E8  0E3E               	movlw	62
  1903  0017EA                     u1227:
  1904  0017EA  2EE8               	decfsz	wreg,f,c
  1905  0017EC  D7FE               	bra	u1227
  1906  0017EE  2E15               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  1907  0017F0  D7FC               	bra	u1227
  1908  0017F2  828B               	bsf	139,1,c	;volatile
  1909  0017F4  0012               	return		;funcret
  1910  0017F6                     __end_of_nrf24_flush_tx_rx:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _nrf24_write_register *****************
  1914 ;; Defined at:
  1915 ;;		line 8 in file "../lib/nrf24_lib.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  mnemonic_add    1    wreg     unsigned char 
  1918 ;;  value           1   18[COMRAM] unsigned char 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  mnemonic_add    1   19[COMRAM] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        2 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 6
  1937 ;; This function calls:
  1938 ;;		_SPI1_ExchangeByte
  1939 ;; This function is called by:
  1940 ;;		_InitRadio
  1941 ;;		_HandlePacketLoop
  1942 ;;		_nrf24_read_rf_data
  1943 ;;		_nrf24_flush_tx_rx
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text17
  1948  0015A8                     __ptext17:
  1949                           	callstack 0
  1950  0015A8                     _nrf24_write_register:
  1951                           	callstack 23
  1952                           
  1953                           ;incstack = 0
  1954                           ;nrf24_write_register@mnemonic_addr stored from wreg
  1955  0015A8  6E14               	movwf	nrf24_write_register@mnemonic_addr^0,c
  1956  0015AA  928B               	bcf	139,1,c	;volatile
  1957  0015AC                     
  1958                           ;../lib/nrf24_lib.c: 10:     if (mnemonic_addr < 0x20) {
  1959  0015AC  0E20               	movlw	32
  1960  0015AE  6014               	cpfslt	nrf24_write_register@mnemonic_addr^0,c
  1961  0015B0  EFDC  F00A         	goto	u961
  1962  0015B4  EFDE  F00A         	goto	u960
  1963  0015B8                     u961:
  1964  0015B8  EFE8  F00A         	goto	l2289
  1965  0015BC                     u960:
  1966  0015BC                     
  1967                           ;../lib/nrf24_lib.c: 12:         SPI1_ExchangeByte(0x20 | (mnemonic_addr & 0x1F));
  1968  0015BC  5014               	movf	nrf24_write_register@mnemonic_addr^0,w,c
  1969  0015BE  0B1F               	andlw	31
  1970  0015C0  0920               	iorlw	32
  1971  0015C2  EC37  F00D         	call	_SPI1_ExchangeByte
  1972  0015C6                     
  1973                           ;../lib/nrf24_lib.c: 13:         SPI1_ExchangeByte(value);
  1974  0015C6  5013               	movf	nrf24_write_register@value^0,w,c
  1975  0015C8  EC37  F00D         	call	_SPI1_ExchangeByte
  1976                           
  1977                           ;../lib/nrf24_lib.c: 14:     } else {
  1978  0015CC  EF11  F00B         	goto	l2301
  1979  0015D0                     l2289:
  1980                           
  1981                           ;../lib/nrf24_lib.c: 16:         SPI1_ExchangeByte(mnemonic_addr);
  1982  0015D0  5014               	movf	nrf24_write_register@mnemonic_addr^0,w,c
  1983  0015D2  EC37  F00D         	call	_SPI1_ExchangeByte
  1984  0015D6                     
  1985                           ;../lib/nrf24_lib.c: 17:         if ((mnemonic_addr != 0xE1) && (mnemonic_addr != 0xE2) 
      +                          && (mnemonic_addr != 0xE3) && (mnemonic_addr != 0xFF)) {
  1986  0015D6  0EE1               	movlw	225
  1987  0015D8  1814               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  1988  0015DA  B4D8               	btfsc	status,2,c
  1989  0015DC  EFF2  F00A         	goto	u971
  1990  0015E0  EFF4  F00A         	goto	u970
  1991  0015E4                     u971:
  1992  0015E4  EF11  F00B         	goto	l2301
  1993  0015E8                     u970:
  1994  0015E8  0EE2               	movlw	226
  1995  0015EA  1814               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  1996  0015EC  B4D8               	btfsc	status,2,c
  1997  0015EE  EFFB  F00A         	goto	u981
  1998  0015F2  EFFD  F00A         	goto	u980
  1999  0015F6                     u981:
  2000  0015F6  EF11  F00B         	goto	l2301
  2001  0015FA                     u980:
  2002  0015FA  0EE3               	movlw	227
  2003  0015FC  1814               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  2004  0015FE  B4D8               	btfsc	status,2,c
  2005  001600  EF04  F00B         	goto	u991
  2006  001604  EF06  F00B         	goto	u990
  2007  001608                     u991:
  2008  001608  EF11  F00B         	goto	l2301
  2009  00160C                     u990:
  2010  00160C  2814               	incf	nrf24_write_register@mnemonic_addr^0,w,c
  2011  00160E  B4D8               	btfsc	status,2,c
  2012  001610  EF0C  F00B         	goto	u1001
  2013  001614  EF0E  F00B         	goto	u1000
  2014  001618                     u1001:
  2015  001618  EF11  F00B         	goto	l2301
  2016  00161C                     u1000:
  2017  00161C                     
  2018                           ;../lib/nrf24_lib.c: 18: ;../lib/nrf24_lib.c: 20:             SPI1_ExchangeByte(value);
  2019  00161C  5013               	movf	nrf24_write_register@value^0,w,c
  2020  00161E  EC37  F00D         	call	_SPI1_ExchangeByte
  2021  001622                     l2301:
  2022                           
  2023                           ;../lib/nrf24_lib.c: 23:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2024  001622  D000               	nop2		;2 cycle nop
  2025  001624  828B               	bsf	139,1,c	;volatile
  2026  001626  0012               	return		;funcret
  2027  001628                     __end_of_nrf24_write_register:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _nrf24_read_register *****************
  2031 ;; Defined at:
  2032 ;;		line 27 in file "../lib/nrf24_lib.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  mnemonic_add    1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  mnemonic_add    1   18[COMRAM] unsigned char 
  2037 ;;  byte0           1   19[COMRAM] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      unsigned char 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;Total ram usage:        2 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 6
  2054 ;; This function calls:
  2055 ;;		_SPI1_ExchangeByte
  2056 ;; This function is called by:
  2057 ;;		_HandlePacketLoop
  2058 ;;		_nrf24_is_rf_data_available
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text18
  2063  001A54                     __ptext18:
  2064                           	callstack 0
  2065  001A54                     _nrf24_read_register:
  2066                           	callstack 23
  2067                           
  2068                           ;incstack = 0
  2069                           ;nrf24_read_register@mnemonic_addr stored from wreg
  2070  001A54  6E13               	movwf	nrf24_read_register@mnemonic_addr^0,c
  2071  001A56  928B               	bcf	139,1,c	;volatile
  2072  001A58                     
  2073                           ;../lib/nrf24_lib.c: 30:     SPI1_ExchangeByte(0x00 | (mnemonic_addr & 0x1F));
  2074  001A58  5013               	movf	nrf24_read_register@mnemonic_addr^0,w,c
  2075  001A5A  0B1F               	andlw	31
  2076  001A5C  EC37  F00D         	call	_SPI1_ExchangeByte
  2077  001A60                     
  2078                           ;../lib/nrf24_lib.c: 31:     byte0 = SPI1_ExchangeByte(0xFF);
  2079  001A60  0EFF               	movlw	255
  2080  001A62  EC37  F00D         	call	_SPI1_ExchangeByte
  2081  001A66  6E14               	movwf	nrf24_read_register@byte0^0,c
  2082  001A68  828B               	bsf	139,1,c	;volatile
  2083  001A6A                     
  2084                           ;../lib/nrf24_lib.c: 33:     return byte0;
  2085  001A6A  5014               	movf	nrf24_read_register@byte0^0,w,c
  2086  001A6C  0012               	return		;funcret
  2087  001A6E                     __end_of_nrf24_read_register:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _nrf24_read_dynamic_payload_length *****************
  2091 ;; Defined at:
  2092 ;;		line 36 in file "../lib/nrf24_lib.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  byte0           1   18[COMRAM] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      unsigned char 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        1 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 6
  2113 ;; This function calls:
  2114 ;;		_SPI1_ExchangeByte
  2115 ;; This function is called by:
  2116 ;;		_HandlePacketLoop
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text19
  2121  001A36                     __ptext19:
  2122                           	callstack 0
  2123  001A36                     _nrf24_read_dynamic_payload_length:
  2124                           	callstack 23
  2125  001A36  928B               	bcf	139,1,c	;volatile
  2126  001A38                     
  2127                           ;../lib/nrf24_lib.c: 39:     SPI1_ExchangeByte(0x60);
  2128  001A38  0E60               	movlw	96
  2129  001A3A  EC37  F00D         	call	_SPI1_ExchangeByte
  2130                           
  2131                           ;../lib/nrf24_lib.c: 40:     byte0 = SPI1_ExchangeByte(0xFF);
  2132  001A3E  0EFF               	movlw	255
  2133  001A40  EC37  F00D         	call	_SPI1_ExchangeByte
  2134  001A44  6E13               	movwf	nrf24_read_dynamic_payload_length@byte0^0,c
  2135  001A46                     
  2136                           ;../lib/nrf24_lib.c: 41:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2137  001A46  0E53               	movlw	83
  2138  001A48                     u1237:
  2139  001A48  2EE8               	decfsz	wreg,f,c
  2140  001A4A  D7FE               	bra	u1237
  2141  001A4C  F000               	nop	
  2142  001A4E  828B               	bsf	139,1,c	;volatile
  2143  001A50                     
  2144                           ;../lib/nrf24_lib.c: 43:     return byte0;
  2145  001A50  5013               	movf	nrf24_read_dynamic_payload_length@byte0^0,w,c
  2146  001A52  0012               	return		;funcret
  2147  001A54                     __end_of_nrf24_read_dynamic_payload_length:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _SPI1_ExchangeByte *****************
  2151 ;; Defined at:
  2152 ;;		line 92 in file "mcc_generated_files/spi1.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  data            1    wreg     unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  data            1   17[COMRAM] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      unsigned char 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        1 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 5
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_nrf24_write_register
  2177 ;;		_nrf24_read_register
  2178 ;;		_nrf24_read_dynamic_payload_length
  2179 ;;		_nrf24_write_buff
  2180 ;;		_nrf24_read_buff
  2181 ;;		_nrf24_flush_tx_rx
  2182 ;;		_SPI1_WriteBlock
  2183 ;;		_SPI1_ReadBlock
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text20
  2188  001A6E                     __ptext20:
  2189                           	callstack 0
  2190  001A6E                     _SPI1_ExchangeByte:
  2191                           	callstack 23
  2192                           
  2193                           ;incstack = 0
  2194                           ;SPI1_ExchangeByte@data stored from wreg
  2195  001A6E  6E12               	movwf	SPI1_ExchangeByte@data^0,c
  2196  001A70                     
  2197                           ;mcc_generated_files/spi1.c: 92: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 93: {;mcc_generated_files/spi1.c: 94:     SSP1BUF = data;
  2198  001A70  C012  FFC9         	movff	SPI1_ExchangeByte@data,4041	;volatile
  2199  001A74                     l61:
  2200  001A74  A69E               	btfss	158,3,c	;volatile
  2201  001A76  EF3F  F00D         	goto	u911
  2202  001A7A  EF41  F00D         	goto	u910
  2203  001A7E                     u911:
  2204  001A7E  EF3A  F00D         	goto	l61
  2205  001A82                     u910:
  2206  001A82                     
  2207                           ;mcc_generated_files/spi1.c: 96:     PIR1bits.SSP1IF = 0;
  2208  001A82  969E               	bcf	158,3,c	;volatile
  2209                           
  2210                           ;mcc_generated_files/spi1.c: 97:     return SSP1BUF;
  2211  001A84  50C9               	movf	201,w,c	;volatile
  2212  001A86  0012               	return		;funcret
  2213  001A88                     __end_of_SPI1_ExchangeByte:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _VerifyBoardAddress *****************
  2217 ;; Defined at:
  2218 ;;		line 184 in file "handler.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  bufferRX        2   17[COMRAM] PTR unsigned char 
  2221 ;;		 -> bufferRX(32), 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  i               2   23[COMRAM] int 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      _Bool 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;Total ram usage:        8 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 5
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_HandlePacketLoop
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text21
  2248  001696                     __ptext21:
  2249                           	callstack 0
  2250  001696                     _VerifyBoardAddress:
  2251                           	callstack 24
  2252  001696                     
  2253                           ;handler.c: 185:     for (int i = 0; i < 3; i++) {
  2254  001696  0E00               	movlw	0
  2255  001698  6E19               	movwf	(VerifyBoardAddress@i+1)^0,c
  2256  00169A  0E00               	movlw	0
  2257  00169C  6E18               	movwf	VerifyBoardAddress@i^0,c
  2258  00169E                     l2431:
  2259                           
  2260                           ;handler.c: 186:         if (config.Address[i] != bufferRX[i + 1]) {
  2261  00169E  5018               	movf	VerifyBoardAddress@i^0,w,c
  2262  0016A0  2412               	addwf	VerifyBoardAddress@bufferRX^0,w,c
  2263  0016A2  6E14               	movwf	??_VerifyBoardAddress^0,c
  2264  0016A4  5019               	movf	(VerifyBoardAddress@i+1)^0,w,c
  2265  0016A6  2013               	addwfc	(VerifyBoardAddress@bufferRX+1)^0,w,c
  2266  0016A8  6E15               	movwf	(??_VerifyBoardAddress+1)^0,c
  2267  0016AA  0E01               	movlw	1
  2268  0016AC  2414               	addwf	??_VerifyBoardAddress^0,w,c
  2269  0016AE  6ED9               	movwf	fsr2l,c
  2270  0016B0  0E00               	movlw	0
  2271  0016B2  2015               	addwfc	(??_VerifyBoardAddress+1)^0,w,c
  2272  0016B4  6EDA               	movwf	fsr2h,c
  2273  0016B6  0E2C               	movlw	low (_config+1)
  2274  0016B8  2418               	addwf	VerifyBoardAddress@i^0,w,c
  2275  0016BA  6EE1               	movwf	fsr1l,c
  2276  0016BC  0E00               	movlw	high (_config+1)
  2277  0016BE  2019               	addwfc	(VerifyBoardAddress@i+1)^0,w,c
  2278  0016C0  6EE2               	movwf	fsr1h,c
  2279  0016C2  50DE               	movf	postinc2,w,c
  2280  0016C4  18E6               	xorwf	postinc1,w,c
  2281  0016C6  B4D8               	btfsc	status,2,c
  2282  0016C8  EF68  F00B         	goto	u1051
  2283  0016CC  EF6A  F00B         	goto	u1050
  2284  0016D0                     u1051:
  2285  0016D0  EF6D  F00B         	goto	l2437
  2286  0016D4                     u1050:
  2287  0016D4                     
  2288                           ;handler.c: 187:             return 0;
  2289  0016D4  0E00               	movlw	0
  2290  0016D6  EF7E  F00B         	goto	l304
  2291  0016DA                     l2437:
  2292                           
  2293                           ;handler.c: 189:     }
  2294  0016DA  4A18               	infsnz	VerifyBoardAddress@i^0,f,c
  2295  0016DC  2A19               	incf	(VerifyBoardAddress@i+1)^0,f,c
  2296  0016DE  BE19               	btfsc	(VerifyBoardAddress@i+1)^0,7,c
  2297  0016E0  EF7B  F00B         	goto	u1061
  2298  0016E4  5019               	movf	(VerifyBoardAddress@i+1)^0,w,c
  2299  0016E6  E109               	bnz	u1060
  2300  0016E8  0E03               	movlw	3
  2301  0016EA  5C18               	subwf	VerifyBoardAddress@i^0,w,c
  2302  0016EC  A0D8               	btfss	status,0,c
  2303  0016EE  EF7B  F00B         	goto	u1061
  2304  0016F2  EF7D  F00B         	goto	u1060
  2305  0016F6                     u1061:
  2306  0016F6  EF4F  F00B         	goto	l2431
  2307  0016FA                     u1060:
  2308  0016FA                     
  2309                           ;handler.c: 190:     return 1;
  2310  0016FA  0E01               	movlw	1
  2311  0016FC                     l304:
  2312  0016FC  0012               	return		;funcret
  2313  0016FE                     __end_of_VerifyBoardAddress:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _ProcessAckPayload *****************
  2317 ;; Defined at:
  2318 ;;		line 193 in file "handler.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  buffer          2   31[COMRAM] PTR unsigned char 
  2321 ;;		 -> bufferRX(32), 
  2322 ;;  sz              1   33[COMRAM] unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  i               2   34[BANK0 ] int 
  2325 ;;  data           32    0[BANK0 ] unsigned char [32]
  2326 ;;  pktType         1   33[BANK0 ] unsigned char 
  2327 ;;  actionID        1   32[BANK0 ] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2337 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Totals:         8      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;Total ram usage:       44 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 8
  2344 ;; This function calls:
  2345 ;;		_ProcessActionRequest
  2346 ;;		_SendError
  2347 ;; This function is called by:
  2348 ;;		_HandlePacketLoop
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text22
  2353  001136                     __ptext22:
  2354                           	callstack 0
  2355  001136                     _ProcessAckPayload:
  2356                           	callstack 21
  2357  001136                     
  2358                           ;handler.c: 194:     uint8_t data[32];;handler.c: 195:     uint8_t actionID;;handler.c: 
      +                          197:     uint8_t pktType = buffer[0];
  2359  001136  C020  FFD9         	movff	ProcessAckPayload@buffer,fsr2l
  2360  00113A  C021  FFDA         	movff	ProcessAckPayload@buffer+1,fsr2h
  2361  00113E  50DF               	movf	indf2,w,c
  2362  001140  0100               	movlb	0	; () banked
  2363  001142  6FC1               	movwf	ProcessAckPayload@pktType& (0+255),b
  2364                           
  2365                           ;handler.c: 198:     switch (pktType) {
  2366  001144  EFF0  F008         	goto	l2461
  2367  001148                     l2447:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;handler.c: 200:             actionID = buffer[4];
  2371  001148  EE20 F004          	lfsr	2,4
  2372  00114C  5020               	movf	ProcessAckPayload@buffer^0,w,c
  2373  00114E  26D9               	addwf	fsr2l,f,c
  2374  001150  5021               	movf	(ProcessAckPayload@buffer+1)^0,w,c
  2375  001152  22DA               	addwfc	fsr2h,f,c
  2376  001154  50DF               	movf	indf2,w,c
  2377  001156  6FC0               	movwf	ProcessAckPayload@actionID& (0+255),b
  2378  001158                     
  2379                           ; BSR set to: 0
  2380                           ;handler.c: 201:             for (int i = 0; i < sz - 5; i++) {
  2381  001158  0E00               	movlw	0
  2382  00115A  6FC3               	movwf	(ProcessAckPayload@i+1)& (0+255),b
  2383  00115C  0E00               	movlw	0
  2384  00115E  6FC2               	movwf	ProcessAckPayload@i& (0+255),b
  2385  001160  EFC8  F008         	goto	l2455
  2386  001164                     l2451:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;handler.c: 202:                 data[i] = buffer[i + 5];
  2390  001164  51C2               	movf	ProcessAckPayload@i& (0+255),w,b
  2391  001166  2420               	addwf	ProcessAckPayload@buffer^0,w,c
  2392  001168  6E23               	movwf	??_ProcessAckPayload^0,c
  2393  00116A  51C3               	movf	(ProcessAckPayload@i+1)& (0+255),w,b
  2394  00116C  2021               	addwfc	(ProcessAckPayload@buffer+1)^0,w,c
  2395  00116E  6E24               	movwf	(??_ProcessAckPayload+1)^0,c
  2396  001170  0E05               	movlw	5
  2397  001172  2423               	addwf	??_ProcessAckPayload^0,w,c
  2398  001174  6ED9               	movwf	fsr2l,c
  2399  001176  0E00               	movlw	0
  2400  001178  2024               	addwfc	(??_ProcessAckPayload+1)^0,w,c
  2401  00117A  6EDA               	movwf	fsr2h,c
  2402  00117C  0EA0               	movlw	low ProcessAckPayload@data
  2403  00117E  25C2               	addwf	ProcessAckPayload@i& (0+255),w,b
  2404  001180  6EE1               	movwf	fsr1l,c
  2405  001182  0E00               	movlw	high ProcessAckPayload@data
  2406  001184  21C3               	addwfc	(ProcessAckPayload@i+1)& (0+255),w,b
  2407  001186  6EE2               	movwf	fsr1h,c
  2408  001188  CFDF FFE7          	movff	indf2,indf1
  2409  00118C                     
  2410                           ; BSR set to: 0
  2411                           ;handler.c: 203:             }
  2412  00118C  4BC2               	infsnz	ProcessAckPayload@i& (0+255),f,b
  2413  00118E  2BC3               	incf	(ProcessAckPayload@i+1)& (0+255),f,b
  2414  001190                     l2455:
  2415                           
  2416                           ; BSR set to: 0
  2417  001190  0EFB               	movlw	251
  2418  001192  6E23               	movwf	??_ProcessAckPayload^0,c
  2419  001194  0EFF               	movlw	255
  2420  001196  6E24               	movwf	(??_ProcessAckPayload+1)^0,c
  2421  001198  5022               	movf	ProcessAckPayload@sz^0,w,c
  2422  00119A  6E25               	movwf	(??_ProcessAckPayload+2)^0,c
  2423  00119C  6A26               	clrf	(??_ProcessAckPayload+3)^0,c
  2424  00119E  5023               	movf	??_ProcessAckPayload^0,w,c
  2425  0011A0  2625               	addwf	(??_ProcessAckPayload+2)^0,f,c
  2426  0011A2  5024               	movf	(??_ProcessAckPayload+1)^0,w,c
  2427  0011A4  2226               	addwfc	(??_ProcessAckPayload+3)^0,f,c
  2428  0011A6  5025               	movf	(??_ProcessAckPayload+2)^0,w,c
  2429  0011A8  5DC2               	subwf	ProcessAckPayload@i& (0+255),w,b
  2430  0011AA  51C3               	movf	(ProcessAckPayload@i+1)& (0+255),w,b
  2431  0011AC  0A80               	xorlw	128
  2432  0011AE  6E27               	movwf	(??_ProcessAckPayload+4)^0,c
  2433  0011B0  5026               	movf	(??_ProcessAckPayload+3)^0,w,c
  2434  0011B2  0A80               	xorlw	128
  2435  0011B4  5827               	subwfb	(??_ProcessAckPayload+4)^0,w,c
  2436  0011B6  A0D8               	btfss	status,0,c
  2437  0011B8  EFE0  F008         	goto	u1071
  2438  0011BC  EFE2  F008         	goto	u1070
  2439  0011C0                     u1071:
  2440  0011C0  EFB2  F008         	goto	l2451
  2441  0011C4                     u1070:
  2442  0011C4                     
  2443                           ; BSR set to: 0
  2444                           ;handler.c: 204:             ProcessActionRequest(actionID, data);
  2445  0011C4  0EA0               	movlw	low ProcessAckPayload@data
  2446  0011C6  6E1B               	movwf	ProcessActionRequest@data^0,c
  2447  0011C8  0E00               	movlw	high ProcessAckPayload@data
  2448  0011CA  6E1C               	movwf	(ProcessActionRequest@data+1)^0,c
  2449  0011CC  51C0               	movf	ProcessAckPayload@actionID& (0+255),w,b
  2450  0011CE  ECAA  F00B         	call	_ProcessActionRequest
  2451                           
  2452                           ;handler.c: 205:             break;
  2453  0011D2  EF05  F009         	goto	l315
  2454  0011D6                     l2459:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;handler.c: 210:             SendError(0x04);
  2458  0011D6  0E04               	movlw	4
  2459  0011D8  EC14  F00B         	call	_SendError
  2460                           
  2461                           ;handler.c: 211:     }
  2462  0011DC  EF05  F009         	goto	l315
  2463  0011E0                     l2461:
  2464                           
  2465                           ; BSR set to: 0
  2466  0011E0  51C1               	movf	ProcessAckPayload@pktType& (0+255),w,b
  2467  0011E2  6E23               	movwf	??_ProcessAckPayload^0,c
  2468  0011E4  6A24               	clrf	(??_ProcessAckPayload+1)^0,c
  2469                           
  2470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2471                           ; Switch size 1, requested type "simple"
  2472                           ; Number of cases is 1, Range of values is 0 to 0
  2473                           ; switch strategies available:
  2474                           ; Name         Instructions Cycles
  2475                           ; simple_byte            4     3 (average)
  2476                           ;	Chosen strategy is simple_byte
  2477  0011E6  5024               	movf	(??_ProcessAckPayload+1)^0,w,c
  2478  0011E8  0A00               	xorlw	0	; case 0
  2479  0011EA  B4D8               	btfsc	status,2,c
  2480  0011EC  EFFA  F008         	goto	l2631
  2481  0011F0  EFEB  F008         	goto	l2459
  2482  0011F4                     l2631:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ; Switch size 1, requested type "simple"
  2486                           ; Number of cases is 2, Range of values is 3 to 16
  2487                           ; switch strategies available:
  2488                           ; Name         Instructions Cycles
  2489                           ; simple_byte            7     4 (average)
  2490                           ;	Chosen strategy is simple_byte
  2491  0011F4  5023               	movf	??_ProcessAckPayload^0,w,c
  2492  0011F6  0A03               	xorlw	3	; case 3
  2493  0011F8  B4D8               	btfsc	status,2,c
  2494  0011FA  EF05  F009         	goto	l315
  2495  0011FE  0A13               	xorlw	19	; case 16
  2496  001200  B4D8               	btfsc	status,2,c
  2497  001202  EFA4  F008         	goto	l2447
  2498  001206  EFEB  F008         	goto	l2459
  2499  00120A                     l315:
  2500  00120A  0012               	return		;funcret
  2501  00120C                     __end_of_ProcessAckPayload:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _ProcessActionRequest *****************
  2505 ;; Defined at:
  2506 ;;		line 215 in file "handler.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  actionID        1    wreg     unsigned char 
  2509 ;;  data            2   26[COMRAM] PTR unsigned char 
  2510 ;;		 -> ProcessAckPayload@data(32), 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  actionID        1   30[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;Total ram usage:        5 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 7
  2529 ;; This function calls:
  2530 ;;		_SendError
  2531 ;; This function is called by:
  2532 ;;		_ProcessAckPayload
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text23
  2537  001754                     __ptext23:
  2538                           	callstack 0
  2539  001754                     _ProcessActionRequest:
  2540                           	callstack 21
  2541                           
  2542                           ;incstack = 0
  2543                           ;ProcessActionRequest@actionID stored from wreg
  2544  001754  6E1F               	movwf	ProcessActionRequest@actionID^0,c
  2545  001756                     
  2546                           ;handler.c: 217:     switch (actionID) {
  2547  001756  EFC2  F00B         	goto	l2369
  2548  00175A                     l320:
  2549  00175A  9289               	bcf	137,1,c	;volatile
  2550  00175C                     
  2551                           ;handler.c: 220:             if (data[0]) {
  2552  00175C  C01B  FFD9         	movff	ProcessActionRequest@data,fsr2l
  2553  001760  C01C  FFDA         	movff	ProcessActionRequest@data+1,fsr2h
  2554  001764  50DF               	movf	indf2,w,c
  2555  001766  B4D8               	btfsc	status,2,c
  2556  001768  EFB8  F00B         	goto	u1031
  2557  00176C  EFBA  F00B         	goto	u1030
  2558  001770                     u1031:
  2559  001770  EFD3  F00B         	goto	l327
  2560  001774                     u1030:
  2561  001774  8289               	bsf	137,1,c	;volatile
  2562  001776  EFD3  F00B         	goto	l327
  2563  00177A                     l2367:
  2564                           
  2565                           ;handler.c: 225:             SendError(0x04);
  2566  00177A  0E04               	movlw	4
  2567  00177C  EC14  F00B         	call	_SendError
  2568                           
  2569                           ;handler.c: 226:     }
  2570  001780  EFD3  F00B         	goto	l327
  2571  001784                     l2369:
  2572  001784  501F               	movf	ProcessActionRequest@actionID^0,w,c
  2573  001786  6E1D               	movwf	??_ProcessActionRequest^0,c
  2574  001788  6A1E               	clrf	(??_ProcessActionRequest+1)^0,c
  2575                           
  2576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2577                           ; Switch size 1, requested type "simple"
  2578                           ; Number of cases is 1, Range of values is 0 to 0
  2579                           ; switch strategies available:
  2580                           ; Name         Instructions Cycles
  2581                           ; simple_byte            4     3 (average)
  2582                           ;	Chosen strategy is simple_byte
  2583  00178A  501E               	movf	(??_ProcessActionRequest+1)^0,w,c
  2584  00178C  0A00               	xorlw	0	; case 0
  2585  00178E  B4D8               	btfsc	status,2,c
  2586  001790  EFCC  F00B         	goto	l2633
  2587  001794  EFBD  F00B         	goto	l2367
  2588  001798                     l2633:
  2589                           
  2590                           ; Switch size 1, requested type "simple"
  2591                           ; Number of cases is 1, Range of values is 19 to 19
  2592                           ; switch strategies available:
  2593                           ; Name         Instructions Cycles
  2594                           ; simple_byte            4     3 (average)
  2595                           ;	Chosen strategy is simple_byte
  2596  001798  501D               	movf	??_ProcessActionRequest^0,w,c
  2597  00179A  0A13               	xorlw	19	; case 19
  2598  00179C  B4D8               	btfsc	status,2,c
  2599  00179E  EFAD  F00B         	goto	l320
  2600  0017A2  EFBD  F00B         	goto	l2367
  2601  0017A6                     l327:
  2602  0017A6  0012               	return		;funcret
  2603  0017A8                     __end_of_ProcessActionRequest:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _SendError *****************
  2607 ;; Defined at:
  2608 ;;		line 229 in file "handler.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  errorCode       1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  errorCode       1   24[COMRAM] unsigned char 
  2613 ;;  i               1   25[COMRAM] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      unsigned char 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;Total ram usage:        2 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 6
  2630 ;; This function calls:
  2631 ;;		_QueueTXPacket
  2632 ;; This function is called by:
  2633 ;;		_ProcessAckPayload
  2634 ;;		_ProcessActionRequest
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text24
  2639  001628                     __ptext24:
  2640                           	callstack 0
  2641  001628                     _SendError:
  2642                           	callstack 22
  2643                           
  2644                           ;incstack = 0
  2645                           ;SendError@errorCode stored from wreg
  2646  001628  6E19               	movwf	SendError@errorCode^0,c
  2647  00162A                     
  2648                           ;handler.c: 231:     bufferTX[i] = 0x01;
  2649  00162A  0E01               	movlw	1
  2650  00162C  0100               	movlb	0	; () banked
  2651  00162E  6F80               	movwf	_bufferTX& (0+255),b
  2652  001630                     
  2653                           ; BSR set to: 0
  2654                           ;handler.c: 232:     for (i = 1; i <= 3; i++) {
  2655  001630  0E01               	movlw	1
  2656  001632  6E1A               	movwf	SendError@i^0,c
  2657  001634                     l2315:
  2658                           
  2659                           ;handler.c: 233:         bufferTX[i] = config.Address[i - 1];
  2660  001634  0E2B               	movlw	low _config
  2661  001636  241A               	addwf	SendError@i^0,w,c
  2662  001638  6ED9               	movwf	fsr2l,c
  2663  00163A  6ADA               	clrf	fsr2h,c
  2664  00163C  0E00               	movlw	high _config
  2665  00163E  22DA               	addwfc	fsr2h,f,c
  2666  001640  0E80               	movlw	low _bufferTX
  2667  001642  241A               	addwf	SendError@i^0,w,c
  2668  001644  6EE1               	movwf	fsr1l,c
  2669  001646  6AE2               	clrf	fsr1h,c
  2670  001648  0E00               	movlw	high _bufferTX
  2671  00164A  22E2               	addwfc	fsr1h,f,c
  2672  00164C  CFDF FFE7          	movff	indf2,indf1
  2673  001650                     
  2674                           ;handler.c: 234:     }
  2675  001650  2A1A               	incf	SendError@i^0,f,c
  2676  001652  0E03               	movlw	3
  2677  001654  641A               	cpfsgt	SendError@i^0,c
  2678  001656  EF2F  F00B         	goto	u1011
  2679  00165A  EF31  F00B         	goto	u1010
  2680  00165E                     u1011:
  2681  00165E  EF1A  F00B         	goto	l2315
  2682  001662                     u1010:
  2683  001662                     
  2684                           ;handler.c: 235:     bufferTX[i] = 0;
  2685  001662  0E80               	movlw	low _bufferTX
  2686  001664  241A               	addwf	SendError@i^0,w,c
  2687  001666  6ED9               	movwf	fsr2l,c
  2688  001668  6ADA               	clrf	fsr2h,c
  2689  00166A  0E00               	movlw	high _bufferTX
  2690  00166C  22DA               	addwfc	fsr2h,f,c
  2691  00166E  0E00               	movlw	0
  2692  001670  6EDF               	movwf	indf2,c
  2693                           
  2694                           ;handler.c: 236:     bufferTX[++i] = errorCode;
  2695  001672  2A1A               	incf	SendError@i^0,f,c
  2696  001674  0E80               	movlw	low _bufferTX
  2697  001676  241A               	addwf	SendError@i^0,w,c
  2698  001678  6ED9               	movwf	fsr2l,c
  2699  00167A  6ADA               	clrf	fsr2h,c
  2700  00167C  0E00               	movlw	high _bufferTX
  2701  00167E  22DA               	addwfc	fsr2h,f,c
  2702  001680  C019  FFDF         	movff	SendError@errorCode,indf2
  2703  001684                     
  2704                           ;handler.c: 237:     return QueueTXPacket(bufferTX, (i+1));;	Return value of _SendError 
      +                          is never used
  2705  001684  0E80               	movlw	low _bufferTX
  2706  001686  6E12               	movwf	QueueTXPacket@buffer^0,c
  2707  001688  0E00               	movlw	high _bufferTX
  2708  00168A  6E13               	movwf	(QueueTXPacket@buffer+1)^0,c
  2709  00168C  281A               	incf	SendError@i^0,w,c
  2710  00168E  6E14               	movwf	QueueTXPacket@sz^0,c
  2711  001690  EC6E  F009         	call	_QueueTXPacket	;wreg free
  2712  001694  0012               	return		;funcret
  2713  001696                     __end_of_SendError:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _QueueTXPacket *****************
  2717 ;; Defined at:
  2718 ;;		line 64 in file "handler.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  2721 ;;		 -> bufferTX(32), 
  2722 ;;  sz              1   19[COMRAM] unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  j               1   22[COMRAM] unsigned char 
  2725 ;;  i               1   23[COMRAM] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      unsigned char 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2735 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;Total ram usage:        7 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 5
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_SendError
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text25
  2750  0012DC                     __ptext25:
  2751                           	callstack 0
  2752  0012DC                     _QueueTXPacket:
  2753                           	callstack 22
  2754  0012DC                     
  2755                           ;handler.c: 65:     uint8_t i;;handler.c: 66:     for (i = 0; i < 8; i++) {
  2756  0012DC  0E00               	movlw	0
  2757  0012DE  6E18               	movwf	QueueTXPacket@i^0,c
  2758  0012E0                     l2255:
  2759                           
  2760                           ;handler.c: 67:         if (packetsTX[i].free) {
  2761  0012E0  5018               	movf	QueueTXPacket@i^0,w,c
  2762  0012E2  0D22               	mullw	34
  2763  0012E4  0EEA               	movlw	low (_packetsTX+32)
  2764  0012E6  24F3               	addwf	243,w,c
  2765  0012E8  6ED9               	movwf	fsr2l,c
  2766  0012EA  0E00               	movlw	high (_packetsTX+32)
  2767  0012EC  20F4               	addwfc	prodh,w,c
  2768  0012EE  6EDA               	movwf	fsr2h,c
  2769  0012F0  50DF               	movf	indf2,w,c
  2770  0012F2  B4D8               	btfsc	status,2,c
  2771  0012F4  EF7E  F009         	goto	u921
  2772  0012F8  EF80  F009         	goto	u920
  2773  0012FC                     u921:
  2774  0012FC  EF82  F009         	goto	l2259
  2775  001300                     u920:
  2776  001300  EF8B  F009         	goto	l2263
  2777  001304                     l2259:
  2778                           
  2779                           ;handler.c: 70:     }
  2780  001304  2A18               	incf	QueueTXPacket@i^0,f,c
  2781  001306  0E07               	movlw	7
  2782  001308  6418               	cpfsgt	QueueTXPacket@i^0,c
  2783  00130A  EF89  F009         	goto	u931
  2784  00130E  EF8B  F009         	goto	u930
  2785  001312                     u931:
  2786  001312  EF70  F009         	goto	l2255
  2787  001316                     u930:
  2788  001316                     l2263:
  2789                           
  2790                           ;handler.c: 71:     if (i == 8) {
  2791  001316  0E08               	movlw	8
  2792  001318  1818               	xorwf	QueueTXPacket@i^0,w,c
  2793  00131A  A4D8               	btfss	status,2,c
  2794  00131C  EF92  F009         	goto	u941
  2795  001320  EF94  F009         	goto	u940
  2796  001324                     u941:
  2797  001324  EF97  F009         	goto	l2269
  2798  001328                     u940:
  2799  001328                     
  2800                           ;handler.c: 72:         return 0;
  2801  001328  0E00               	movlw	0
  2802  00132A  EFD2  F009         	goto	l275
  2803  00132E                     l2269:
  2804                           
  2805                           ;handler.c: 74:     packetsTX[i].free = 0;
  2806  00132E  5018               	movf	QueueTXPacket@i^0,w,c
  2807  001330  0D22               	mullw	34
  2808  001332  0EEA               	movlw	low (_packetsTX+32)
  2809  001334  24F3               	addwf	243,w,c
  2810  001336  6ED9               	movwf	fsr2l,c
  2811  001338  0E00               	movlw	high (_packetsTX+32)
  2812  00133A  20F4               	addwfc	prodh,w,c
  2813  00133C  6EDA               	movwf	fsr2h,c
  2814  00133E  0E00               	movlw	0
  2815  001340  6EDF               	movwf	indf2,c
  2816                           
  2817                           ;handler.c: 75:     packetsTX[i].size = sz;
  2818  001342  5018               	movf	QueueTXPacket@i^0,w,c
  2819  001344  0D22               	mullw	34
  2820  001346  0EEB               	movlw	low (_packetsTX+33)
  2821  001348  24F3               	addwf	243,w,c
  2822  00134A  6ED9               	movwf	fsr2l,c
  2823  00134C  0E00               	movlw	high (_packetsTX+33)
  2824  00134E  20F4               	addwfc	prodh,w,c
  2825  001350  6EDA               	movwf	fsr2h,c
  2826  001352  C014  FFDF         	movff	QueueTXPacket@sz,indf2
  2827  001356                     
  2828                           ;handler.c: 76:     for (uint8_t j = 0; j < sz; j++) {
  2829  001356  0E00               	movlw	0
  2830  001358  6E17               	movwf	QueueTXPacket@j^0,c
  2831  00135A  EFC8  F009         	goto	l2277
  2832  00135E                     l2273:
  2833                           
  2834                           ;handler.c: 77:         packetsTX[i].packet[j] = buffer[j];
  2835  00135E  5017               	movf	QueueTXPacket@j^0,w,c
  2836  001360  2412               	addwf	QueueTXPacket@buffer^0,w,c
  2837  001362  6ED9               	movwf	fsr2l,c
  2838  001364  0E00               	movlw	0
  2839  001366  2013               	addwfc	(QueueTXPacket@buffer+1)^0,w,c
  2840  001368  6EDA               	movwf	fsr2h,c
  2841  00136A  5018               	movf	QueueTXPacket@i^0,w,c
  2842  00136C  0D22               	mullw	34
  2843  00136E  0ECA               	movlw	low _packetsTX
  2844  001370  6E15               	movwf	??_QueueTXPacket^0,c
  2845  001372  0E00               	movlw	high _packetsTX
  2846  001374  6E16               	movwf	(??_QueueTXPacket+1)^0,c
  2847  001376  50F3               	movf	243,w,c
  2848  001378  2615               	addwf	??_QueueTXPacket^0,f,c
  2849  00137A  50F4               	movf	244,w,c
  2850  00137C  2216               	addwfc	(??_QueueTXPacket+1)^0,f,c
  2851  00137E  5017               	movf	QueueTXPacket@j^0,w,c
  2852  001380  2415               	addwf	??_QueueTXPacket^0,w,c
  2853  001382  6EE1               	movwf	fsr1l,c
  2854  001384  0E00               	movlw	0
  2855  001386  2016               	addwfc	(??_QueueTXPacket+1)^0,w,c
  2856  001388  6EE2               	movwf	fsr1h,c
  2857  00138A  CFDF FFE7          	movff	indf2,indf1
  2858  00138E                     
  2859                           ;handler.c: 78:     }
  2860  00138E  2A17               	incf	QueueTXPacket@j^0,f,c
  2861  001390                     l2277:
  2862  001390  5014               	movf	QueueTXPacket@sz^0,w,c
  2863  001392  5C17               	subwf	QueueTXPacket@j^0,w,c
  2864  001394  A0D8               	btfss	status,0,c
  2865  001396  EFCF  F009         	goto	u951
  2866  00139A  EFD1  F009         	goto	u950
  2867  00139E                     u951:
  2868  00139E  EFAF  F009         	goto	l2273
  2869  0013A2                     u950:
  2870  0013A2                     
  2871                           ;handler.c: 79:     return 1;
  2872  0013A2  0E01               	movlw	1
  2873  0013A4                     l275:
  2874  0013A4  0012               	return		;funcret
  2875  0013A6                     __end_of_QueueTXPacket:
  2876                           	callstack 0
  2877                           
  2878 ;; *************** function _INTERRUPT_InterruptManager *****************
  2879 ;; Defined at:
  2880 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;Total ram usage:        8 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 4
  2901 ;; This function calls:
  2902 ;;		_TMR1_ISR
  2903 ;; This function is called by:
  2904 ;;		Interrupt level 2
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	intcode
  2909  000008                     __pintcode:
  2910                           	callstack 0
  2911  000008                     _INTERRUPT_InterruptManager:
  2912                           	callstack 21
  2913                           
  2914                           ;incstack = 0
  2915  000008  8239               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2916  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
  2917  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2918  000012  CFE1 F00C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  2919  000016  CFE2 F00D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  2920  00001A  CFD9 F00E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  2921  00001E  CFDA F00F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  2922  000022  CFF3 F010          	movff	prodl,??_INTERRUPT_InterruptManager+6
  2923  000026  CFF4 F011          	movff	prodh,??_INTERRUPT_InterruptManager+7
  2924  00002A                     
  2925                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  2926  00002A  ACF2               	btfss	242,6,c	;volatile
  2927  00002C  EF1A  F000         	goto	i2u88_41
  2928  000030  EF1C  F000         	goto	i2u88_40
  2929  000034                     i2u88_41:
  2930  000034  EF2C  F000         	goto	i2l197
  2931  000038                     i2u88_40:
  2932  000038                     
  2933                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2934  000038  A09D               	btfss	157,0,c	;volatile
  2935  00003A  EF21  F000         	goto	i2u89_41
  2936  00003E  EF23  F000         	goto	i2u89_40
  2937  000042                     i2u89_41:
  2938  000042  EF2C  F000         	goto	i2l197
  2939  000046                     i2u89_40:
  2940  000046  A09E               	btfss	158,0,c	;volatile
  2941  000048  EF28  F000         	goto	i2u90_41
  2942  00004C  EF2A  F000         	goto	i2u90_40
  2943  000050                     i2u90_41:
  2944  000050  EF2C  F000         	goto	i2l197
  2945  000054                     i2u90_40:
  2946  000054                     
  2947                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  2948  000054  EC8B  F00C         	call	_TMR1_ISR	;wreg free
  2949  000058                     i2l197:
  2950  000058  C011  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  2951  00005C  C010  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  2952  000060  C00F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  2953  000064  C00E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  2954  000068  C00D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  2955  00006C  C00C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  2956  000070  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2957  000074  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2958  000078  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2959  00007A  0011               	retfie		f
  2960  00007C                     __end_of_INTERRUPT_InterruptManager:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _TMR1_ISR *****************
  2964 ;; Defined at:
  2965 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 3
  2986 ;; This function calls:
  2987 ;;		Absolute function
  2988 ;;		_TMR1_DefaultInterruptHandler
  2989 ;;		_TMR1_WriteTimer
  2990 ;;		_TimerInterruptHandler
  2991 ;; This function is called by:
  2992 ;;		_INTERRUPT_InterruptManager
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text27
  2997  001916                     __ptext27:
  2998                           	callstack 0
  2999  001916                     _TMR1_ISR:
  3000                           	callstack 21
  3001  001916                     
  3002                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  3003  001916  909E               	bcf	158,0,c	;volatile
  3004  001918                     
  3005                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  3006  001918  C037  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  3007  00191C  C038  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  3008  001920  ECD3  F00C         	call	_TMR1_WriteTimer	;wreg free
  3009  001924                     
  3010                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  3011  001924  5035               	movf	_TMR1_InterruptHandler^0,w,c
  3012  001926  1036               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  3013  001928  B4D8               	btfsc	status,2,c
  3014  00192A  EF99  F00C         	goto	i2u75_41
  3015  00192E  EF9B  F00C         	goto	i2u75_40
  3016  001932                     i2u75_41:
  3017  001932  EFA7  F00C         	goto	i2l169
  3018  001936                     i2u75_40:
  3019  001936                     
  3020                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  3021  001936  D802               	call	i2u76_48
  3022  001938  EFA7  F00C         	goto	i2u76_49
  3023  00193C                     i2u76_48:
  3024  00193C  0005               	push	
  3025  00193E  6EFA               	movwf	pclath,c
  3026  001940  5035               	movf	_TMR1_InterruptHandler^0,w,c
  3027  001942  6EFD               	movwf	tosl,c
  3028  001944  5036               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  3029  001946  6EFE               	movwf	tosh,c
  3030  001948  6AFF               	clrf	tosu,c
  3031  00194A  50FA               	movf	pclath,w,c
  3032  00194C  0012               	return		;indir
  3033  00194E                     i2u76_49:
  3034  00194E                     i2l169:
  3035  00194E  0012               	return		;funcret
  3036  001950                     __end_of_TMR1_ISR:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3040 ;; Defined at:
  3041 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		None
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_TMR1_Initialize
  3065 ;;		_TMR1_ISR
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text28
  3070  001AE2                     __ptext28:
  3071                           	callstack 0
  3072  001AE2                     _TMR1_DefaultInterruptHandler:
  3073                           	callstack 23
  3074  001AE2  0012               	return		;funcret
  3075  001AE4                     __end_of_TMR1_DefaultInterruptHandler:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function _TimerInterruptHandler *****************
  3079 ;; Defined at:
  3080 ;;		line 132 in file "handler.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 2
  3101 ;; This function calls:
  3102 ;;		_SendPing
  3103 ;;		___llmod
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;;		_TMR1_ISR
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text29
  3111  0017F6                     __ptext29:
  3112                           	callstack 0
  3113  0017F6                     _TimerInterruptHandler:
  3114                           	callstack 21
  3115  0017F6                     
  3116                           ;handler.c: 133:     Ticks++;
  3117  0017F6  0E01               	movlw	1
  3118  0017F8  2631               	addwf	_Ticks^0,f,c
  3119  0017FA  0E00               	movlw	0
  3120  0017FC  2232               	addwfc	(_Ticks+1)^0,f,c
  3121  0017FE  2233               	addwfc	(_Ticks+2)^0,f,c
  3122  001800  2234               	addwfc	(_Ticks+3)^0,f,c
  3123  001802                     
  3124                           ;handler.c: 136:     if (Ticks % config.PingInterval != 0) {
  3125  001802  C031  F001         	movff	_Ticks,___llmod@dividend
  3126  001806  C032  F002         	movff	_Ticks+1,___llmod@dividend+1
  3127  00180A  C033  F003         	movff	_Ticks+2,___llmod@dividend+2
  3128  00180E  C034  F004         	movff	_Ticks+3,___llmod@dividend+3
  3129  001812  C02F  F005         	movff	_config+4,___llmod@divisor
  3130  001816  C030  F006         	movff	_config+5,___llmod@divisor+1
  3131  00181A  6A07               	clrf	(___llmod@divisor+2)^0,c
  3132  00181C  6A08               	clrf	(___llmod@divisor+3)^0,c
  3133  00181E  EC90  F00A         	call	___llmod	;wreg free
  3134  001822  5001               	movf	?___llmod^0,w,c
  3135  001824  1002               	iorwf	(?___llmod+1)^0,w,c
  3136  001826  1003               	iorwf	(?___llmod+2)^0,w,c
  3137  001828  1004               	iorwf	(?___llmod+3)^0,w,c
  3138  00182A  B4D8               	btfsc	status,2,c
  3139  00182C  EF1A  F00C         	goto	i2u74_41
  3140  001830  EF1C  F00C         	goto	i2u74_40
  3141  001834                     i2u74_41:
  3142  001834  EF1E  F00C         	goto	i2l2053
  3143  001838                     i2u74_40:
  3144  001838  EF20  F00C         	goto	i2l298
  3145  00183C                     i2l2053:
  3146                           
  3147                           ;handler.c: 139:     SendPing();
  3148  00183C  EC46  F00C         	call	_SendPing	;wreg free
  3149  001840                     i2l298:
  3150  001840  0012               	return		;funcret
  3151  001842                     __end_of_TimerInterruptHandler:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function ___llmod *****************
  3155 ;; Defined at:
  3156 ;;		line 7 in file "/Applications/microchip/xc8/v2.36/pic/sources/c99/common/llmod.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  dividend        4    0[COMRAM] unsigned long 
  3159 ;;  divisor         4    4[COMRAM] unsigned long 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  counter         1    8[COMRAM] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  4    0[COMRAM] unsigned long 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        9 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_TimerInterruptHandler
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text30
  3185  001520                     __ptext30:
  3186                           	callstack 0
  3187  001520                     ___llmod:
  3188                           	callstack 22
  3189  001520  5005               	movf	___llmod@divisor^0,w,c
  3190  001522  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  3191  001524  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  3192  001526  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  3193  001528  B4D8               	btfsc	status,2,c
  3194  00152A  EF99  F00A         	goto	i2u67_41
  3195  00152E  EF9B  F00A         	goto	i2u67_40
  3196  001532                     i2u67_41:
  3197  001532  EFCB  F00A         	goto	i2l862
  3198  001536                     i2u67_40:
  3199  001536  0E01               	movlw	1
  3200  001538  6E09               	movwf	___llmod@counter^0,c
  3201  00153A  EFA5  F00A         	goto	i2l1925
  3202  00153E                     i2l1923:
  3203  00153E  90D8               	bcf	status,0,c
  3204  001540  3605               	rlcf	___llmod@divisor^0,f,c
  3205  001542  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  3206  001544  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  3207  001546  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  3208  001548  2A09               	incf	___llmod@counter^0,f,c
  3209  00154A                     i2l1925:
  3210  00154A  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  3211  00154C  EFAA  F00A         	goto	i2u68_41
  3212  001550  EFAC  F00A         	goto	i2u68_40
  3213  001554                     i2u68_41:
  3214  001554  EF9F  F00A         	goto	i2l1923
  3215  001558                     i2u68_40:
  3216  001558                     i2l1927:
  3217  001558  5005               	movf	___llmod@divisor^0,w,c
  3218  00155A  5C01               	subwf	___llmod@dividend^0,w,c
  3219  00155C  5006               	movf	(___llmod@divisor+1)^0,w,c
  3220  00155E  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  3221  001560  5007               	movf	(___llmod@divisor+2)^0,w,c
  3222  001562  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  3223  001564  5008               	movf	(___llmod@divisor+3)^0,w,c
  3224  001566  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  3225  001568  A0D8               	btfss	status,0,c
  3226  00156A  EFB9  F00A         	goto	i2u69_41
  3227  00156E  EFBB  F00A         	goto	i2u69_40
  3228  001572                     i2u69_41:
  3229  001572  EFC3  F00A         	goto	i2l1931
  3230  001576                     i2u69_40:
  3231  001576  5005               	movf	___llmod@divisor^0,w,c
  3232  001578  5E01               	subwf	___llmod@dividend^0,f,c
  3233  00157A  5006               	movf	(___llmod@divisor+1)^0,w,c
  3234  00157C  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  3235  00157E  5007               	movf	(___llmod@divisor+2)^0,w,c
  3236  001580  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  3237  001582  5008               	movf	(___llmod@divisor+3)^0,w,c
  3238  001584  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  3239  001586                     i2l1931:
  3240  001586  90D8               	bcf	status,0,c
  3241  001588  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  3242  00158A  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  3243  00158C  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  3244  00158E  3205               	rrcf	___llmod@divisor^0,f,c
  3245  001590  2E09               	decfsz	___llmod@counter^0,f,c
  3246  001592  EFAC  F00A         	goto	i2l1927
  3247  001596                     i2l862:
  3248  001596  C001  F001         	movff	___llmod@dividend,?___llmod
  3249  00159A  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3250  00159E  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3251  0015A2  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3252  0015A6  0012               	return		;funcret
  3253  0015A8                     __end_of___llmod:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _SendPing *****************
  3257 ;; Defined at:
  3258 ;;		line 240 in file "handler.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  i               1    7[COMRAM] unsigned char 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      unsigned char 
  3265 ;; Registers used:
  3266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;Total ram usage:        1 bytes
  3277 ;; Hardware stack levels used: 1
  3278 ;; Hardware stack levels required when called: 1
  3279 ;; This function calls:
  3280 ;;		i2_QueueTXPacket
  3281 ;; This function is called by:
  3282 ;;		_TimerInterruptHandler
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text31
  3287  00188C                     __ptext31:
  3288                           	callstack 0
  3289  00188C                     _SendPing:
  3290                           	callstack 21
  3291  00188C                     
  3292                           ;handler.c: 241:     bufferTX[0] = 0x02;
  3293  00188C  0E02               	movlw	2
  3294  00188E  0100               	movlb	0	; () banked
  3295  001890  6F80               	movwf	_bufferTX& (0+255),b
  3296                           
  3297                           ;handler.c: 242:     for (char i = 0; i < 3; i++) {
  3298  001892  0E00               	movlw	0
  3299  001894  6E08               	movwf	SendPing@i^0,c
  3300  001896                     i2l1881:
  3301                           
  3302                           ;handler.c: 243:         bufferTX[i + 1] = config.Address[i];
  3303  001896  0E2C               	movlw	low (_config+1)
  3304  001898  2408               	addwf	SendPing@i^0,w,c
  3305  00189A  6ED9               	movwf	fsr2l,c
  3306  00189C  6ADA               	clrf	fsr2h,c
  3307  00189E  0E00               	movlw	high (_config+1)
  3308  0018A0  22DA               	addwfc	fsr2h,f,c
  3309  0018A2  0E81               	movlw	low (_bufferTX+1)
  3310  0018A4  2408               	addwf	SendPing@i^0,w,c
  3311  0018A6  6EE1               	movwf	fsr1l,c
  3312  0018A8  6AE2               	clrf	fsr1h,c
  3313  0018AA  0E00               	movlw	high (_bufferTX+1)
  3314  0018AC  22E2               	addwfc	fsr1h,f,c
  3315  0018AE  CFDF FFE7          	movff	indf2,indf1
  3316  0018B2                     
  3317                           ;handler.c: 244:     }
  3318  0018B2  2A08               	incf	SendPing@i^0,f,c
  3319  0018B4  0E02               	movlw	2
  3320  0018B6  6408               	cpfsgt	SendPing@i^0,c
  3321  0018B8  EF60  F00C         	goto	i2u64_41
  3322  0018BC  EF62  F00C         	goto	i2u64_40
  3323  0018C0                     i2u64_41:
  3324  0018C0  EF4B  F00C         	goto	i2l1881
  3325  0018C4                     i2u64_40:
  3326  0018C4                     
  3327                           ;handler.c: 245:     return QueueTXPacket(bufferTX, (3 + 1));;	Return value of _SendPing
      +                           is never used
  3328  0018C4  0E80               	movlw	low _bufferTX
  3329  0018C6  6E01               	movwf	i2QueueTXPacket@buffer^0,c
  3330  0018C8  0E00               	movlw	high _bufferTX
  3331  0018CA  6E02               	movwf	(i2QueueTXPacket@buffer+1)^0,c
  3332  0018CC  0E04               	movlw	4
  3333  0018CE  6E03               	movwf	i2QueueTXPacket@sz^0,c
  3334  0018D0  ECD3  F009         	call	i2_QueueTXPacket	;wreg free
  3335  0018D4  0012               	return		;funcret
  3336  0018D6                     __end_of_SendPing:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function i2_QueueTXPacket *****************
  3340 ;; Defined at:
  3341 ;;		line 64 in file "handler.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  buffer          2    0[COMRAM] PTR unsigned char 
  3344 ;;		 -> bufferTX(32), 
  3345 ;;  sz              1    2[COMRAM] unsigned char 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  i               1    6[COMRAM] unsigned char 
  3348 ;;  j               1    5[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      unsigned char 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        7 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_SendPing
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text32
  3372  0013A6                     __ptext32:
  3373                           	callstack 0
  3374  0013A6                     i2_QueueTXPacket:
  3375                           	callstack 21
  3376  0013A6                     
  3377                           ;handler.c: 65:     uint8_t i;;handler.c: 66:     for (i = 0; i < 8; i++) {
  3378  0013A6  0E00               	movlw	0
  3379  0013A8  6E07               	movwf	i2QueueTXPacket@i^0,c
  3380  0013AA                     i2l1795:
  3381                           
  3382                           ;handler.c: 67:         if (packetsTX[i].free) {
  3383  0013AA  5007               	movf	i2QueueTXPacket@i^0,w,c
  3384  0013AC  0D22               	mullw	34
  3385  0013AE  0EEA               	movlw	low (_packetsTX+32)
  3386  0013B0  24F3               	addwf	243,w,c
  3387  0013B2  6ED9               	movwf	fsr2l,c
  3388  0013B4  0E00               	movlw	high (_packetsTX+32)
  3389  0013B6  20F4               	addwfc	prodh,w,c
  3390  0013B8  6EDA               	movwf	fsr2h,c
  3391  0013BA  50DF               	movf	indf2,w,c
  3392  0013BC  B4D8               	btfsc	status,2,c
  3393  0013BE  EFE3  F009         	goto	i2u58_41
  3394  0013C2  EFE5  F009         	goto	i2u58_40
  3395  0013C6                     i2u58_41:
  3396  0013C6  EFE7  F009         	goto	i2l1799
  3397  0013CA                     i2u58_40:
  3398  0013CA  EFF0  F009         	goto	i2l1803
  3399  0013CE                     i2l1799:
  3400                           
  3401                           ;handler.c: 70:     }
  3402  0013CE  2A07               	incf	i2QueueTXPacket@i^0,f,c
  3403  0013D0  0E07               	movlw	7
  3404  0013D2  6407               	cpfsgt	i2QueueTXPacket@i^0,c
  3405  0013D4  EFEE  F009         	goto	i2u59_41
  3406  0013D8  EFF0  F009         	goto	i2u59_40
  3407  0013DC                     i2u59_41:
  3408  0013DC  EFD5  F009         	goto	i2l1795
  3409  0013E0                     i2u59_40:
  3410  0013E0                     i2l1803:
  3411                           
  3412                           ;handler.c: 71:     if (i == 8) {
  3413  0013E0  0E08               	movlw	8
  3414  0013E2  1807               	xorwf	i2QueueTXPacket@i^0,w,c
  3415  0013E4  A4D8               	btfss	status,2,c
  3416  0013E6  EFF7  F009         	goto	i2u60_41
  3417  0013EA  EFF9  F009         	goto	i2u60_40
  3418  0013EE                     i2u60_41:
  3419  0013EE  EFFC  F009         	goto	i2l1809
  3420  0013F2                     i2u60_40:
  3421  0013F2                     
  3422                           ;handler.c: 72:         return 0;
  3423  0013F2  0E00               	movlw	0
  3424  0013F4  EF37  F00A         	goto	i2l275
  3425  0013F8                     i2l1809:
  3426                           
  3427                           ;handler.c: 74:     packetsTX[i].free = 0;
  3428  0013F8  5007               	movf	i2QueueTXPacket@i^0,w,c
  3429  0013FA  0D22               	mullw	34
  3430  0013FC  0EEA               	movlw	low (_packetsTX+32)
  3431  0013FE  24F3               	addwf	243,w,c
  3432  001400  6ED9               	movwf	fsr2l,c
  3433  001402  0E00               	movlw	high (_packetsTX+32)
  3434  001404  20F4               	addwfc	prodh,w,c
  3435  001406  6EDA               	movwf	fsr2h,c
  3436  001408  0E00               	movlw	0
  3437  00140A  6EDF               	movwf	indf2,c
  3438                           
  3439                           ;handler.c: 75:     packetsTX[i].size = sz;
  3440  00140C  5007               	movf	i2QueueTXPacket@i^0,w,c
  3441  00140E  0D22               	mullw	34
  3442  001410  0EEB               	movlw	low (_packetsTX+33)
  3443  001412  24F3               	addwf	243,w,c
  3444  001414  6ED9               	movwf	fsr2l,c
  3445  001416  0E00               	movlw	high (_packetsTX+33)
  3446  001418  20F4               	addwfc	prodh,w,c
  3447  00141A  6EDA               	movwf	fsr2h,c
  3448  00141C  C003  FFDF         	movff	i2QueueTXPacket@sz,indf2
  3449  001420                     
  3450                           ;handler.c: 76:     for (uint8_t j = 0; j < sz; j++) {
  3451  001420  0E00               	movlw	0
  3452  001422  6E06               	movwf	i2QueueTXPacket@j^0,c
  3453  001424  EF2D  F00A         	goto	i2l1817
  3454  001428                     i2l1813:
  3455                           
  3456                           ;handler.c: 77:         packetsTX[i].packet[j] = buffer[j];
  3457  001428  5006               	movf	i2QueueTXPacket@j^0,w,c
  3458  00142A  2401               	addwf	i2QueueTXPacket@buffer^0,w,c
  3459  00142C  6ED9               	movwf	fsr2l,c
  3460  00142E  0E00               	movlw	0
  3461  001430  2002               	addwfc	(i2QueueTXPacket@buffer+1)^0,w,c
  3462  001432  6EDA               	movwf	fsr2h,c
  3463  001434  5007               	movf	i2QueueTXPacket@i^0,w,c
  3464  001436  0D22               	mullw	34
  3465  001438  0ECA               	movlw	low _packetsTX
  3466  00143A  6E04               	movwf	??i2_QueueTXPacket^0,c
  3467  00143C  0E00               	movlw	high _packetsTX
  3468  00143E  6E05               	movwf	(??i2_QueueTXPacket+1)^0,c
  3469  001440  50F3               	movf	243,w,c
  3470  001442  2604               	addwf	??i2_QueueTXPacket^0,f,c
  3471  001444  50F4               	movf	244,w,c
  3472  001446  2205               	addwfc	(??i2_QueueTXPacket+1)^0,f,c
  3473  001448  5006               	movf	i2QueueTXPacket@j^0,w,c
  3474  00144A  2404               	addwf	??i2_QueueTXPacket^0,w,c
  3475  00144C  6EE1               	movwf	fsr1l,c
  3476  00144E  0E00               	movlw	0
  3477  001450  2005               	addwfc	(??i2_QueueTXPacket+1)^0,w,c
  3478  001452  6EE2               	movwf	fsr1h,c
  3479  001454  CFDF FFE7          	movff	indf2,indf1
  3480  001458                     
  3481                           ;handler.c: 78:     }
  3482  001458  2A06               	incf	i2QueueTXPacket@j^0,f,c
  3483  00145A                     i2l1817:
  3484  00145A  5003               	movf	i2QueueTXPacket@sz^0,w,c
  3485  00145C  5C06               	subwf	i2QueueTXPacket@j^0,w,c
  3486  00145E  A0D8               	btfss	status,0,c
  3487  001460  EF34  F00A         	goto	i2u61_41
  3488  001464  EF36  F00A         	goto	i2u61_40
  3489  001468                     i2u61_41:
  3490  001468  EF14  F00A         	goto	i2l1813
  3491  00146C                     i2u61_40:
  3492  00146C                     
  3493                           ;handler.c: 79:     return 1;
  3494  00146C  0E01               	movlw	1
  3495  00146E                     i2l275:
  3496  00146E  0012               	return		;funcret
  3497  001470                     __end_ofi2_QueueTXPacket:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _TMR1_WriteTimer *****************
  3501 ;; Defined at:
  3502 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  timerVal        2    0[COMRAM] unsigned short 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;Total ram usage:        2 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_TMR1_ISR
  3526 ;;		_TMR1_Reload
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text33
  3531  0019A6                     __ptext33:
  3532                           	callstack 0
  3533  0019A6                     _TMR1_WriteTimer:
  3534                           	callstack 23
  3535  0019A6                     
  3536                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  3537  0019A6  A4CD               	btfss	205,2,c	;volatile
  3538  0019A8  EFD8  F00C         	goto	i2u70_41
  3539  0019AC  EFDA  F00C         	goto	i2u70_40
  3540  0019B0                     i2u70_41:
  3541  0019B0  EFE2  F00C         	goto	i2l1957
  3542  0019B4                     i2u70_40:
  3543  0019B4                     
  3544                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  3545  0019B4  90CD               	bcf	205,0,c	;volatile
  3546  0019B6                     
  3547                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  3548  0019B6  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3549  0019B8  6ECF               	movwf	207,c	;volatile
  3550  0019BA                     
  3551                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  3552  0019BA  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3553  0019BE                     
  3554                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  3555  0019BE  80CD               	bsf	205,0,c	;volatile
  3556                           
  3557                           ;mcc_generated_files/tmr1.c: 134:     }
  3558  0019C0  EFE6  F00C         	goto	i2l156
  3559  0019C4                     i2l1957:
  3560                           
  3561                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  3562  0019C4  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3563  0019C6  6ECF               	movwf	207,c	;volatile
  3564  0019C8                     
  3565                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  3566  0019C8  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3567  0019CC                     i2l156:
  3568  0019CC  0012               	return		;funcret
  3569  0019CE                     __end_of_TMR1_WriteTimer:
  3570                           	callstack 0
  3571                           
  3572                           	psect	text34
  3573  000000                     __ptext34:
  3574                           	callstack 0
  3575  000000                     
  3576                           	psect	rparam
  3577  0000                     
  3578                           	psect	temp
  3579  000039                     btemp:
  3580                           	callstack 0
  3581  000039                     	ds	1
  3582  0000                     int$flags	set	btemp
  3583  0000                     wtemp8	set	btemp+1
  3584  0000                     ttemp5	set	btemp+1
  3585  0000                     ttemp6	set	btemp+4
  3586  0000                     ttemp7	set	btemp+8
  3587                           
  3588                           	psect	idloc
  3589                           
  3590                           ;Config register IDLOC0 @ 0x200000
  3591                           ;	unspecified, using default values
  3592  200000                     	org	2097152
  3593  200000  FF                 	db	255
  3594                           
  3595                           ;Config register IDLOC1 @ 0x200001
  3596                           ;	unspecified, using default values
  3597  200001                     	org	2097153
  3598  200001  FF                 	db	255
  3599                           
  3600                           ;Config register IDLOC2 @ 0x200002
  3601                           ;	unspecified, using default values
  3602  200002                     	org	2097154
  3603  200002  FF                 	db	255
  3604                           
  3605                           ;Config register IDLOC3 @ 0x200003
  3606                           ;	unspecified, using default values
  3607  200003                     	org	2097155
  3608  200003  FF                 	db	255
  3609                           
  3610                           ;Config register IDLOC4 @ 0x200004
  3611                           ;	unspecified, using default values
  3612  200004                     	org	2097156
  3613  200004  FF                 	db	255
  3614                           
  3615                           ;Config register IDLOC5 @ 0x200005
  3616                           ;	unspecified, using default values
  3617  200005                     	org	2097157
  3618  200005  FF                 	db	255
  3619                           
  3620                           ;Config register IDLOC6 @ 0x200006
  3621                           ;	unspecified, using default values
  3622  200006                     	org	2097158
  3623  200006  FF                 	db	255
  3624                           
  3625                           ;Config register IDLOC7 @ 0x200007
  3626                           ;	unspecified, using default values
  3627  200007                     	org	2097159
  3628  200007  FF                 	db	255
  3629                           
  3630                           	psect	config
  3631                           
  3632                           ; Padding undefined space
  3633  300000                     	org	3145728
  3634  300000  FF                 	db	255
  3635                           
  3636                           ;Config register CONFIG1H @ 0x300001
  3637                           ;	Oscillator Selection bits
  3638                           ;	FOSC = INTIO67, Internal oscillator block
  3639                           ;	4X PLL Enable
  3640                           ;	PLLCFG = OFF, Oscillator used directly
  3641                           ;	Primary clock enable bit
  3642                           ;	PRICLKEN = ON, Primary clock enabled
  3643                           ;	Fail-Safe Clock Monitor Enable bit
  3644                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3645                           ;	Internal/External Oscillator Switchover bit
  3646                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3647  300001                     	org	3145729
  3648  300001  28                 	db	40
  3649                           
  3650                           ;Config register CONFIG2L @ 0x300002
  3651                           ;	Power-up Timer Enable bit
  3652                           ;	PWRTEN = OFF, Power up timer disabled
  3653                           ;	Brown-out Reset Enable bits
  3654                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3655                           ;	Brown Out Reset Voltage bits
  3656                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3657  300002                     	org	3145730
  3658  300002  1F                 	db	31
  3659                           
  3660                           ;Config register CONFIG2H @ 0x300003
  3661                           ;	Watchdog Timer Enable bits
  3662                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3663                           ;	Watchdog Timer Postscale Select bits
  3664                           ;	WDTPS = 32768, 1:32768
  3665  300003                     	org	3145731
  3666  300003  3C                 	db	60
  3667                           
  3668                           ; Padding undefined space
  3669  300004                     	org	3145732
  3670  300004  FF                 	db	255
  3671                           
  3672                           ;Config register CONFIG3H @ 0x300005
  3673                           ;	CCP2 MUX bit
  3674                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3675                           ;	PORTB A/D Enable bit
  3676                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  3677                           ;	P3A/CCP3 Mux bit
  3678                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3679                           ;	HFINTOSC Fast Start-up
  3680                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3681                           ;	Timer3 Clock input mux bit
  3682                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3683                           ;	ECCP2 B output mux bit
  3684                           ;	P2BMX = PORTB5, P2B is on RB5
  3685                           ;	MCLR Pin Enable bit
  3686                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3687  300005                     	org	3145733
  3688  300005  BF                 	db	191
  3689                           
  3690                           ;Config register CONFIG4L @ 0x300006
  3691                           ;	Stack Full/Underflow Reset Enable bit
  3692                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3693                           ;	Single-Supply ICSP Enable bit
  3694                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  3695                           ;	Extended Instruction Set Enable bit
  3696                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3697                           ;	Background Debug
  3698                           ;	DEBUG = OFF, Disabled
  3699  300006                     	org	3145734
  3700  300006  85                 	db	133
  3701                           
  3702                           ; Padding undefined space
  3703  300007                     	org	3145735
  3704  300007  FF                 	db	255
  3705                           
  3706                           ;Config register CONFIG5L @ 0x300008
  3707                           ;	Code Protection Block 0
  3708                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3709                           ;	Code Protection Block 1
  3710                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3711                           ;	Code Protection Block 2
  3712                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3713                           ;	Code Protection Block 3
  3714                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3715  300008                     	org	3145736
  3716  300008  0F                 	db	15
  3717                           
  3718                           ;Config register CONFIG5H @ 0x300009
  3719                           ;	Boot Block Code Protection bit
  3720                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3721                           ;	Data EEPROM Code Protection bit
  3722                           ;	CPD = OFF, Data EEPROM not code-protected
  3723  300009                     	org	3145737
  3724  300009  C0                 	db	192
  3725                           
  3726                           ;Config register CONFIG6L @ 0x30000A
  3727                           ;	Write Protection Block 0
  3728                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3729                           ;	Write Protection Block 1
  3730                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3731                           ;	Write Protection Block 2
  3732                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3733                           ;	Write Protection Block 3
  3734                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3735  30000A                     	org	3145738
  3736  30000A  0F                 	db	15
  3737                           
  3738                           ;Config register CONFIG6H @ 0x30000B
  3739                           ;	Configuration Register Write Protection bit
  3740                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3741                           ;	Boot Block Write Protection bit
  3742                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3743                           ;	Data EEPROM Write Protection bit
  3744                           ;	WRTD = OFF, Data EEPROM not write-protected
  3745  30000B                     	org	3145739
  3746  30000B  E0                 	db	224
  3747                           
  3748                           ;Config register CONFIG7L @ 0x30000C
  3749                           ;	Table Read Protection Block 0
  3750                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3751                           ;	Table Read Protection Block 1
  3752                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3753                           ;	Table Read Protection Block 2
  3754                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3755                           ;	Table Read Protection Block 3
  3756                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3757  30000C                     	org	3145740
  3758  30000C  0F                 	db	15
  3759                           
  3760                           ;Config register CONFIG7H @ 0x30000D
  3761                           ;	Boot Block Table Read Protection bit
  3762                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3763  30000D                     	org	3145741
  3764  30000D  40                 	db	64
  3765                           tosu	equ	0xFFF
  3766                           tosh	equ	0xFFE
  3767                           tosl	equ	0xFFD
  3768                           stkptr	equ	0xFFC
  3769                           pclatu	equ	0xFFB
  3770                           pclath	equ	0xFFA
  3771                           pcl	equ	0xFF9
  3772                           tblptru	equ	0xFF8
  3773                           tblptrh	equ	0xFF7
  3774                           tblptrl	equ	0xFF6
  3775                           tablat	equ	0xFF5
  3776                           prodh	equ	0xFF4
  3777                           prodl	equ	0xFF3
  3778                           indf0	equ	0xFEF
  3779                           postinc0	equ	0xFEE
  3780                           postdec0	equ	0xFED
  3781                           preinc0	equ	0xFEC
  3782                           plusw0	equ	0xFEB
  3783                           fsr0h	equ	0xFEA
  3784                           fsr0l	equ	0xFE9
  3785                           wreg	equ	0xFE8
  3786                           indf1	equ	0xFE7
  3787                           postinc1	equ	0xFE6
  3788                           postdec1	equ	0xFE5
  3789                           preinc1	equ	0xFE4
  3790                           plusw1	equ	0xFE3
  3791                           fsr1h	equ	0xFE2
  3792                           fsr1l	equ	0xFE1
  3793                           bsr	equ	0xFE0
  3794                           indf2	equ	0xFDF
  3795                           postinc2	equ	0xFDE
  3796                           postdec2	equ	0xFDD
  3797                           preinc2	equ	0xFDC
  3798                           plusw2	equ	0xFDB
  3799                           fsr2h	equ	0xFDA
  3800                           fsr2l	equ	0xFD9
  3801                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    4
    Data        6
    BSS         346
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      56
    BANK0           160     36     106
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    nrf24_read_rf_data@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    nrf24_send_rf_data@buffer	PTR unsigned char  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), 

    nrf24_read_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    nrf24_write_buff@buffer	PTR unsigned char  size(2) Largest target is 272
		 -> packetsTX(BIGRAM[272]), DEFAULT_PIPE_ADDR(BANK0[6]), 

    ProcessActionRequest@data	PTR unsigned char  size(2) Largest target is 32
		 -> ProcessAckPayload@data(BANK0[32]), 

    ProcessAckPayload@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    VerifyBoardAddress@bufferRX	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    QueueTXPacket@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferTX(BANK0[32]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInterruptHandler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInterruptHandler(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_HandlePacketLoop
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _InitRadio->_nrf24_write_buff
    _nrf24_rf_init->_SPI1_Open
    _HandlePacketLoop->_ProcessAckPayload
    _nrf24_send_rf_data->_nrf24_write_buff
    _nrf24_write_buff->_SPI1_ExchangeByte
    _nrf24_read_rf_data->_nrf24_read_buff
    _nrf24_read_buff->_SPI1_ExchangeByte
    _nrf24_flush_tx_rx->_nrf24_write_register
    _nrf24_write_register->_SPI1_ExchangeByte
    _nrf24_read_register->_SPI1_ExchangeByte
    _nrf24_read_dynamic_payload_length->_SPI1_ExchangeByte
    _ProcessAckPayload->_ProcessActionRequest
    _ProcessActionRequest->_SendError
    _SendError->_QueueTXPacket

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TimerInterruptHandler->___llmod
    _SendPing->i2_QueueTXPacket

Critical Paths under _main in BANK0

    _HandlePacketLoop->_ProcessAckPayload

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13355
                   _HandlePacketLoop
                          _InitRadio
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitRadio                                            1     1      0    2312
                                             23 COMRAM     1     1      0
                      _nrf24_rf_init
                   _nrf24_write_buff
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_rf_init                                        0     0      0      88
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0      88
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _HandlePacketLoop                                     3     3      0   10695
                                             39 COMRAM     3     3      0
                  _ProcessAckPayload
                 _VerifyBoardAddress
                  _nrf24_flush_tx_rx
  _nrf24_read_dynamic_payload_length
                _nrf24_read_register
                 _nrf24_read_rf_data
                 _nrf24_send_rf_data
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_send_rf_data                                   3     0      3     946
                                             23 COMRAM     3     0      3
                   _nrf24_write_buff
 ---------------------------------------------------------------------------------
 (2) _nrf24_write_buff                                     5     2      3     704
                                             18 COMRAM     5     2      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_rf_data                                   3     0      3    3428
                                             23 COMRAM     3     0      3
                  _nrf24_flush_tx_rx
                    _nrf24_read_buff
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (3) _nrf24_read_buff                                      5     2      3     375
                                             18 COMRAM     5     2      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _nrf24_flush_tx_rx                                    1     1      0    1421
                                             20 COMRAM     1     1      0
                  _SPI1_ExchangeByte
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_write_register                                 2     1      1    1390
                                             18 COMRAM     2     1      1
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_register                                  2     2      0      96
                                             18 COMRAM     2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_dynamic_payload_length                    1     1      0      65
                                             18 COMRAM     1     1      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _VerifyBoardAddress                                   8     6      2     251
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _ProcessAckPayload                                   44    41      3    2680
                                             31 COMRAM     8     5      3
                                              0 BANK0     36    36      0
               _ProcessActionRequest
                          _SendError
 ---------------------------------------------------------------------------------
 (3) _ProcessActionRequest                                 5     3      2    1145
                                             26 COMRAM     5     3      2
                          _SendError
 ---------------------------------------------------------------------------------
 (3) _SendError                                            2     2      0     993
                                             24 COMRAM     2     2      0
                      _QueueTXPacket
 ---------------------------------------------------------------------------------
 (4) _QueueTXPacket                                        7     4      3     705
                                             17 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           8     8      0     983
                                              9 COMRAM     8     8      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     983
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
              _TimerInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TimerInterruptHandler                                0     0      0     743
                           _SendPing
                            ___llmod
 ---------------------------------------------------------------------------------
 (9) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (9) _SendPing                                             1     1      0     432
                                              7 COMRAM     1     1      0
                    i2_QueueTXPacket
 ---------------------------------------------------------------------------------
 (10) i2_QueueTXPacket                                     7     4      3     342
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HandlePacketLoop
     _ProcessAckPayload
       _ProcessActionRequest
         _SendError
           _QueueTXPacket
       _SendError
     _VerifyBoardAddress
     _nrf24_flush_tx_rx
       _SPI1_ExchangeByte
       _nrf24_write_register
         _SPI1_ExchangeByte
     _nrf24_read_dynamic_payload_length
       _SPI1_ExchangeByte
     _nrf24_read_register
       _SPI1_ExchangeByte
     _nrf24_read_rf_data
       _nrf24_flush_tx_rx
       _nrf24_read_buff
         _SPI1_ExchangeByte
       _nrf24_write_register
     _nrf24_send_rf_data
       _nrf24_write_buff
         _SPI1_ExchangeByte
     _nrf24_write_register
   _InitRadio
     _nrf24_rf_init
       _SPI1_Open
     _nrf24_write_buff
     _nrf24_write_register
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _TimerInterruptHandler *
       _SendPing
         i2_QueueTXPacket
       ___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     110      47        7.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      6A       5       66.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      38       1       59.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlhh        27      0       0      45        0.0%
BITBIGSFRhhllh      26      0       0      41        0.0%
BITBIGSFRlhl        26      0       0      46        0.0%
BITBIGSFRhhlhh      1D      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhllll      6      0       0      43        0.0%
BITBIGSFRhl          6      0       0      44        0.0%
BITBIGSFRhhlhll      2      0       0      40        0.0%
BITBIGSFRhhlhlh      1      0       0      39        0.0%
BITBIGSFRhhlllh      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A2      32        0.0%
DATA                 0      0     1B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jul 15 17:27:41 2022

                        _SPI1_ExchangeByte 1A6E                                         l27 197A  
                                       l51 1AAE                                         l61 1A74  
                                       l63 1A82                                         l55 151E  
                                       l64 1A86                         ?_SPI1_ExchangeByte 0001  
                                      l110 1A9C                                        l113 1ACC  
                                      l142 19A4                                        l320 175A  
                                      l304 16FC                                        l323 1774  
                                      l315 120A                                        l411 1A34  
                                      l332 1694                                        l404 1ABE  
                                      l172 1AD6                                        l421 17A8  
                                      l327 17A6                                        l352 15AA  
                                      l433 17F4                                        l362 1A56  
                                      l418 1A14                                        l275 13A4  
                                      l268 12DA                                        l188 1AE0  
                                      l373 1A52                                        l381 1912  
                                      l285 1134                                        l366 1A6C  
                                      l359 1626                                        l383 1914  
                                      l287 10A6                                        l376 18D8  
                                      l369 1A36                                        l393 188A  
                                      l386 1844                                        u620 1480  
                                      u621 147C                    ProcessAckPayload@buffer 0020  
                                      u910 1A82                                        u911 1A7E  
                                      u920 1300                                        u921 12FC  
                                      u930 1316                                        u931 1312  
                                      u940 1328                                        u941 1324  
                                      u950 13A2                                        u951 139E  
                                      u960 15BC                                        u961 15B8  
                                      u970 15E8                                        u971 15E4  
                                      u980 15FA                                        u981 15F6  
                                      u990 160C                                        u991 1608  
                          _timer1ReloadVal 0037                        ??_SPI1_ExchangeByte 0012  
                                      prod 000FF3                                        tosl 000FFD  
                                      wreg 000FE8                         _nrf24_read_rf_data 19F4  
                           ?_nrf24_rf_init 0001                        VerifyBoardAddress@i 0018  
                                     l2301 1622                                       l1341 1950  
                                     l2061 1A94                                       l2303 1624  
                                     l1343 1960                                       l1351 1AAC  
                                     l2063 1A98                                       l2055 1A88  
                                     l2321 1662                                       l2305 162A  
                                     l2401 1A60                                       l1353 1ADE  
                                     l1345 1978                                       l2057 1A8C  
                                     l2323 1684                                       l2315 1634  
                                     l2307 162A                                       l2411 1A46  
                                     l2403 1A68                                       l2331 18EA  
                                     l1355 1AC0                                       l1347 1A9E  
                                     l2059 1A90                                       l2261 1306  
                                     l2317 1650                                       l2309 1630  
                                     l2413 1A4E                                       l2405 1A6A  
                                     l2341 17AA                                       l2421 1A06  
                                     l2333 18F8                                       l1349 1AAA  
                                     l2271 1356                                       l2263 1316  
                                     l2255 12E0                                       l2319 1652  
                                     l2431 169E                                       l2247 1A70  
                                     l2415 1A50                                       l2351 17CC  
                                     l2343 17B4                                       l2423 1A10  
                                     l2335 18FC                                       l2327 18DA  
                                     l2503 12A0                                       l2273 135E  
                                     l2265 1328                                       l2249 12DC  
                                     l2441 16FA                                       l2433 16D4  
                                     l2425 1696                                       l2409 1A38  
                                     l2361 17F2                                       l2353 17DA  
                                     l2345 17C2                                       l2337 18FE  
                                     l2329 18E2                                       l2521 1030  
                                     l2505 12C8                                       l2275 138E  
                                     l2259 1304                                       l2363 1756  
                                     l2451 1164                                       l2291 15D6  
                                     l2283 15AC                                       l2355 17DC  
                                     l2347 17C4                                       l2419 19F4  
                                     l2339 1900                                       l2531 107E  
                                     l2523 1040                                       l2515 100A  
                                     l2507 12CA                                       l2277 1390  
                                     l2269 132E                                       l2365 175C  
                                     l2453 118C                                       l2461 11E0  
                                     l2445 1136                                       l2437 16DA  
                                     l2293 15E8                                       l2285 15BC  
                                     l2357 17DE                                       l2349 17C6  
                                     l2381 1864                                       l2541 10C4  
                                     l2533 1086                                       l2509 1006  
                                     l2279 13A2                                       l2367 177A  
                                     l2631 11F4                                       l2455 1190  
                                     l2447 1148                                       l2439 16DE  
                                     l2295 15FA                                       l2287 15C6  
                                     l2359 17E4                                       l2383 1868  
                                     l2375 1846                                       l2391 1A16  
                                     l2551 10F4                                       l2535 1094  
                                     l2527 1056                                       l2519 102E  
                                     l1831 14E8                                       l1823 1472  
                                     l2471 1222                                       l2633 1798  
                                     l2369 1784                                       l2457 11C4  
                                     l2449 1158                                       l2297 160C  
                                     l2289 15D0                                       l2385 186A  
                                     l2377 184C                                       l2393 1A28  
                                     l2553 1104                                       l2545 10CC  
                                     l2537 10AC                                       l2529 107E  
                                     l1833 151C                                       l1825 1480  
                                     l2481 125C                                       l2473 1234  
                                     l2459 11D6                                       l2299 161C  
                                     l2387 187C                                       l2379 1854  
                                     l2395 1A2A                                       l2547 10E0  
                                     l2539 10B6                                       l1827 14C0  
                                     l2491 128E                                       l2483 1266  
                                     l2475 123E                                       l2467 120C  
                                     l2389 1888                                       l2397 1A32  
                                     l2557 1124                                       l2549 10EE  
                                     l1829 14C4                                       l2493 1290  
                                     l2485 1270                                       l2477 1248  
                                     l2469 1210                                       l1837 1ACE  
                                     l1941 1992                                       l2581 19E2  
                                     l2399 1A58                                       l2495 1294  
                                     l2487 127A                                       l2479 1252  
                                     l1943 1994                                       l1935 197C  
                                     l2583 19E6                                       l2575 19CE  
                                     l1961 1AB0                                       l2497 129C  
                                     l2489 1284                                       l1945 19A0  
                                     l1937 1988                                       l2585 19EA  
                                     l2577 19D2                                       l1963 1AB6  
                                     l1939 1990                                       l2579 19D4  
                                     l1965 1AB8                                       l1967 1ABA  
                                     l1969 1ABC                                       u1000 161C  
                                     u1001 1618                                       u1010 1662  
                                     u1011 165E                                       u1020 1912  
                                     u1100 1040                                       u1021 190E  
                                     u1101 103C                                       u1030 1774  
                                     u1110 1052                                       u1031 1770  
                                     u1111 104E                                       u1040 187C  
                                     u1120 1094                                       u1041 1878  
                                     u1121 1090                                       u1050 16D4  
                                     u1130 10A2                                       u1051 16D0  
                                     u1131 109E                                       u1060 16FA  
                                     u1140 10C4                                       u1061 16F6  
                                     u1141 10C0                                       u1070 11C4  
                                     u1150 10EE                                       u1071 11C0  
                                     u1207 17BA                                       u1151 10EA  
                                     u1160 1120                                       u1080 12DA  
                                     u1217 17D2                                       u1161 111C  
                                     u1081 12D6                                       u1090 102A  
                                     u1227 17EA                                       u1091 1026  
                                     u1237 1A48                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     u1197 1A2C                                       _TMR1 000FCE  
                      ?_nrf24_read_rf_data 0018                                       _WPUB 000F61  
                               InitRadio@i 0018           nrf24_read_register@mnemonic_addr 0013  
                                     _main 19CE                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                                       btemp 0039  
                 ProcessAckPayload@pktType 00C1                                       prodh 000FF4  
                                     prodl 000FF3                                       start 007C  
             __end_of_nrf24_write_register 1628                  __end_of_SPI1_ExchangeByte 1A88  
               ??_TMR1_SetInterruptHandler 0014                               ___param_bank 000000  
                      _nrf24_read_register 1A54                       ??_nrf24_read_rf_data 001B  
            __end_of_OSCILLATOR_Initialize 1ACE                                      ?_main 0001  
                 ProcessActionRequest@data 001B           SPI1_Open@spi1UniqueConfiguration 0013  
            nrf24_write_buff@mnemonic_addr 0016                                      _T1CON 000FCD  
                          __end_of___llmod 15A8                                      i2l156 19CC  
                                    i2l175 1AE2                                      i2l337 18D4  
                                    i2l169 194E                                      i2l275 146E  
                                    i2l197 0058                                      i2l298 1840  
                                    i2l862 1596                                      i2l869 15A6  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _Ticks 0031  
                         __end_of_TMR1_ISR 1950                       ?_nrf24_read_register 0001  
                  __end_of_TMR1_Initialize 19A6                                      pclath 000FFA  
                                    pclatu 000FFB                                      tablat 000FF5  
                 nrf24_read_rf_data@buffer 0018                                      ttemp5 003A  
                                    ttemp6 003D                                      ttemp7 0041  
                                    status 000FD8                                      wtemp8 003A  
                 __end_of_nrf24_write_buff 1916                            _TMR1_WriteTimer 19A6  
                               SendError@i 001A                           ?_nrf24_read_buff 0013  
                          __initialization 16FE                               __end_of_main 19F4  
                  ??_TimerInterruptHandler 000A                        QueueTXPacket@buffer 0012  
               __end_of_VerifyBoardAddress 16FE                ?_INTERRUPT_InterruptManager 0001  
                                   ??_main 002B                           __end_of_SendPing 18D6  
                            __activetblptr 000003                            ??_nrf24_rf_init 0014  
                    ??_nrf24_read_register 0013                           ___llmod@dividend 0001  
                       _nrf24_send_rf_data 1A16                                     _ANSELA 000F38  
                                   _ANSELB 000F39                                     _ANSELC 000F3A  
                                   _T1GCON 000FCC                    TMR1_WriteTimer@timerVal 0001  
                                   i2l2053 183C                                     i2l2047 17F6  
                                   i2l2071 1936                                     i2l2049 1802  
                                   i2l2065 1916                                     i2l2067 1918  
                                   i2l2069 1924                                     i2l2183 002A  
                                   i2l1801 13D0                                     i2l2185 0038  
                                   i2l1811 1420                                     i2l1803 13E0  
                                   i2l2187 0046                                     i2l1813 1428  
                                   i2l1805 13F2                                     i2l2189 0054  
                                   i2l1815 1458                                     i2l1817 145A  
                                   i2l1809 13F8                                     i2l1921 1536  
                                   i2l1819 146C                                     i2l1931 1586  
                                   i2l1923 153E                                     i2l1933 1590  
                                   i2l1925 154A                                     i2l1951 19B6  
                                   i2l1927 1558                                     i2l1919 1520  
                                   i2l1953 19BA                                     i2l1881 1896  
                                   i2l1929 1576                                     i2l1955 19BE  
                                   i2l1947 19A6                                     i2l1795 13AA  
                                   i2l1883 18B2                                     i2l1875 188C  
                                   i2l1949 19B4                                     i2l1957 19C4  
                                   i2l1789 13A6                                     i2l1885 18B4  
                                   i2l1959 19C8                                     i2l1799 13CE  
                                   i2l1887 18C4                                     _OSCCON 000FD3  
                        i2QueueTXPacket@sz 0003                        ?_nrf24_send_rf_data 0018  
                        __end_of_SPI1_Open 1520       __end_of_TMR1_DefaultInterruptHandler 1AE4  
             _TMR1_DefaultInterruptHandler 1AE2                                  ??___llmod 0009  
                                   _config 002B                                     clear_0 1726  
                                   clear_1 1738                                     clear_2 1744  
                                   isa$std 000001                            i2_QueueTXPacket 13A6  
                     ??_nrf24_send_rf_data 001B                               __mediumconst 0000  
                     _nrf24_write_register 15A8                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
 TMR1_SetInterruptHandler@InterruptHandler 0012                    __end_of_TMR1_WriteTimer 19CE  
                         ?_TMR1_Initialize 0001                          _SYSTEM_Initialize 1A88  
                        ?_HandlePacketLoop 0001                                 __accesstop 0060  
                  __end_of__initialization 174A                         ?_SYSTEM_Initialize 0001  
                       ??_HandlePacketLoop 0028                              ___rparam_used 000001  
                           __pcstackCOMRAM 0001                               __pidataBANK0 1AD8  
                      ??_SYSTEM_Initialize 0014                                  ?_TMR1_ISR 0001  
          fp__TMR1_DefaultInterruptHandler 0000              ?_TMR1_DefaultInterruptHandler 0001  
                        ??_SPI1_Initialize 0012                      SPI1_ExchangeByte@data 0012  
                        __end_of_InitRadio 12DC                         _spi1_configuration 1001  
                    ?_nrf24_write_register 0013                          HandlePacketLoop@i 002A  
                        __end_of_SendError 1696                  __end_of_SYSTEM_Initialize 1A9E  
               VerifyBoardAddress@bufferRX 0012                                 __pbssBANK0 0060  
                               __pnvCOMRAM 0035                                  ?_SendPing 0001  
                    __end_of_QueueTXPacket 13A6                    __end_ofi2_QueueTXPacket 1470  
                               ??_TMR1_ISR 000A  __end_of_nrf24_read_dynamic_payload_length 1A54  
      ??_nrf24_read_dynamic_payload_length 0013         ?_nrf24_read_dynamic_payload_length 0001  
        _nrf24_read_dynamic_payload_length 1A36                                    _OSCCON2 000FD2  
                                  i2u60_40 13F2                                    i2u60_41 13EE  
                                  i2u61_40 146C                                    i2u61_41 1468  
                                  i2u70_40 19B4                                    i2u70_41 19B0  
                                  _OSCTUNE 000F9B                                    i2u64_40 18C4  
                                  i2u64_41 18C0                                    i2u58_40 13CA  
                                  i2u74_40 1838                                    i2u90_40 0054  
                                  i2u58_41 13C6                                    i2u74_41 1834  
                                  i2u90_41 0050                                    i2u59_40 13E0  
                                  i2u67_40 1536                                    i2u75_40 1936  
                                  i2u59_41 13DC                                    i2u67_41 1532  
                                  i2u75_41 1932                                    i2u68_40 1558  
                                  i2u68_41 1554                                    i2u69_40 1576  
                                  i2u76_48 193C                                    i2u69_41 1572  
                                  i2u76_49 194E                                    i2u88_40 0038  
                                  i2u88_41 0034                                    _SSP1ADD 000FC8  
                                  i2u89_40 0046                                    i2u89_41 0042  
                                  _SSP1BUF 000FC9                           ?_TMR1_WriteTimer 0001  
                        ?_nrf24_write_buff 0013                                 ??_SendPing 0008  
                                  __Hparam 0000                                    __Lparam 0000  
                       ??_nrf24_write_buff 0016                                    ___llmod 1520  
                             __psmallconst 1000              __end_of_TimerInterruptHandler 1842  
                                  __pcinit 16FE                                    __ramtop 1000  
                                  __ptext0 19CE                                    __ptext1 1A88  
                                  __ptext2 197C                                    __ptext3 1ACE  
                                  __ptext4 1A9E                                    __ptext5 1950  
                                  __ptext6 1AC0                                    __ptext7 1ADE  
                                  __ptext8 120C                                    __ptext9 1AB0  
           ??_TMR1_DefaultInterruptHandler 0001                     ??_nrf24_write_register 0014  
                                _T1CONbits 000FCD                      _OSCILLATOR_Initialize 1AC0  
                 ??_PIN_MANAGER_Initialize 0012                  ?_TMR1_SetInterruptHandler 0012  
                       _VerifyBoardAddress 1696                       end_of_initialization 174A  
                      ?_VerifyBoardAddress 0012                                    postdec1 000FE5  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                           ?i2_QueueTXPacket 0001  
                                _SPI1_Open 1470                __end_of_nrf24_read_register 1A6E  
                     ??_VerifyBoardAddress 0014     nrf24_read_dynamic_payload_length@byte0 0013  
                        _nrf24_flush_tx_rx 17A8                      nrf24_read_buff@buffer 0013  
                                _TRISCbits 000F94                      __end_of_nrf24_rf_init 1AC0  
                       ?_nrf24_flush_tx_rx 0001                            QueueTXPacket@sz 0014  
                      ??_nrf24_flush_tx_rx 0015                            _SPI1_Initialize 1A9E  
                 nrf24_send_rf_data@buffer 0018               __end_of_INTERRUPT_Initialize 1AE2  
                               ?_SPI1_Open 0001                     ?_OSCILLATOR_Initialize 0001  
                __end_of_nrf24_flush_tx_rx 17F6                   fp__TimerInterruptHandler 0000  
                      start_initialization 16FE                                  SendPing@i 0008  
                                _InitRadio 120C                     HandlePacketLoop@status 0029  
                                _SendError 1628                            ___llmod@divisor 0005  
                          ___llmod@counter 0009                           i2QueueTXPacket@i 0007  
                         i2QueueTXPacket@j 0006                   nrf24_read_register@byte0 0014  
                       HandlePacketLoop@sz 0028               __end_of_ProcessActionRequest 17A8  
                              __pdataBANK0 00C4          nrf24_write_register@mnemonic_addr 0014  
                              __pbssBIGRAM 00CA                                __pbssCOMRAM 002B  
                            __pcstackBANK0 00A0                                 ?_InitRadio 0001  
                        ??_nrf24_read_buff 0016                    __end_of_SPI1_Initialize 1AB0  
             nrf24_read_buff@mnemonic_addr 0016                                 ?_SendError 0001  
                   _PIN_MANAGER_Initialize 1950                  ProcessAckPayload@actionID 00C0  
                                __pintcode 0008           __end_of_TMR1_SetInterruptHandler 1AD8  
                         nrf24_read_buff@i 0017                  nrf24_write_register@value 0013  
                                 ?___llmod 0001                                ??_SPI1_Open 0012  
             ??_INTERRUPT_InterruptManager 000A                        ProcessAckPayload@sz 0022  
                              __smallconst 1000                                  _packetsTX 00CA  
                     _INTERRUPT_Initialize 1ADE                                   _LATAbits 000F89  
                                 _LATCbits 000F8B                                   _PIE1bits 000F9D  
                                 _PIR1bits 000F9E                                   _RCONbits 000FD0  
               __end_of_nrf24_read_rf_data 1A16                                   _SSP1CON1 000FC6  
                                 _SSP1CON2 000FC5                                   _TMR1_ISR 1916  
                                 _SSP1STAT 000FC7                           _HandlePacketLoop 1006  
                     nrf24_read_buff@bytes 0015                          ??_TMR1_Initialize 0014  
                           QueueTXPacket@i 0018                             QueueTXPacket@j 0017  
                    _TimerInterruptHandler 17F6                      ProcessAckPayload@data 00A0  
                              ??_InitRadio 0018                           ?_SPI1_Initialize 0001  
                              _INTCON2bits 000FF1                                  copy_data0 1712  
                    ?_INTERRUPT_Initialize 0001                       _ProcessActionRequest 1754  
                              ??_SendError 0019                                   _SendPing 188C  
                                 __Hrparam 0000                                   __Lrparam 0000  
                        _ProcessAckPayload 1136                              _QueueTXPacket 12DC  
                       ?_ProcessAckPayload 0020                    ??_OSCILLATOR_Initialize 0012  
                 _TMR1_SetInterruptHandler 1ACE                       nrf24_read_rf_data@sz 001A  
                    _TMR1_InterruptHandler 0035                        ??_ProcessAckPayload 0023  
                       SendError@errorCode 0019                                   __ptext10 1470  
                                 __ptext11 1006                                   __ptext20 1A6E  
                                 __ptext12 1A16                                   __ptext21 1696  
                                 __ptext13 18D6                                 _T1GCONbits 000FCC  
                                 __ptext30 1520                                   __ptext22 1136  
                                 __ptext14 19F4                                   __ptext31 188C  
                                 __ptext23 1754                                   __ptext15 1842  
                                 __ptext32 13A6                                   __ptext24 1628  
                                 __ptext16 17A8                                   __ptext33 19A6  
                                 __ptext25 12DC                                   __ptext17 15A8  
                                 __ptext34 0000                                   __ptext18 1A54  
                                 __ptext27 1916                                   __ptext19 1A36  
                                 __ptext28 1AE2                                   __ptext29 17F6  
                             _SSP1CON1bits 000FC6                                   _bufferRX 0060  
                                 _bufferTX 0080                      ?_ProcessActionRequest 001B  
                       ProcessAckPayload@i 00C2                          _DEFAULT_PIPE_ADDR 00C4  
                __end_of_ProcessAckPayload 120C                             ?_QueueTXPacket 0012  
                                 isa$xinst 000000                          nrf24_write_buff@i 0017  
                                 int$flags 0039               ProcessActionRequest@actionID 001F  
                          _nrf24_read_buff 1842         __end_of_INTERRUPT_InterruptManager 007C  
               _INTERRUPT_InterruptManager 0008                          ??_TMR1_WriteTimer 0003  
               __end_of_nrf24_send_rf_data 1A36                     ?_TimerInterruptHandler 0001  
                         _nrf24_write_buff 18D6                                 _INTCONbits 000FF2  
                   ??_INTERRUPT_Initialize 0012                                   intlevel2 0000  
                  ?_PIN_MANAGER_Initialize 0001                     nrf24_write_buff@buffer 0013  
                    i2QueueTXPacket@buffer 0001                      nrf24_write_buff@bytes 0015  
                            _nrf24_rf_init 1AB0                       nrf24_send_rf_data@sz 001A  
                   ??_ProcessActionRequest 001D                          ??i2_QueueTXPacket 0004  
                 __end_of_HandlePacketLoop 1136             __end_of_PIN_MANAGER_Initialize 197C  
                          ??_QueueTXPacket 0015                    __end_of_nrf24_read_buff 188C  
                          _TMR1_Initialize 197C                 __end_of_spi1_configuration 1005  
